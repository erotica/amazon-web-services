swagger: "2.0"
info:
  title: AWS AppStream 2.0 API
  description: Amazon AppStream 2.0 is a fully managed, secure application streaming
    service that allows you to stream desktop applications from AWS to any device
    running a web browser, without rewriting them. Amazon AppStream 2.0 provides users
    instant-on access to the applications they need, and a responsive, fluid user
    experience on the device of their choice.
  version: 1.0.0
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /?Action=AssociateFleet&k=1:
    get:
      summary: Associate a fleet to a stack.
      description: Associate a fleet to a stack.
      operationId: AssociateFleet
      parameters:
      - in: query
        name: FleetName
        description: The name of the fleet to associate.
        type: string
      - in: query
        name: StackName
        description: The name of the stack to which the fleet is associated.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=CreateFleet&k=1:
    get:
      summary: Creates a new fleet.
      description: Creates a new fleet.
      operationId: CreateFleet
      parameters:
      - in: query
        name: ComputeCapacity
        description: The parameters for the capacity allocated to the fleet.
        type: string
      - in: query
        name: Description
        description: The description of the fleet.
        type: string
      - in: query
        name: DisconnectTimeoutInSeconds
        description: The time after disconnection when a session is considered to
          have ended. If a user            who got disconnected reconnects within
          this timeout interval, the user is connected back            to his/her
          previous session.
        type: string
      - in: query
        name: DisplayName
        description: The display name of the fleet.
        type: string
      - in: query
        name: ImageName
        description: Unique name of the image used by the fleet.
        type: string
      - in: query
        name: InstanceType
        description: The instance type of compute resources for the fleet. Fleet instances
          are launched            from this instance type.
        type: string
      - in: query
        name: MaxUserDurationInSeconds
        description: The maximum time up to which a streaming session can run.
        type: string
      - in: query
        name: Name
        description: A unique identifier for the fleet.
        type: string
      - in: query
        name: VpcConfig
        description: The VPC configuration for the fleet.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=CreateStack&k=1:
    get:
      summary: Create a new stack.
      description: Create a new stack.
      operationId: CreateStack
      parameters:
      - in: query
        name: Description
        description: The description displayed to end users on the AppStream 2.0 portal.
        type: string
      - in: query
        name: DisplayName
        description: The name displayed to end users on the AppStream 2.0 portal.
        type: string
      - in: query
        name: Name
        description: The unique identifier for this stack.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=CreateStreamingURL&k=1:
    get:
      summary: Creates a URL to start an AppStream 2.
      description: Creates a URL to start an AppStream 2.
      operationId: CreateStreamingURL
      parameters:
      - in: query
        name: ApplicationId
        description: The ID of the application that must be launched after the session
          starts.
        type: string
      - in: query
        name: FleetName
        description: The fleet for which the URL is generated.
        type: string
      - in: query
        name: SessionContext
        description: The sessionContext of the streaming URL.
        type: string
      - in: query
        name: StackName
        description: The stack for which the URL is generated.
        type: string
      - in: query
        name: UserId
        description: A unique user ID for whom the URL is generated.
        type: string
      - in: query
        name: Validity
        description: The validity duration of the URL in seconds. After this duration,
          the URL returned            by this operation becomes invalid.
        type: string
      responses:
        200:
          description: OK
      tags:
      - URL
  /?Action=DeleteFleet&k=1:
    get:
      summary: Deletes a fleet.
      description: Deletes a fleet.
      operationId: DeleteFleet
      parameters:
      - in: query
        name: Name
        description: The name of the fleet to be deleted.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=DeleteStack&k=1:
    get:
      summary: Deletes the stack.
      description: Deletes the stack.
      operationId: DeleteStack
      parameters:
      - in: query
        name: Name
        description: The name of the stack to delete.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Stack
  /?Action=DescribeFleets&k=1:
    get:
      summary: If fleet names are provided, this operation describes the specified
        fleets;n            otherwise, all the fleets in the account are described.
      description: If fleet names are provided, this operation describes the specified
        fleets;            otherwise, all the fleets in the account are described.
      operationId: DescribeFleets
      parameters:
      - in: query
        name: Names
        description: The fleet names to describe. Use null to describe all the fleets
          for the AWS            account.
        type: string
      - in: query
        name: NextToken
        description: The pagination token to use to retrieve the next page of results
          for this operation. If this value is null, it retrieves the first page.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=DescribeImages&k=1:
    get:
      summary: Describes the images.
      description: Describes the images.
      operationId: DescribeImages
      parameters:
      - in: query
        name: Names
        description: A specific list of images to describe.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Images
  /?Action=DescribeSessions&k=1:
    get:
      summary: Describes the streaming sessions for a stack and a fleet.
      description: Describes the streaming sessions for a stack and a fleet.
      operationId: DescribeSessions
      parameters:
      - in: query
        name: FleetName
        description: The name of the fleet for which to list sessions.
        type: string
      - in: query
        name: Limit
        description: The size of each page of results. The default value is 20 and
          the maximum supported            value is 50.
        type: string
      - in: query
        name: NextToken
        description: The pagination token to use to retrieve the next page of results
          for this operation. If this value is null, it retrieves the first page.
        type: string
      - in: query
        name: StackName
        description: The name of the stack for which to list sessions.
        type: string
      - in: query
        name: UserId
        description: The user for whom to list sessions. Use null to describe all
          the sessions for the            stack and fleet.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Sessions
  /?Action=DescribeStacks&k=1:
    get:
      summary: If stack names are not provided, this operation describes the specified
        stacks;n            otherwise, all stacks in the account are described.
      description: If stack names are not provided, this operation describes the specified
        stacks;            otherwise, all stacks in the account are described.
      operationId: DescribeStacks
      parameters:
      - in: query
        name: Names
        description: The stack names to describe. Use null to describe all the stacks
          for the AWS            account.
        type: string
      - in: query
        name: NextToken
        description: The pagination token to use to retrieve the next page of results
          for this operation. If this value is null, it retrieves the first page.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Stacks
  /?Action=DisassociateFleet&k=1:
    get:
      summary: Disassociates a fleet from a stack.
      description: Disassociates a fleet from a stack.
      operationId: DisassociateFleet
      parameters:
      - in: query
        name: FleetName
        description: The name of the fleet to disassociate.
        type: string
      - in: query
        name: StackName
        description: The name of the stack with which the fleet is associated.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=ExpireSession&k=1:
    get:
      summary: This operation immediately stops a streaming session.
      description: This operation immediately stops a streaming session.
      operationId: ExpireSession
      parameters:
      - in: query
        name: SessionId
        description: The unique identifier of the streaming session to be stopped.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Session
  /?Action=ListAssociatedFleets&k=1:
    get:
      summary: Lists all fleets associated with the stack.
      description: Lists all fleets associated with the stack.
      operationId: ListAssociatedFleets
      parameters:
      - in: query
        name: NextToken
        description: The pagination token to use to retrieve the next page of results
          for this operation. If this value is null, it retrieves the first page.
        type: string
      - in: query
        name: StackName
        description: The name of the stack whose associated fleets are listed.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=ListAssociatedStacks&k=1:
    get:
      summary: Lists all stacks to which the specified fleet is associated.
      description: Lists all stacks to which the specified fleet is associated.
      operationId: ListAssociatedStacks
      parameters:
      - in: query
        name: FleetName
        description: The name of the fleet whose associated stacks are listed.
        type: string
      - in: query
        name: NextToken
        description: The pagination token to use to retrieve the next page of results
          for this operation. If this value is null, it retrieves the first page.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Stack
  /?Action=StartFleet&k=1:
    get:
      summary: Starts a fleet.
      description: Starts a fleet.
      operationId: StartFleet
      parameters:
      - in: query
        name: Name
        description: The name of the fleet to start.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=StopFleet&k=1:
    get:
      summary: Stops a fleet.
      description: Stops a fleet.
      operationId: StopFleet
      parameters:
      - in: query
        name: Name
        description: The name of the fleet to stop.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=UpdateFleet&k=1:
    get:
      summary: Updates an existing fleet.
      description: Updates an existing fleet.
      operationId: UpdateFleet
      parameters:
      - in: query
        name: ComputeCapacity
        description: The parameters for the capacity allocated to the fleet.
        type: string
      - in: query
        name: DeleteVpcConfig
        description: Delete the VPC association for the specified fleet.
        type: string
      - in: query
        name: Description
        description: The description displayed to end users on the AppStream 2.0 portal.
        type: string
      - in: query
        name: DisconnectTimeoutInSeconds
        description: The time after disconnection when a session is considered to
          have ended. When the            user reconnects after a disconnection, the
          user is connected to the same instance within            this time interval.
        type: string
      - in: query
        name: DisplayName
        description: The name displayed to end users on the AppStream 2.0 portal.
        type: string
      - in: query
        name: ImageName
        description: The image name from which a fleet is created.
        type: string
      - in: query
        name: InstanceType
        description: The instance type of compute resources for the fleet. Fleet instances
          are launched            from this instance type.
        type: string
      - in: query
        name: MaxUserDurationInSeconds
        description: The maximum time during which a streaming session can run.
        type: string
      - in: query
        name: Name
        description: The name of the fleet.
        type: string
      - in: query
        name: VpcConfig
        description: The VPC configuration for the fleet.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Fleet
  /?Action=UpdateStack&k=1:
    get:
      summary: Updates the specified fields in the stack with the specified name.
      description: Updates the specified fields in the stack with the specified name.
      operationId: UpdateStack
      parameters:
      - in: query
        name: Description
        description: The description displayed to end users on the AppStream 2.0 portal.
        type: string
      - in: query
        name: DisplayName
        description: The name displayed to end users on the AppStream 2.0 portal.
        type: string
      - in: query
        name: Name
        description: The name of the stack to update.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Stack
definitions: []