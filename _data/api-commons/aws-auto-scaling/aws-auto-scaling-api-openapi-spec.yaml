swagger: "2.0"
info:
  title: AWS Auto Scaling API
  version: 1.0.0
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /?Action=AttachInstances&k=1:
    get:
      summary: Attaches one or more EC2 instances to the specified Auto Scaling group.
      description: Attaches one or more EC2 instances to the specified Auto Scaling
        group.
      operationId: AttachInstances
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: InstanceIds.member.N
        description: One or more instance IDs.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Server Instance
  /?Action=AttachLoadBalancers&k=1:
    get:
      summary: Attaches one or more Classic load balancers to the specified Auto Scaling
        group.
      description: Attaches one or more Classic load balancers to the specified Auto
        Scaling group.
      operationId: AttachLoadBalancers
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: LoadBalancerNames.member.N
        description: One or more load balancer names.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Load Balancers
  /?Action=AttachLoadBalancerTargetGroups&k=1:
    get:
      summary: Attaches one or more target groups to the specified Auto Scaling group.
      description: Attaches one or more target groups to the specified Auto Scaling
        group.
      operationId: AttachLoadBalancerTargetGroups
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: TargetGroupARNs.member.N
        description: The Amazon Resource Names (ARN) of the target groups.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Load Balancers
  /?Action=CompleteLifecycleAction&k=1:
    get:
      summary: Completes the lifecycle action for the specified token or instance
        with the specified result.
      description: Completes the lifecycle action for the specified token or instance
        with the specified result.
      operationId: CompleteLifecycleAction
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group for the lifecycle hook.
        type: string
      - in: query
        name: InstanceId
        description: The ID of the instance.
        type: string
      - in: query
        name: LifecycleActionResult
        description: The action for the group to take. This parameter can be either
          CONTINUE or ABANDON.
        type: string
      - in: query
        name: LifecycleActionToken
        description: A universally unique identifier (UUID) that identifies a specific
          lifecycle action associated with an instance. Auto Scaling sends this token
          to the notification target you specified when you created the lifecycle
          hook.
        type: string
      - in: query
        name: LifecycleHookName
        description: The name of the lifecycle hook.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Life Cycle
  /?Action=CreateAutoScalingGroup&k=1:
    get:
      summary: Creates an Auto Scaling group with the specified name and attributes.
      description: Creates an Auto Scaling group with the specified name and attributes.
      operationId: CreateAutoScalingGroup
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group. This name must be unique within the scope
          of your AWS account.
        type: string
      - in: query
        name: AvailabilityZones.member.N
        description: One or more Availability Zones for the group. This parameter
          is optional if you specify one or more subnets.
        type: string
      - in: query
        name: DefaultCooldown
        description: The amount of time, in seconds, after a scaling activity completes
          before another scaling activity can start. The default is 300.
        type: string
      - in: query
        name: DesiredCapacity
        description: The number of EC2 instances that should be running in the group.
          This number must be greater than or equal to the minimum size of the group
          and less than or equal to the maximum size of the group.
        type: string
      - in: query
        name: HealthCheckGracePeriod
        description: The amount of time, in seconds, that Auto Scaling waits before
          checking the health status of an EC2 instance that has come into service.
          During this time, any health check failures for the instance are ignored.
          The default is 0.
        type: string
      - in: query
        name: HealthCheckType
        description: The service to use for the health checks.            The valid
          values are EC2 and ELB.
        type: string
      - in: query
        name: InstanceId
        description: The ID of the instance used to create a launch configuration
          for the group. Alternatively, specify a launch configuration instead of
          an EC2 instance.
        type: string
      - in: query
        name: LaunchConfigurationName
        description: The name of the launch configuration. Alternatively, specify
          an EC2 instance instead of a launch configuration.
        type: string
      - in: query
        name: LoadBalancerNames.member.N
        description: One or more Classic load balancers. To specify an Application
          load balancer,            use TargetGroupARNs instead.
        type: string
      - in: query
        name: MaxSize
        description: The maximum size of the group.
        type: string
      - in: query
        name: MinSize
        description: The minimum size of the group.
        type: string
      - in: query
        name: NewInstancesProtectedFromScaleIn
        description: Indicates whether newly launched instances are protected from
          termination by Auto Scaling when scaling in.
        type: string
      - in: query
        name: PlacementGroup
        description: The name of the placement group into which youll launch your
          instances, if any. For more information, see             Placement Groups            in
          the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: Tags.member.N
        description: One or more tags.
        type: string
      - in: query
        name: TargetGroupARNs.member.N
        description: The Amazon Resource Names (ARN) of the target groups.
        type: string
      - in: query
        name: TerminationPolicies.member.N
        description: One or more termination policies used to select the instance
          to terminate. These policies are executed in the order that they are listed.
        type: string
      - in: query
        name: VPCZoneIdentifier
        description: A comma-separated list of subnet identifiers for your virtual
          private cloud (VPC).
        type: string
      responses:
        200:
          description: OK
      tags:
      - Auto Scaling Groups
  /?Action=CreateLaunchConfiguration&k=1:
    get:
      summary: Creates a launch configuration.
      description: Creates a launch configuration.
      operationId: CreateLaunchConfiguration
      parameters:
      - in: query
        name: AssociatePublicIpAddress
        description: Used for groups that launch instances into a virtual private
          cloud (VPC).             Specifies whether to assign a public IP address
          to each instance. For more information, see             Launching Auto Scaling
          Instances in a VPC            in the Auto Scaling User Guide.
        type: string
      - in: query
        name: BlockDeviceMappings.member.N
        description: One or more mappings that specify how block devices are exposed
          to the instance.           For more information, see            Block Device
          Mapping           in the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: ClassicLinkVPCId
        description: The ID of a ClassicLink-enabled VPC to link your EC2-Classic
          instances to.             This parameter is supported only if you are launching
          EC2-Classic instances.             For more information, see ClassicLink             in
          the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: ClassicLinkVPCSecurityGroups.member.N
        description: The IDs of one or more security groups for the specified ClassicLink-enabled
          VPC.            This parameter is required if you specify a ClassicLink-enabled
          VPC, and is not supported otherwise.             For more information, see
          ClassicLink             in the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: EbsOptimized
        description: Indicates whether the instance is optimized for Amazon EBS I/O.
          By default,            the instance is not optimized for EBS I/O. The optimization
          provides            dedicated throughput to Amazon EBS and an optimized
          configuration stack to provide            optimal I/O performance. This
          optimization is not available with all instance            types. Additional
          usage charges apply. For more information, see            Amazon EBS-Optimized
          Instances                       in the Amazon Elastic Compute Cloud User
          Guide.
        type: string
      - in: query
        name: IamInstanceProfile
        description: The name or the Amazon Resource Name (ARN) of the instance profile
          associated with the IAM role for the instance.
        type: string
      - in: query
        name: ImageId
        description: The ID of the Amazon Machine Image (AMI) to use to launch your
          EC2 instances.            For more information, see Finding an AMI            in
          the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: InstanceId
        description: The ID of the instance to use to create the launch configuration.
        type: string
      - in: query
        name: InstanceMonitoring
        description: Enables detailed monitoring (true) or basic monitoring (false)
          for the Auto Scaling instances.
        type: string
      - in: query
        name: InstanceType
        description: The instance type of the EC2 instance.            For information
          about available instance types,            see                 Available
          Instance Types in the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: KernelId
        description: The ID of the kernel associated with the AMI.
        type: string
      - in: query
        name: KeyName
        description: The name of the key pair. For more information, see Amazon EC2
          Key Pairs in the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: LaunchConfigurationName
        description: The name of the launch configuration. This name must be unique
          within the scope of your AWS account.
        type: string
      - in: query
        name: PlacementTenancy
        description: The tenancy of the instance. An instance with a tenancy of dedicated
          runs on single-tenant hardware and can only be launched into a VPC.
        type: string
      - in: query
        name: RamdiskId
        description: The ID of the RAM disk associated with the AMI.
        type: string
      - in: query
        name: SecurityGroups.member.N
        description: One or more security groups with which to associate the instances.
        type: string
      - in: query
        name: SpotPrice
        description: The maximum hourly price to be paid for any Spot Instance launched
          to fulfill the request. Spot Instances are launched when the            price
          you specify exceeds the current Spot market price. For more information,
          see           Launching Spot Instances in Your Auto Scaling Group            in
          the Auto Scaling User Guide.
        type: string
      - in: query
        name: UserData
        description: The user data to make available to the launched EC2 instances.
          For more information, see            Instance Metadata and User Data           in
          the Amazon Elastic Compute Cloud User Guide.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Launch
  /?Action=CreateOrUpdateTags&k=1:
    get:
      summary: Creates or updates tags for the specified Auto Scaling group.
      description: Creates or updates tags for the specified Auto Scaling group.
      operationId: CreateOrUpdateTags
      parameters:
      - in: query
        name: Tags.member.N
        description: One or more tags.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tags
  /?Action=DeleteAutoScalingGroup&k=1:
    get:
      summary: Deletes the specified Auto Scaling group.
      description: Deletes the specified Auto Scaling group.
      operationId: DeleteAutoScalingGroup
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group to delete.
        type: string
      - in: query
        name: ForceDelete
        description: Specifies that the group will be deleted along with all instances
          associated with the group, without waiting for all instances to be terminated.
          This parameter also deletes any lifecycle actions associated with the group.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Auto Scaling Groups
  /?Action=DeleteLaunchConfiguration&k=1:
    get:
      summary: Deletes the specified launch configuration.
      description: Deletes the specified launch configuration.
      operationId: DeleteLaunchConfiguration
      parameters:
      - in: query
        name: LaunchConfigurationName
        description: The name of the launch configuration.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Launch
  /?Action=DeleteLifecycleHook&k=1:
    get:
      summary: Deletes the specified lifecycle hook.
      description: Deletes the specified lifecycle hook.
      operationId: DeleteLifecycleHook
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group for the lifecycle hook.
        type: string
      - in: query
        name: LifecycleHookName
        description: The name of the lifecycle hook.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Life Cycle
  /?Action=DeleteNotificationConfiguration&k=1:
    get:
      summary: Deletes the specified notification.
      description: Deletes the specified notification.
      operationId: DeleteNotificationConfiguration
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: TopicARN
        description: The Amazon Resource Name (ARN) of the Amazon Simple Notification
          Service (SNS) topic.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Notifications
  /?Action=DeletePolicy&k=1:
    get:
      summary: Deletes the specified Auto Scaling policy.
      description: Deletes the specified Auto Scaling policy.
      operationId: DeletePolicy
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: PolicyName
        description: The name or Amazon Resource Name (ARN) of the policy.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Policies
  /?Action=DeleteScheduledAction&k=1:
    get:
      summary: Deletes the specified scheduled action.
      description: Deletes the specified scheduled action.
      operationId: DeleteScheduledAction
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: ScheduledActionName
        description: The name of the action to delete.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Scheduled Action
  /?Action=DeleteTags&k=1:
    get:
      summary: Deletes the specified tags.
      description: Deletes the specified tags.
      operationId: DeleteTags
      parameters:
      - in: query
        name: Tags.member.N
        description: One or more tags.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tags
  /?Action=DescribeAccountLimits&k=1:
    get:
      summary: Describes the current Auto Scaling resource limits for your AWS account.
      description: Describes the current Auto Scaling resource limits for your AWS
        account.
      operationId: DescribeAccountLimits
      parameters:
      - in: query
        name: MaxNumberOfAutoScalingGroups
        description: The maximum number of groups allowed for your AWS account. The
          default limit is 20 per region.
        type: string
      - in: query
        name: MaxNumberOfLaunchConfigurations
        description: The maximum number of launch configurations allowed for your
          AWS account. The default limit is 100 per region.
        type: string
      - in: query
        name: NumberOfAutoScalingGroups
        description: The current number of groups for your AWS account.
        type: string
      - in: query
        name: NumberOfLaunchConfigurations
        description: The current number of launch configurations for your AWS account.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Account Limits
  /?Action=DescribeAdjustmentTypes&k=1:
    get:
      summary: Describes the policy adjustment types for use with.
      description: Describes the policy adjustment types for use with.
      operationId: DescribeAdjustmentTypes
      parameters:
      - in: query
        name: AdjustmentTypes.member.N
        description: The policy adjustment types.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Adjustment Types
  /?Action=DescribeAutoScalingGroups&k=1:
    get:
      summary: Describes one or more Auto Scaling groups.
      description: Describes one or more Auto Scaling groups.
      operationId: DescribeAutoScalingGroups
      parameters:
      - in: query
        name: AutoScalingGroupNames.member.N
        description: The group names. If you omit this parameter, all Auto Scaling
          groups are described.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Auto Scaling Groups
  /?Action=DescribeAutoScalingInstances&k=1:
    get:
      summary: Describes one or more Auto Scaling instances.
      description: Describes one or more Auto Scaling instances.
      operationId: DescribeAutoScalingInstances
      parameters:
      - in: query
        name: InstanceIds.member.N
        description: The instances to describe; up to 50 instance IDs. If you omit
          this parameter, all Auto Scaling instances are described. If you specify
          an ID that does not exist, it is ignored with no error.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Auto Scaling Instances
  /?Action=DescribeAutoScalingNotificationTypes&k=1:
    get:
      summary: Describes the notification types that are supported by Auto Scaling.
      description: Describes the notification types that are supported by Auto Scaling.
      operationId: DescribeAutoScalingNotificationTypes
      parameters:
      - in: query
        name: AutoScalingNotificationTypes.member.N
        description: The notification types.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Auto Scaling Notifications
  /?Action=DescribeLaunchConfigurations&k=1:
    get:
      summary: Describes one or more launch configurations.
      description: Describes one or more launch configurations.
      operationId: DescribeLaunchConfigurations
      parameters:
      - in: query
        name: LaunchConfigurationNames.member.N
        description: The launch configuration names. If you omit this parameter, all
          launch configurations are described.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call. The default
          is 100.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Launch
  /?Action=DescribeLifecycleHooks&k=1:
    get:
      summary: Describes the lifecycle hooks for the specified Auto Scaling group.
      description: Describes the lifecycle hooks for the specified Auto Scaling group.
      operationId: DescribeLifecycleHooks
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: LifecycleHookNames.member.N
        description: The names of one or more lifecycle hooks. If you omit this parameter,
          all lifecycle hooks are described.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Life Cycle
  /?Action=DescribeLifecycleHookTypes&k=1:
    get:
      summary: Describes the available types of lifecycle hooks.
      description: Describes the available types of lifecycle hooks.
      operationId: DescribeLifecycleHookTypes
      parameters:
      - in: query
        name: LifecycleHookTypes.member.N
        description: The lifecycle hook types.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Life Cycle
  /?Action=DescribeLoadBalancers&k=1:
    get:
      summary: Describes the load balancers for the specified Auto Scaling group.
      description: Describes the load balancers for the specified Auto Scaling group.
      operationId: DescribeLoadBalancers
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Load Balancers
  /?Action=DescribeLoadBalancerTargetGroups&k=1:
    get:
      summary: Describes the target groups for the specified Auto Scaling group.
      description: Describes the target groups for the specified Auto Scaling group.
      operationId: DescribeLoadBalancerTargetGroups
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Load Balancers
  /?Action=DescribeMetricCollectionTypes&k=1:
    get:
      summary: Describes the available CloudWatch metrics for Auto Scaling.
      description: Describes the available CloudWatch metrics for Auto Scaling.
      operationId: DescribeMetricCollectionTypes
      parameters:
      - in: query
        name: Granularities.member.N
        description: The granularities for the metrics.
        type: string
      - in: query
        name: Metrics.member.N
        description: One or more metrics.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Metric Collection
  /?Action=DescribeNotificationConfigurations&k=1:
    get:
      summary: Describes the notification actions associated with the specified Auto
        Scaling group.
      description: Describes the notification actions associated with the specified
        Auto Scaling group.
      operationId: DescribeNotificationConfigurations
      parameters:
      - in: query
        name: AutoScalingGroupNames.member.N
        description: The name of the group.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Notifications
  /?Action=DescribePolicies&k=1:
    get:
      summary: Describes the policies for the specified Auto Scaling group.
      description: Describes the policies for the specified Auto Scaling group.
      operationId: DescribePolicies
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to be returned with each call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      - in: query
        name: PolicyNames.member.N
        description: One or more policy names or policy ARNs to be described. If you
          omit this parameter, all policy names are described. If an group name is
          provided, the results are limited to that group. This list is limited to
          50 items. If you specify an unknown policy name, it is ignored with no error.
        type: string
      - in: query
        name: PolicyTypes.member.N
        description: One or more policy types. Valid values are SimpleScaling and
          StepScaling.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Policies
  /?Action=DescribeScalingActivities&k=1:
    get:
      summary: Describes one or more scaling activities for the specified Auto Scaling
        group.
      description: Describes one or more scaling activities for the specified Auto
        Scaling group.
      operationId: DescribeScalingActivities
      parameters:
      - in: query
        name: ActivityIds.member.N
        description: The activity IDs of the desired scaling activities. If you omit
          this parameter, all activities for the past six weeks are described. If
          you specify an Auto Scaling group, the results are limited to that group.
          The list of requested activities cannot contain more than 50 items. If unknown
          activities are requested, they are ignored with no error.
        type: string
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Scaling Activities
  /?Action=DescribeScalingProcessTypes&k=1:
    get:
      summary: Describes the scaling process types for use with.
      description: Describes the scaling process types for use with.
      operationId: DescribeScalingProcessTypes
      parameters:
      - in: query
        name: Processes.member.N
        description: The names of the process types.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Scaling Process
  /?Action=DescribeScheduledActions&k=1:
    get:
      summary: Describes the actions scheduled for your Auto Scaling group that haven't
        run.
      description: Describes the actions scheduled for your Auto Scaling group that
        havent run.
      operationId: DescribeScheduledActions
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: EndTime
        description: The latest scheduled start time to return. If scheduled action
          names are provided, this parameter is ignored.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      - in: query
        name: ScheduledActionNames.member.N
        description: Describes one or more scheduled actions. If you omit this parameter,
          all scheduled actions are described. If you specify an unknown scheduled
          action, it is ignored with no error.
        type: string
      - in: query
        name: StartTime
        description: The earliest scheduled start time to return. If scheduled action
          names are provided, this parameter is ignored.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Scheduled Actions
  /?Action=DescribeTags&k=1:
    get:
      summary: Describes the specified tags.
      description: Describes the specified tags.
      operationId: DescribeTags
      parameters:
      - in: query
        name: Filters.member.N
        description: A filter used to scope the tags to return.
        type: string
      - in: query
        name: MaxRecords
        description: The maximum number of items to return with this call.
        type: string
      - in: query
        name: NextToken
        description: The token for the next set of items to return. (You received
          this token from a previous call.)
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tags
  /?Action=DescribeTerminationPolicyTypes&k=1:
    get:
      summary: Describes the termination policies supported by Auto Scaling.
      description: Describes the termination policies supported by Auto Scaling.
      operationId: DescribeTerminationPolicyTypes
      parameters:
      - in: query
        name: TerminationPolicyTypes.member.N
        description: The termination policies supported by Auto Scaling (OldestInstance,
          OldestLaunchConfiguration,             NewestInstance, ClosestToNextInstanceHour,
          and Default).
        type: string
      responses:
        200:
          description: OK
      tags:
      - Termination Policies
  /?Action=DetachInstances&k=1:
    get:
      summary: Removes one or more instances from the specified Auto Scaling group.
      description: Removes one or more instances from the specified Auto Scaling group.
      operationId: DetachInstances
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: InstanceIds.member.N
        description: One or more instance IDs.
        type: string
      - in: query
        name: ShouldDecrementDesiredCapacity
        description: If True, the Auto Scaling group decrements the desired capacity
          value by the number of instances detached.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Server Instances
  /?Action=DetachLoadBalancers&k=1:
    get:
      summary: Detaches one or more Classic load balancers from the specified Auto
        Scaling group.
      description: Detaches one or more Classic load balancers from the specified
        Auto Scaling group.
      operationId: DetachLoadBalancers
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: LoadBalancerNames.member.N
        description: One or more load balancer names.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Load Balancers
  /?Action=DetachLoadBalancerTargetGroups&k=1:
    get:
      summary: Detaches one or more target groups from the specified Auto Scaling
        group.
      description: Detaches one or more target groups from the specified Auto Scaling
        group.
      operationId: DetachLoadBalancerTargetGroups
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: TargetGroupARNs.member.N
        description: The Amazon Resource Names (ARN) of the target groups.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Load Balancers
  /?Action=DisableMetricsCollection&k=1:
    get:
      summary: Disables group metrics for the specified Auto Scaling group.
      description: Disables group metrics for the specified Auto Scaling group.
      operationId: DisableMetricsCollection
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name or Amazon Resource Name (ARN) of the group.
        type: string
      - in: query
        name: Metrics.member.N
        description: One or more of the following metrics. If you omit this parameter,
          all metrics are disabled.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Metrics Collection
  /?Action=EnableMetricsCollection&k=1:
    get:
      summary: Enables group metrics for the specified Auto Scaling group.
      description: Enables group metrics for the specified Auto Scaling group.
      operationId: EnableMetricsCollection
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name or ARN of the Auto Scaling group.
        type: string
      - in: query
        name: Granularity
        description: The granularity to associate with the metrics to collect.            The
          only valid value is 1Minute.
        type: string
      - in: query
        name: Metrics.member.N
        description: One or more of the following metrics. If you omit this parameter,
          all metrics are enabled.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Metrics Collection
  /?Action=EnterStandby&k=1:
    get:
      summary: Moves the specified instances into Standby mode.
      description: Moves the specified instances into Standby mode.
      operationId: EnterStandby
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: InstanceIds.member.N
        description: One or more instances to move into Standby mode. You must specify
          at least one instance ID.
        type: string
      - in: query
        name: ShouldDecrementDesiredCapacity
        description: Specifies whether the instances moved to Standby mode count as
          part of the Auto Scaling groups desired capacity. tt    If set, the desired
          capacity for the Auto Scaling group decrements by the number of instances
          moved to Standby mode.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Stand By
  /?Action=ExecutePolicy&k=1:
    get:
      summary: Executes the specified policy.
      description: Executes the specified policy.
      operationId: ExecutePolicy
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name or Amazon Resource Name (ARN) of the Auto Scaling group.
        type: string
      - in: query
        name: BreachThreshold
        description: The breach threshold for the alarm.
        type: string
      - in: query
        name: HonorCooldown
        description: If this parameter is true, Auto Scaling waits for the cooldown
          period to complete before executing the policy. Otherwise, Auto Scaling
          executes the policy without waiting for the cooldown period to complete.
        type: string
      - in: query
        name: MetricValue
        description: The metric value to compare to BreachThreshold. This enables
          you to execute a policy           of type StepScaling and determine which
          step adjustment to use. For example, if the           breach threshold is
          50 and you want to use a step adjustment with a lower bound of 0 and an            upper
          bound of 10, you can set the metric value to 59.
        type: string
      - in: query
        name: PolicyName
        description: The name or ARN of the policy.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Policies
  /?Action=ExitStandby&k=1:
    get:
      summary: Moves the specified instances out of Standby mode.
      description: Moves the specified instances out of Standby mode.
      operationId: ExitStandby
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: InstanceIds.member.N
        description: One or more instance IDs. You must specify at least one instance
          ID.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Stand By
  /?Action=PutLifecycleHook&k=1:
    get:
      summary: Creates or updates a lifecycle hook for the specified Auto Scaling
        Group.
      description: Creates or updates a lifecycle hook for the specified Auto Scaling
        Group.
      operationId: PutLifecycleHook
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group to which you want to assign
          the lifecycle hook.
        type: string
      - in: query
        name: DefaultResult
        description: Defines the action the Auto Scaling group should take when the
          lifecycle hook timeout elapses or if an unexpected failure occurs. This
          parameter can ttbe either CONTINUE or ABANDON. The default value is ABANDON.
        type: string
      - in: query
        name: HeartbeatTimeout
        description: The amount of time, in seconds, that can elapse before the lifecycle
          hook times out. When the lifecycle hook times out, Auto Scaling performs
          the default action.tt   You can prevent the lifecycle hook from timing out
          by calling RecordLifecycleActionHeartbeat. tt   The default is 3600 seconds
          (1 hour).
        type: string
      - in: query
        name: LifecycleHookName
        description: The name of the lifecycle hook.
        type: string
      - in: query
        name: LifecycleTransition
        description: The instance state to which you want to attach the lifecycle
          hook. For a list of lifecycle hook types, see            DescribeLifecycleHookTypes.
        type: string
      - in: query
        name: NotificationMetadata
        description: Contains additional information that you want to include any
          time Auto Scaling sends a message to the notification target.
        type: string
      - in: query
        name: NotificationTargetARN
        description: The ARN of the notification target that Auto Scaling will use
          to notify you when an instance is in the transition state for the lifecycle
          hook. This target can be either an SQS queue or an SNS topic. If you specify
          an empty string, this overrides the current ARN.
        type: string
      - in: query
        name: RoleARN
        description: The ARN of the IAM role that allows the Auto Scaling group to
          publish to the specified notification target.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Life Cycle
  /?Action=PutNotificationConfiguration&k=1:
    get:
      summary: Configures an Auto Scaling group to send notifications when specified
        events take place.
      description: Configures an Auto Scaling group to send notifications when specified
        events take place.
      operationId: PutNotificationConfiguration
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: NotificationTypes.member.N
        description: The type of event that will cause the notification to be sent.
          For details             about notification types supported by Auto Scaling,
          see DescribeAutoScalingNotificationTypes.
        type: string
      - in: query
        name: TopicARN
        description: The Amazon Resource Name (ARN) of the Amazon Simple Notification
          Service (SNS) topic.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Notifications
  /?Action=PutScalingPolicy&k=1:
    get:
      summary: Creates or updates a policy for an Auto Scaling group.
      description: Creates or updates a policy for an Auto Scaling group.
      operationId: PutScalingPolicy
      parameters:
      - in: query
        name: AdjustmentType
        description: The adjustment type. Valid values are ChangeInCapacity,            ExactCapacity,
          and PercentChangeInCapacity.
        type: string
      - in: query
        name: AutoScalingGroupName
        description: The name or ARN of the group.
        type: string
      - in: query
        name: Cooldown
        description: The amount of time, in seconds, after a scaling activity completes
          and before the next scaling activity can start. If this parameter is not
          specified, the default cooldown period for the group applies.
        type: string
      - in: query
        name: EstimatedInstanceWarmup
        description: The estimated time, in seconds, until a newly launched instance
          can contribute to the CloudWatch metrics. The default is to use the value
          specified for the default cooldown period for the group.
        type: string
      - in: query
        name: MetricAggregationType
        description: The aggregation type for the CloudWatch metrics.            Valid
          values are Minimum, Maximum, and Average.            If the aggregation
          type is null, the value is treated as Average.
        type: string
      - in: query
        name: MinAdjustmentMagnitude
        description: The minimum number of instances to scale. If the value of AdjustmentType
          is             PercentChangeInCapacity, the scaling policy changes the DesiredCapacity             of
          the Auto Scaling group by at least this many instances.            Otherwise,
          the error is ValidationError.
        type: string
      - in: query
        name: MinAdjustmentStep
        description: Available for backward compatibility. Use MinAdjustmentMagnitude
          instead.
        type: string
      - in: query
        name: PolicyName
        description: The name of the policy.
        type: string
      - in: query
        name: PolicyType
        description: The policy type. Valid values are SimpleScaling and StepScaling.            If
          the policy type is null, the value is treated as SimpleScaling.
        type: string
      - in: query
        name: ScalingAdjustment
        description: The amount by which to scale, based on the specified adjustment
          type. A positive value adds to the current capacity while a negative number
          removes from the current capacity.
        type: string
      - in: query
        name: StepAdjustments.member.N
        description: A set of adjustments that enable you to scale based on the size
          of the alarm breach.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Scaling Policy
  /?Action=PutScheduledUpdateGroupAction&k=1:
    get:
      summary: Creates or updates a scheduled scaling action for an Auto Scaling group.
      description: Creates or updates a scheduled scaling action for an Auto Scaling
        group.
      operationId: PutScheduledUpdateGroupAction
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name or Amazon Resource Name (ARN) of the Auto Scaling group.
        type: string
      - in: query
        name: DesiredCapacity
        description: The number of EC2 instances that should be running in the group.
        type: string
      - in: query
        name: EndTime
        description: The time for the recurring schedule to end. Auto Scaling does
          not perform the action after this time.
        type: string
      - in: query
        name: MaxSize
        description: The maximum size for the Auto Scaling group.
        type: string
      - in: query
        name: MinSize
        description: The minimum size for the Auto Scaling group.
        type: string
      - in: query
        name: Recurrence
        description: The recurring schedule for this action, in Unix cron syntax format.
          tt  For more information, see Cron in Wikipedia.
        type: string
      - in: query
        name: ScheduledActionName
        description: The name of this scaling action.
        type: string
      - in: query
        name: StartTime
        description: The time for this action to start, in YYYY-MM-DDThh:mm:ssZ format
          in UTC/GMT only             (for example, 2014-06-01T00:00:00Z).
        type: string
      - in: query
        name: Time
        description: This parameter is deprecated.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Scheduled Update
  /?Action=RecordLifecycleActionHeartbeat&k=1:
    get:
      summary: Records a heartbeat for the lifecycle action associated with the specified
        token or instance.
      description: Records a heartbeat for the lifecycle action associated with the
        specified token or instance.
      operationId: RecordLifecycleActionHeartbeat
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group for the hook.
        type: string
      - in: query
        name: InstanceId
        description: The ID of the instance.
        type: string
      - in: query
        name: LifecycleActionToken
        description: A token that uniquely identifies a specific lifecycle action
          associated with an instance. Auto Scaling sends this token to the notification
          target you specified when you created the lifecycle hook.
        type: string
      - in: query
        name: LifecycleHookName
        description: The name of the lifecycle hook.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Life Cycle
  /?Action=ResumeProcesses&k=1:
    get:
      summary: Resumes the specified suspended Auto Scaling processes, or all suspended
        process, for the specified Auto Scaling group.
      description: Resumes the specified suspended Auto Scaling processes, or all
        suspended process, for the specified Auto Scaling group.
      operationId: ResumeProcesses
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name or Amazon Resource Name (ARN) of the Auto Scaling group.
        type: string
      - in: query
        name: ScalingProcesses.member.N
        description: One or more of the following processes. If you omit this parameter,
          all processes are specified.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Processes
  /?Action=SetDesiredCapacity&k=1:
    get:
      summary: Sets the size of the specified Auto Scaling group.
      description: Sets the size of the specified Auto Scaling group.
      operationId: SetDesiredCapacity
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: DesiredCapacity
        description: The number of EC2 instances that should be running in the Auto
          Scaling group.
        type: string
      - in: query
        name: HonorCooldown
        description: By default, SetDesiredCapacity overrides any cooldown period
          associated with the Auto Scaling group.            Specify True to make
          Auto Scaling to wait for the cool-down period associated with the Auto Scaling
          group to complete            before initiating a scaling activity to set
          your Auto Scaling group to its new capacity.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Desired Capacity
  /?Action=SetInstanceHealth&k=1:
    get:
      summary: Sets the health status of the specified instance.
      description: Sets the health status of the specified instance.
      operationId: SetInstanceHealth
      parameters:
      - in: query
        name: HealthStatus
        description: The health status of the instance.             Set to Healthy
          if you want the instance to remain in service.            Set to Unhealthy
          if you want the instance to be out of service. Auto            Scaling will
          terminate and replace the unhealthy instance.
        type: string
      - in: query
        name: InstanceId
        description: The ID of the instance.
        type: string
      - in: query
        name: ShouldRespectGracePeriod
        description: If the Auto Scaling group of the specified instance has a HealthCheckGracePeriod             specified
          for the group, by default, this call will respect the grace period. Set
          this             to False, if you do not want the call to respect the grace
          period associated             with the group.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Instance Health
  /?Action=SetInstanceProtection&k=1:
    get:
      summary: Updates the instance protection settings of the specified instances.
      description: Updates the instance protection settings of the specified instances.
      operationId: SetInstanceProtection
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the group.
        type: string
      - in: query
        name: InstanceIds.member.N
        description: One or more instance IDs.
        type: string
      - in: query
        name: ProtectedFromScaleIn
        description: Indicates whether the instance is protected from termination
          by Auto Scaling when scaling in.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Instance Protection
  /?Action=SuspendProcesses&k=1:
    get:
      summary: Suspends the specified Auto Scaling processes, or all processes, for
        the specified Auto Scaling group.
      description: Suspends the specified Auto Scaling processes, or all processes,
        for the specified Auto Scaling group.
      operationId: SuspendProcesses
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name or Amazon Resource Name (ARN) of the Auto Scaling group.
        type: string
      - in: query
        name: ScalingProcesses.member.N
        description: One or more of the following processes. If you omit this parameter,
          all processes are specified.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Processes
  /?Action=TerminateInstanceInAutoScalingGroup&k=1:
    get:
      summary: Terminates the specified instance and optionally adjusts the desired
        group size.
      description: Terminates the specified instance and optionally adjusts the desired
        group size.
      operationId: TerminateInstanceInAutoScalingGroup
      parameters:
      - in: query
        name: InstanceId
        description: The ID of the instance.
        type: string
      - in: query
        name: ShouldDecrementDesiredCapacity
        description: If true, terminating the instance also decrements the size of
          the Auto Scaling group.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Instance Auto Scaling
  /?Action=UpdateAutoScalingGroup&k=1:
    get:
      summary: Updates the configuration for the specified Auto Scaling group.
      description: Updates the configuration for the specified Auto Scaling group.
      operationId: UpdateAutoScalingGroup
      parameters:
      - in: query
        name: AutoScalingGroupName
        description: The name of the Auto Scaling group.
        type: string
      - in: query
        name: AvailabilityZones.member.N
        description: One or more Availability Zones for the group.
        type: string
      - in: query
        name: DefaultCooldown
        description: The amount of time, in seconds, after a scaling activity completes
          before another scaling activity can start. The default is 300.
        type: string
      - in: query
        name: DesiredCapacity
        description: The number of EC2 instances that should be running in the Auto
          Scaling group. This number must be greater than or equal to the minimum
          size of the group and less than or equal to the maximum size of the group.
        type: string
      - in: query
        name: HealthCheckGracePeriod
        description: The amount of time, in seconds, that Auto Scaling waits before
          checking the health status of an EC2 instance that has come into service.
          The default is 0.
        type: string
      - in: query
        name: HealthCheckType
        description: The service to use for the health checks.            The valid
          values are EC2 and ELB.
        type: string
      - in: query
        name: LaunchConfigurationName
        description: The name of the launch configuration.
        type: string
      - in: query
        name: MaxSize
        description: The maximum size of the Auto Scaling group.
        type: string
      - in: query
        name: MinSize
        description: The minimum size of the Auto Scaling group.
        type: string
      - in: query
        name: NewInstancesProtectedFromScaleIn
        description: Indicates whether newly launched instances are protected from
          termination by Auto Scaling when scaling in.
        type: string
      - in: query
        name: PlacementGroup
        description: The name of the placement group into which youll launch your
          instances, if any. For more information, see             Placement Groups            in
          the Amazon Elastic Compute Cloud User Guide.
        type: string
      - in: query
        name: TerminationPolicies.member.N
        description: A standalone termination policy or a list of termination policies
          used to select the instance to terminate. The policies are executed in the
          order that they are listed.
        type: string
      - in: query
        name: VPCZoneIdentifier
        description: The ID of the subnet, if you are launching into a VPC. You can
          specify several subnets in a comma-separated list.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Auto Scaling
definitions: []