swagger: "2.0"
info:
  title: AWS Batch API
  version: 1.0.0
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /?Action=CancelJob&k=1:
    get:
      summary: Cancels jobs in an AWS Batch job queue.
      description: Cancels jobs in an AWS Batch job queue.
      operationId: CancelJob
      parameters:
      - in: query
        name: jobId
        description: A list of up to 100 job IDs to cancel.
        type: string
      - in: query
        name: reason
        description: A message to attach to the job that explains the reason for cancelling
          it.         This message is returned by future DescribeJobs operations on
          the job.         This message is also recorded in the AWS Batch activity
          logs.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Jobs
  /?Action=CreateComputeEnvironment&k=1:
    get:
      summary: Creates an AWS Batch compute environment.
      description: Creates an AWS Batch compute environment.
      operationId: CreateComputeEnvironment
      parameters:
      - in: query
        name: computeEnvironmentName
        description: The name for your compute environment.         Up to 128 letters
          (uppercase and lowercase), numbers, and underscores are allowed.
        type: string
      - in: query
        name: computeResources
        description: Details of the compute resources managed by the compute environment.
          This parameter         is required for managed compute environments.
        type: string
      - in: query
        name: serviceRole
        description: The full Amazon Resource Name (ARN) of the IAM role that allows
          AWS Batch to make calls to other AWS         services on your behalf.
        type: string
      - in: query
        name: state
        description: The state of the compute environment. If the state is ENABLED,         then
          the compute environment accepts jobs from a queue and can scale out         automatically
          based on queues.
        type: string
      - in: query
        name: type
        description: The type of the compute environment.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Compute Environment
  /?Action=CreateJobQueue&k=1:
    get:
      summary: Creates an AWS Batch job queue.
      description: Creates an AWS Batch job queue.
      operationId: CreateJobQueue
      parameters:
      - in: query
        name: computeEnvironmentOrder
        description: The set of compute environments mapped to a job queue and their
          order relative to         each other. The job scheduler uses this parameter
          to determine which compute environment         should execute a given job.
          Compute environments must be in the VALID state         before you can associate
          them with a job queue. You can associate up to 3 compute         environments
          with a job queue.
        type: string
      - in: query
        name: jobQueueName
        description: The name of the job queue.
        type: string
      - in: query
        name: priority
        description: The priority of the job queue. Job queues with a higher priority
          (or a lower integer         value for the priority parameter) are evaluated
          first when associated with         same compute environment. Priority is
          determined in ascending order, for example, a job         queue with a priority
          value of 1 is given scheduling preference over a job         queue with
          a priority value of 10.
        type: string
      - in: query
        name: state
        description: The state of the job queue. If the job queue state is ENABLED,
          it is         able to accept jobs.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Queue
  /?Action=DeleteComputeEnvironment&k=1:
    get:
      summary: Deletes an AWS Batch compute environment.
      description: Deletes an AWS Batch compute environment.
      operationId: DeleteComputeEnvironment
      parameters:
      - in: query
        name: computeEnvironment
        description: The name or Amazon Resource Name (ARN) of the compute environment
          to delete.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Compute Environment
  /?Action=DeleteJobQueue&k=1:
    get:
      summary: Deletes the specified job queue.
      description: Deletes the specified job queue.
      operationId: DeleteJobQueue
      parameters:
      - in: query
        name: jobQueue
        description: The short name or full Amazon Resource Name (ARN) of the queue
          to delete.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Queue
  /?Action=DeregisterJobDefinition&k=1:
    get:
      summary: Deregisters an AWS Batch job definition.
      description: Deregisters an AWS Batch job definition.
      operationId: DeregisterJobDefinition
      parameters:
      - in: query
        name: jobDefinition
        description: The name and revision (name:revision) or full Amazon Resource
          Name (ARN) of the job         definition to deregister.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Definitions
  /?Action=DescribeComputeEnvironments&k=1:
    get:
      summary: Describes one or more of your compute environments.
      description: Describes one or more of your compute environments.
      operationId: DescribeComputeEnvironments
      parameters:
      - in: query
        name: computeEnvironments
        description: A list of up to 100 compute environment names or full Amazon
          Resource Name (ARN) entries.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of cluster results returned by            DescribeComputeEnvironments
          in paginated output. When this parameter is         used, DescribeComputeEnvironments
          only returns maxResults results         in a single page along with a nextToken
          response element. The remaining         results of the initial request can
          be seen by sending another            DescribeComputeEnvironments request
          with the returned            nextToken value. This value can be between
          1 and         100. If this parameter is not used, then            DescribeComputeEnvironments
          returns up to 100 results and         a nextToken value if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated            DescribeComputeEnvironments
          request where maxResults was used         and the results exceeded the value
          of that parameter. Pagination continues from the end of         the previous
          results that returned the nextToken value. This value is            null
          when there are no more results to return.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Compute Environment
  /?Action=DescribeJobDefinitions&k=1:
    get:
      summary: Describes a list of job definitions.
      description: Describes a list of job definitions.
      operationId: DescribeJobDefinitions
      parameters:
      - in: query
        name: jobDefinitionName
        description: The name of the job definition to describe.
        type: string
      - in: query
        name: jobDefinitions
        description: A space-separated list of up to 100 job definition names or full
          Amazon Resource Name (ARN)         entries.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of results returned by DescribeJobDefinitions
          in         paginated output. When this parameter is used, DescribeJobDefinitions
          only         returns maxResults results in a single page along with a            nextToken
          response element. The remaining results of the initial request         can
          be seen by sending another DescribeJobDefinitions request with the         returned
          nextToken value. This value can be between 1 and         100. If this parameter
          is not used, then DescribeJobDefinitions         returns up to 100 results
          and a nextToken value if         applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated            DescribeJobDefinitions
          request where maxResults was used and         the results exceeded the value
          of that parameter. Pagination continues from the end of the         previous
          results that returned the nextToken value. This value is            null
          when there are no more results to return.
        type: string
      - in: query
        name: status
        description: The status with which to filter job definitions.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Definitions
  /?Action=DescribeJobQueues&k=1:
    get:
      summary: Describes one or more of your job queues.
      description: Describes one or more of your job queues.
      operationId: DescribeJobQueues
      parameters:
      - in: query
        name: jobQueues
        description: A list of up to 100 queue names or full queue Amazon Resource
          Name (ARN) entries.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of results returned by DescribeJobQueues in
          paginated         output. When this parameter is used, DescribeJobQueues
          only returns            maxResults results in a single page along with a
          nextToken         response element. The remaining results of the initial
          request can be seen by sending         another DescribeJobQueues request
          with the returned nextToken         value. This value can be between 1 and
          100. If this parameter         is not used, then DescribeJobQueues returns
          up to 100         results and a nextToken value if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated            DescribeJobQueues
          request where maxResults was used and the         results exceeded the value
          of that parameter. Pagination continues from the end of the         previous
          results that returned the nextToken value. This value is            null
          when there are no more results to return.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Queue
  /?Action=DescribeJobs&k=1:
    get:
      summary: Describes a list of AWS Batch jobs.
      description: Describes a list of AWS Batch jobs.
      operationId: DescribeJobs
      parameters:
      - in: query
        name: jobs
        description: A space-separated list of up to 100 job IDs.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Definitions
  /?Action=ListJobs&k=1:
    get:
      summary: Returns a list of task jobs for a specified job queue.
      description: Returns a list of task jobs for a specified job queue.
      operationId: ListJobs
      parameters:
      - in: query
        name: jobQueue
        description: The name or full Amazon Resource Name (ARN) of the job queue
          with which to list jobs.
        type: string
      - in: query
        name: jobStatus
        description: The job status with which to filter jobs in the specified queue.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of results returned by ListJobs in paginated
          output.         When this parameter is used, ListJobs only returns maxResults         results
          in a single page along with a nextToken response element. The         remaining
          results of the initial request can be seen by sending another            ListJobs
          request with the returned nextToken value. This value         can be between
          1 and 100. If this parameter is not used, then            ListJobs returns
          up to 100 results and a            nextToken value if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated            ListJobs
          request where maxResults was used and the results         exceeded the value
          of that parameter. Pagination continues from the end of the previous         results
          that returned the nextToken value. This value is null         when there
          are no more results to return.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Jobs
  /?Action=RegisterJobDefinition&k=1:
    get:
      summary: Registers an AWS Batch job definition.
      description: Registers an AWS Batch job definition.
      operationId: RegisterJobDefinition
      parameters:
      - in: query
        name: containerProperties
        description: An object with various properties specific for container-based
          jobs. This parameter         is required if the type parameter is container.
        type: string
      - in: query
        name: jobDefinitionName
        description: The name of the job definition to register.
        type: string
      - in: query
        name: parameters
        description: Default parameter substitution placeholders to set in the job
          definition. Parameters         are specified as a key-value pair mapping.
          Parameters in a SubmitJob         request override any corresponding parameter
          defaults from the job definition.
        type: string
      - in: query
        name: type
        description: The type of job definition.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Definitions
  /?Action=SubmitJob&k=1:
    get:
      summary: Submits an AWS Batch job from a job definition.
      description: Submits an AWS Batch job from a job definition.
      operationId: SubmitJob
      parameters:
      - in: query
        name: containerOverrides
        description: A list of container overrides in JSON format that specify the
          name of a container in         the specified job definition and the overrides
          it should receive. You can override the         default command for a container
          (that is specified in the job definition or the Docker         image) with
          a command override. You can also override existing environment         variables
          (that are specified in the job definition or Docker image) on a container
          or add         new environment variables to it with an environment override.
        type: string
      - in: query
        name: dependsOn
        description: A list of job names or IDs on which this job depends. A job can
          depend upon a         maximum of 100 jobs.
        type: string
      - in: query
        name: jobDefinition
        description: The job definition used by this job. This value can be either
          a name:revision or         the Amazon Resource Name (ARN) for the job definition.
        type: string
      - in: query
        name: jobName
        description: The name of the job.
        type: string
      - in: query
        name: jobQueue
        description: The job queue into which the job will be submitted. You can specify
          either the name or the         Amazon Resource Name (ARN) of the queue.
        type: string
      - in: query
        name: parameters
        description: Additional parameters passed to the job that replace parameter
          substitution         placeholders that are set in the job definition. Parameters
          are specified as a key and         value pair mapping. Parameters in a SubmitJob
          request override any         corresponding parameter defaults from the job
          definition.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Jobs
  /?Action=TerminateJob&k=1:
    get:
      summary: Terminates jobs in a job queue.
      description: Terminates jobs in a job queue.
      operationId: TerminateJob
      parameters:
      - in: query
        name: jobId
        description: Job IDs to be terminated. Up to 100 jobs can be specified.
        type: string
      - in: query
        name: reason
        description: A message to attach to the job that explains the reason for cancelling
          it.         This message is returned by future DescribeJobs operations on
          the job.         This message is also recorded in the AWS Batch activity
          logs.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Jobs
  /?Action=UpdateComputeEnvironment&k=1:
    get:
      summary: Updates an AWS Batch compute environment.
      description: Updates an AWS Batch compute environment.
      operationId: UpdateComputeEnvironment
      parameters:
      - in: query
        name: computeEnvironment
        description: The name or full Amazon Resource Name (ARN) of the compute environment
          to update.
        type: string
      - in: query
        name: computeResources
        description: Details of the compute resources managed by the compute environment.
          Required for a         managed compute environment.
        type: string
      - in: query
        name: serviceRole
        description: The name or full Amazon Resource Name (ARN) of the IAM role that
          allows AWS Batch to make calls to         ECS, Auto Scaling, and EC2 on
          your behalf.
        type: string
      - in: query
        name: state
        description: The state of the compute environment. Compute environments in
          the            ENABLED state can accept jobs from a queue and scale in or
          out         automatically based on the workload demand of its associated
          queues.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Compute Environment
  /?Action=UpdateJobQueue&k=1:
    get:
      summary: Updates a job queue.
      description: Updates a job queue.
      operationId: UpdateJobQueue
      parameters:
      - in: query
        name: computeEnvironmentOrder
        description: Details the set of compute environments mapped to a job queue
          and their order         relative to each other. This is one of the parameters
          used by the job scheduler to         determine which compute environment
          should execute a given job.
        type: string
      - in: query
        name: jobQueue
        description: The name or the Amazon Resource Name (ARN) of the job queue.
        type: string
      - in: query
        name: priority
        description: The priority of the job queue. Job queues with a higher priority
          (or a lower integer         value for the priority parameter) are evaluated
          first when associated with         same compute environment. Priority is
          determined in ascending order, for example, a job         queue with a priority
          value of 1 is given scheduling preference over a job         queue with
          a priority value of 10.
        type: string
      - in: query
        name: state
        description: Describes the queues ability to accept new jobs.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Job Queue
definitions: []