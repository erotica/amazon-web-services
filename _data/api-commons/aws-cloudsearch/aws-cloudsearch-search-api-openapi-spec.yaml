swagger: "2.0"
info:
  title: No Title
  version: 1.0.0
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /2013-01-01/search:
    get:
      summary: This section describes the HTTP request and response messages for the
        search resource.
      description: This section describes the HTTP request and response messages for
        the search resource.
      operationId: search
      parameters:
      - in: query
        name: cursor
        description: Retrieves a cursor value you can use to page through large result
          sets. Use the size parameter to control the number of hits you want to include
          in each response. You can specify either the cursor or start parameter in
          a request, they are mutually exclusive. For more information, see Paginating
          Results.
        type: string
        format: string
      - in: query
        name: expr.NAME
        description: Defines an expression that can be used to sort results. You can
          also specify an expression as a return field. For more information about
          defining and using expressions, see Configuring Expressions.
        type: string
        format: string
      - in: query
        name: facet.FIELD
        description: Specifies a field that you want to get facet information foru2014FIELD
          is the name of the field. The specified field must be facet enabled in the
          domain configuration. Facet options are specified as a JSON object. If the
          JSON object is empty, facet.FIELD={}, facet counts are computed for all
          field values, the facets are sorted by facet count, and the top 10 facets
          are returned in the results.
        type: string
        format: string
      - in: query
        name: fq
        description: Specifies a structured query that filters the results of a search
          without affecting how the results are scored and sorted. You use fq in conjunction
          with the q parameter to filter the documents that match the constraints
          specified in the q parameter. Specifying a filter just controls which matching
          documents are included in the results, it has no effect on how they are
          scored and sorted. The fq parameter supports the full structured query syntax.
          For more information about using filters, see Filtering Matching Documents.
          For more information about structured queries, see Structured Search Syntax.
        type: string
        format: string
      - in: query
        name: highlight.FIELD
        description: 'Retrieves highlights for matches in the specified text or text-array
          field. Highlight options are specified as a JSON object. If the JSON object
          is empty, the returned field text is treated as HTML and the first match
          is highlighted with emphasis tags: <em>search-term</em>.'
        type: string
        format: string
      - in: header
        name: HOST
        description: The search request endpoint for the domain youre querying. You
          can use DescribeDomains to retrieve your domains search request endpoint.
        type: string
        format: string
      - in: query
        name: pretty
        description: Formats JSON output so its easier to read.
        type: string
        format: string
      - in: query
        name: q
        description: The search criteria for the request. How you specify the search
          criteria depends on the query parser used for the request and the parser
          options specified in the q.options parameter. By default, the simple query
          parser is used to process requests. To use the structured, lucene, or dismax
          query parser, you must also specify the q.parser parameter. For more information
          about specifying search criteria, see Searching Your Data with Amazon CloudSearch.
        type: string
        format: string
      - in: query
        name: q.options
        description: 'Configure options for the query parser specified in the q.parser
          parameter.tThe options are specified as a JSON object, for example: q.options={defaultOperator:
          or, fields: [title^5,description]}.'
        type: string
        format: string
      - in: query
        name: q.parser
        description: 'Specifies which query parser to use to process the request:
          simple, structured, lucene, and dismax. If q.parser is not specified, Amazon
          CloudSearch uses the simple query parser'
        type: string
        format: string
      - in: query
        name: return
        description: The field and expression values to include in the response, specified
          as a comma-separated list. By default, a search response includes all return
          enabled fields (return=_all_fields). To return only the document IDs for
          the matching documents, specify return=_no_fields. To retrieve the relevance
          score calculated for each document, specify return=_score. You specify multiple
          return fields as a comma separated list. For example, return=title,_score
          returns just the title and relevance score of each matching document.
        type: string
        format: string
      - in: query
        name: size
        description: The maximum number of search hits to return.
        type: string
        format: string
      - in: query
        name: sort
        description: 'A comma-separated list of fields or custom expressions to use
          to sort the search results. You must specify the sort direction (asc or
          desc) for each field. For example, sort=year desc,title asc. You can specify
          a maximum of 10 fields and expressions. To use a field to sort results,
          it must be sort enabled in the domain configuration. Array type fields cannot
          be used for sorting. If no sort parameter is specified, results are sorted
          by their default relevance scores in descending order: sort=_score desc.
          You can also sort by document ID (sort=_id) and version (sort=_version).'
        type: string
        format: string
      - in: query
        name: start
        description: The offset of the first search hit you want to return. You can
          specify either the start or cursor parameter in a request, they are mutually
          exclusive. For more information, see Paginating Results.
        type: string
        format: string
      responses:
        200:
          description: OK
      tags:
      - Search
definitions: []