
  {
	"swagger": "2.0",
	"info": {
		"title": "AWS Data Pipeline API",
		"version": "1.0.0"
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/?Action=ActivatePipeline&k=1": {
			"get": {
				"summary": " Activate Pipeline ",
				"description": "Validates the specified pipeline and starts processing pipeline tasks.",
				"operationId": "activatePipeline",
				"parameters": [{
					"in": "query",
					"name": "parameterValues",
					"description": "A list of parameter values to pass to the pipeline at activation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "startTimestamp",
					"description": "The date and time to resume the pipeline. By default, the pipeline resumes from the last completed execution.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=AddTags&k=1": {
			"get": {
				"summary": " Add Tags ",
				"description": "Adds or modifies tags for the specified pipeline.",
				"operationId": "addTags",
				"parameters": [{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "tags",
					"description": "The tags to add, as key/value pairs.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			}
		},
		"/?Action=CreatePipeline&k=1": {
			"get": {
				"summary": " Create Pipeline ",
				"description": "Creates a new, empty pipeline.",
				"operationId": "createPipeline",
				"parameters": [{
					"in": "query",
					"name": "description",
					"description": "The description for the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "name",
					"description": "The name for the pipeline. You can use the same name for multiple pipelines associated with your AWS account, because AWS Data Pipeline assigns each pipeline a unique pipeline identifier.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "tags",
					"description": "A list of tags to associate with the pipeline at creation. Tags let you control access to pipelines.             For more information, see Controlling User Access to Pipelines             in the AWS Data Pipeline Developer Guide.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "uniqueId",
					"description": "A unique identifier. This identifier is not the same as the pipeline identifier assigned by AWS Data Pipeline.             You are responsible for defining the format and ensuring the uniqueness of this identifier. You use this             parameter to ensure idempotency during repeated calls to CreatePipeline. For example, if the             first call to CreatePipeline does not succeed, you can pass in the same unique identifier and             pipeline name combination on a subsequent call to CreatePipeline. CreatePipeline             ensures that if a pipeline already exists with the same name and unique identifier, a new pipeline is not             created. Instead, youll receive the pipeline identifier from the previous attempt. The uniqueness of the             name and unique identifier combination is scoped to the AWS account or IAM user credentials.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=DeactivatePipeline&k=1": {
			"get": {
				"summary": " Deactivate Pipeline ",
				"description": "Deactivates the specified running pipeline.",
				"operationId": "deactivatePipeline",
				"parameters": [{
					"in": "query",
					"name": "cancelActive",
					"description": "Indicates whether to cancel any running objects. The default is true,           which sets the state of any running objects to CANCELED.          If this value is false, the pipeline is deactivated after all           running objects finish.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=DeletePipeline&k=1": {
			"get": {
				"summary": " Delete Pipeline ",
				"description": "Deletes a pipeline, its pipeline definition, and its run history.",
				"operationId": "deletePipeline",
				"parameters": [{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=DescribeObjects&k=1": {
			"get": {
				"summary": " Describe Objects ",
				"description": "Gets the object definitions for a set of objects associated with the pipeline.",
				"operationId": "describeObjects",
				"parameters": [{
					"in": "query",
					"name": "evaluateExpressions",
					"description": "Indicates whether any expressions in the object should be evaluated when the object descriptions are returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "marker",
					"description": "The starting point for the results to be returned. For the first call, this value should be empty.            As long as there are more results, continue to call DescribeObjects with           the marker value from the previous call to retrieve the next set of results.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "objectIds",
					"description": "The IDs of the pipeline objects that contain the definitions to be described. You can pass as many as 25 identifiers in a single call to DescribeObjects.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline that contains the object definitions.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Objects"]
			}
		},
		"/?Action=DescribePipelines&k=1": {
			"get": {
				"summary": " Describe Pipelines ",
				"description": "Retrieves metadata about one or more pipelines.",
				"operationId": "describePipelines",
				"parameters": [{
					"in": "query",
					"name": "pipelineIds",
					"description": "The IDs of the pipelines to describe. You can pass as many as 25 identifiers in a single call.             To obtain pipeline IDs, call ListPipelines.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=EvaluateExpression&k=1": {
			"get": {
				"summary": " Evaluate Expression ",
				"description": "Task runners call EvaluateExpression to evaluate a string in the context of the specified object.",
				"operationId": "evaluateExpression",
				"parameters": [{
					"in": "query",
					"name": "expression",
					"description": "The expression to evaluate.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "objectId",
					"description": "The ID of the object.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Expressions"]
			}
		},
		"/?Action=GetPipelineDefinition&k=1": {
			"get": {
				"summary": " Get Pipeline Definition ",
				"description": "Gets the definition of the specified pipeline.",
				"operationId": "getPipelineDefinition",
				"parameters": [{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "version",
					"description": "The version of the pipeline definition to retrieve. Set this parameter to latest (default)             to use the last definition saved to the pipeline or active to use the last definition              that was activated.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=ListPipelines&k=1": {
			"get": {
				"summary": " List Pipelines ",
				"description": "Lists the pipeline identifiers for all active pipelines that you have permission to access.",
				"operationId": "listPipelines",
				"parameters": [{
					"in": "query",
					"name": "marker",
					"description": "The starting point for the results to be returned. For the first call, this value should be empty.            As long as there are more results, continue to call ListPipelines with           the marker value from the previous call to retrieve the next set of results.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=PollForTask&k=1": {
			"get": {
				"summary": " Poll For Task ",
				"description": "Task runners call PollForTask to receive a task to perform from AWS Data Pipeline.",
				"operationId": "pollForTask",
				"parameters": [{
					"in": "query",
					"name": "hostname",
					"description": "The public DNS name of the calling task runner.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "instanceIdentity",
					"description": "Identity information for the EC2 instance that is hosting the task runner. You can get this value from the instance using http://169.254.169.254/latest/meta-data/instance-id. For more information, see Instance Metadata in the Amazon Elastic Compute Cloud User Guide. Passing in this value proves that your task runner is running on an EC2 instance, and ensures the proper AWS Data Pipeline service charges are applied to your pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "workerGroup",
					"description": "The type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created.             You can only specify a single value for workerGroup in the call to PollForTask. There are no wildcard values permitted in             workerGroup; the string must be an exact, case-sensitive, match.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tasks"]
			}
		},
		"/?Action=PutPipelineDefinition&k=1": {
			"get": {
				"summary": " Put Pipeline Definition ",
				"description": "Adds tasks, schedules, and preconditions to the specified pipeline.",
				"operationId": "putPipelineDefinition",
				"parameters": [{
					"in": "query",
					"name": "parameterObjects",
					"description": "The parameter objects used with the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "parameterValues",
					"description": "The parameter values used with the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineObjects",
					"description": "The objects that define the pipeline. These objects overwrite the existing pipeline definition.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		},
		"/?Action=QueryObjects&k=1": {
			"get": {
				"summary": " Query Objects ",
				"description": "Queries the specified pipeline for the names of objects that match the specified set of conditions.",
				"operationId": "queryObjects",
				"parameters": [{
					"in": "query",
					"name": "limit",
					"description": "The maximum number of object names that QueryObjects will return in a single call. The default value is 100.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "marker",
					"description": "The starting point for the results to be returned. For the first call, this value should be empty.            As long as there are more results, continue to call QueryObjects with           the marker value from the previous call to retrieve the next set of results.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "query",
					"description": "The query that defines the objects to be returned. The Query object can contain a maximum of ten selectors.             The conditions in the query are limited to top-level String fields in the object.             These filters can be applied to components, instances, and attempts.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "sphere",
					"description": "Indicates whether the query applies to components or instances. The possible values are:t            COMPONENT, INSTANCE, and ATTEMPT.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Objects"]
			}
		},
		"/?Action=RemoveTags&k=1": {
			"get": {
				"summary": " Remove Tags ",
				"description": "Removes existing tags from the specified pipeline.",
				"operationId": "removeTags",
				"parameters": [{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "tagKeys",
					"description": "The keys of the tags to remove.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			}
		},
		"/?Action=ReportTaskProgress&k=1": {
			"get": {
				"summary": " Report Task Progress ",
				"description": "Task runners call ReportTaskProgress when assigned a task to acknowledge that it has the task.",
				"operationId": "reportTaskProgress",
				"parameters": [{
					"in": "query",
					"name": "fields",
					"description": "Key-value pairs that define the properties of the ReportTaskProgressInput object.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "taskId",
					"description": "The ID of the task assigned to the task runner. This value is provided in the response for PollForTask.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tasks"]
			}
		},
		"/?Action=ReportTaskRunnerHeartbeat&k=1": {
			"get": {
				"summary": " Report Task Runner Heartbeat ",
				"description": "Task runners call ReportTaskRunnerHeartbeat every 15 minutes to indicate that they are operational.",
				"operationId": "reportTaskRunnerHeartbeat",
				"parameters": [{
					"in": "query",
					"name": "hostname",
					"description": "The public DNS name of the task runner.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "taskrunnerId",
					"description": "The ID of the task runner. This value should be unique across your AWS account. In the case of AWS Data Pipeline Task Runner launched on a resource managed by AWS Data Pipeline, the web service provides a unique identifier when it launches the application. If you have written a custom task runner, you should assign a unique identifier for the task runner.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "workerGroup",
					"description": "The type of task the task runner is configured to accept and process. The worker group is set as a field on objects in the pipeline when they are created.             You can only specify a single value for workerGroup. There are no wildcard values permitted in workerGroup; the string             must be an exact, case-sensitive, match.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Task Runner Hearbeat"]
			}
		},
		"/?Action=SetStatus&k=1": {
			"get": {
				"summary": " Set Status ",
				"description": "Requests that the status of the specified physical or logical pipeline objects be updated in the specified pipeline.",
				"operationId": "setStatus",
				"parameters": [{
					"in": "query",
					"name": "objectIds",
					"description": "The IDs of the objects. The corresponding objects can be either physical or components, but not a mix of both types.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline that contains the objects.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "status",
					"description": "The status to be set on all the objects specified in objectIds. For components, use PAUSE or RESUME.             For instances, use TRY_CANCEL, RERUN, or MARK_FINISHED.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Status"]
			}
		},
		"/?Action=SetTaskStatus&k=1": {
			"get": {
				"summary": " Set Task Status ",
				"description": "Task runners call SetTaskStatus to notify AWS Data Pipeline that a task is completed and provide information about the final status.",
				"operationId": "setTaskStatus",
				"parameters": [{
					"in": "query",
					"name": "errorId",
					"description": "If an error occurred during the task, this value specifies the error code. This value is set on the physical attempt object. It is used to display error information to the user. It should not start with string Service_ which is reserved by the system.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "errorMessage",
					"description": "If an error occurred during the task, this value specifies a text description of the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "errorStackTrace",
					"description": "If an error occurred during the task, this value specifies the stack trace associated with the error. This value is set on the physical attempt object. It is used to display error information to the user. The web service does not parse this value.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "taskId",
					"description": "The ID of the task assigned to the task runner. This value is provided in the response for PollForTask.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "taskStatus",
					"description": "If FINISHED, the task successfully completed. If FAILED, the task ended unsuccessfully. Preconditions use false.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tasks"]
			}
		},
		"/?Action=ValidatePipelineDefinition&k=1": {
			"get": {
				"summary": " Validate Pipeline Definition ",
				"description": "Validates the specified pipeline definition to ensure that it is well formed and can be run without error.",
				"operationId": "validatePipelineDefinition",
				"parameters": [{
					"in": "query",
					"name": "parameterObjects",
					"description": "The parameter objects used with the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "parameterValues",
					"description": "The parameter values used with the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineId",
					"description": "The ID of the pipeline.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "pipelineObjects",
					"description": "The objects that define the pipeline changes to validate against the pipeline.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Pipeline"]
			}
		}
	},
	"definitions": []
}