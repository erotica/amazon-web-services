swagger: "2.0"
info:
  title: Amazon EC2 Container Service API
  version: 1.0.0
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /?Action=CreateCluster&k=1:
    get:
      summary: ' Create Cluster '
      description: Creates a new Amazon ECS cluster.
      operationId: createCluster
      parameters:
      - in: query
        name: clusterName
        description: The name of your cluster. If you do not specify a name for your
          cluster, you create            a cluster named default. Up to 255 letters
          (uppercase and lowercase), numbers, hyphens, and underscores are allowed.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Clusters
  /?Action=CreateService&k=1:
    get:
      summary: ' Create Service '
      description: Runs and maintains a desired number of tasks from a specified task
        definition.
      operationId: createService
      parameters:
      - in: query
        name: clientToken
        description: Unique, case-sensitive identifier you provide to ensure the idempotency
          of the            request. Up to 32 ASCII characters are allowed.
        type: string
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          on which to run your service.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: deploymentConfiguration
        description: Optional deployment parameters that control how many tasks run
          during the            deployment and the ordering of stopping and starting
          tasks.
        type: string
      - in: query
        name: desiredCount
        description: The number of instantiations of the specified task definition
          to place and keep            running on your cluster.
        type: string
      - in: query
        name: loadBalancers
        description: A load balancer object representing the load balancer to use
          with your service.            Currently, you are limited to one load balancer
          or target group per service. After you            create a service, the
          load balancer name or target group ARN, container name, and            container
          port specified in the service definition are immutable.
        type: string
      - in: query
        name: placementConstraints
        description: An array of placement constraint objects to use for tasks in
          your service. You can specify a maximum of 10 constraints per task (this
          limit includes constraints in the task definition and those specified at
          run time).
        type: string
      - in: query
        name: placementStrategy
        description: The placement strategy objects to use for tasks in your service.
          You can specify a            maximum of 5 strategy rules per service.
        type: string
      - in: query
        name: role
        description: The name or full Amazon Resource Name (ARN) of the IAM role that
          allows Amazon ECS to make calls to your            load balancer on your
          behalf. This parameter is required if you are using a load            balancer
          with your service. If you specify the role parameter, you must            also
          specify a load balancer object with the loadBalancers            parameter.
        type: string
      - in: query
        name: serviceName
        description: The name of your service. Up to 255 letters (uppercase and lowercase),
          numbers, hyphens, and underscores are allowed. Service names must be unique            within
          a cluster, but you can have similarly named services in multiple clusters
          within            a region or across multiple regions.
        type: string
      - in: query
        name: taskDefinition
        description: The family and revision (family:revision) or            full
          Amazon Resource Name (ARN) of the task definition to run in your service.
          If a revision            is not specified, the latest ACTIVE revision is
          used.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Services
  /?Action=DeleteAttributes&k=1:
    get:
      summary: ' Delete Attributes '
      description: Deletes one or more custom attributes from an Amazon ECS resource.
      operationId: deleteAttributes
      parameters:
      - in: query
        name: attributes
        description: The attributes to delete from your resource. You can specify
          up to 10 attributes            per request. For custom attributes, specify
          the attribute name and target ID, but            do not specify the value.
          If you specify the target ID using the short form, you must             also
          specify the target type.
        type: string
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that contains the resource to apply            attributes. If you do not
          specify a cluster, the default cluster is assumed.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Attributes
  /?Action=DeleteCluster&k=1:
    get:
      summary: ' Delete Cluster '
      description: Deletes the specified cluster.
      operationId: deleteCluster
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          to delete.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Clusters
  /?Action=DeleteService&k=1:
    get:
      summary: ' Delete Service '
      description: Deletes a specified service within a cluster.
      operationId: deleteService
      parameters:
      - in: query
        name: cluster
        description: The name of the cluster that hosts the service to delete.            If
          you do not specify a cluster, the default cluster is assumed.
        type: string
      - in: query
        name: service
        description: The name of the service to delete.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Services
  /?Action=DeregisterContainerInstance&k=1:
    get:
      summary: ' Deregister Container Instance '
      description: Deregisters an Amazon ECS container instance from the specified
        cluster.
      operationId: deregisterContainerInstance
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the container instance            to deregister. If you do not
          specify a cluster, the default cluster is assumed.
        type: string
      - in: query
        name: containerInstance
        description: The container instance ID or full Amazon Resource Name (ARN)
          of the container instance to            deregister. The ARN contains the
          arn:aws:ecs namespace, followed by the region of the container instance,
          the AWS account ID of the container instance owner, the container-instance
          namespace, and then the container instance ID. For example, arn:aws:ecs:region:aws_account_id:container-instance/container_instance_ID                  .
        type: string
      - in: query
        name: force
        description: Forces the deregistration of the container instance. If you have
          tasks running on            the container instance when you deregister it
          with the force option, these            tasks remain running until you terminate
          the instance or the tasks stop through some            other means, but
          they are orphaned (no longer monitored or accounted for by Amazon ECS).
          If            an orphaned task on your container instance is part of an
          Amazon ECS service, then the            service scheduler starts another
          copy of that task, on a different container instance if            possible.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Container Instances
  /?Action=DeregisterTaskDefinition&k=1:
    get:
      summary: ' Deregister Task Definition '
      description: Deregisters the specified task definition by family and revision.
      operationId: deregisterTaskDefinition
      parameters:
      - in: query
        name: taskDefinition
        description: The family and revision (family:revision) or            full
          Amazon Resource Name (ARN) of the task definition to deregister. You must
          specify a                revision.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Task Definitions
  /?Action=DescribeClusters&k=1:
    get:
      summary: ' Describe Clusters '
      description: Describes one or more of your clusters.
      operationId: describeClusters
      parameters:
      - in: query
        name: clusters
        description: A space-separated list of up to 100 cluster names or full cluster
          Amazon Resource Name (ARN)            entries. If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Clusters
  /?Action=DescribeContainerInstances&k=1:
    get:
      summary: ' Describe Container Instances '
      description: Describes Amazon EC2 Container Service container instances.
      operationId: describeContainerInstances
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the container instances            to describe. If you do not
          specify a cluster, the default cluster is assumed.
        type: string
      - in: query
        name: containerInstances
        description: A space-separated list of container instance IDs or full Amazon
          Resource Name (ARN)            entries.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Container Instances
  /?Action=DescribeServices&k=1:
    get:
      summary: ' Describe Services '
      description: Describes the specified services running in your cluster.
      operationId: describeServices
      parameters:
      - in: query
        name: cluster
        description: The name of the cluster that hosts the service to describe.            If
          you do not specify a cluster, the default cluster is assumed.
        type: string
      - in: query
        name: services
        description: A list of services to describe. You may specify up to 10 services
          to describe in a            single operation.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Services
  /?Action=DescribeTaskDefinition&k=1:
    get:
      summary: ' Describe Task Definition '
      description: Describes a task definition.
      operationId: describeTaskDefinition
      parameters:
      - in: query
        name: taskDefinition
        description: The family for the latest ACTIVE revision,                family
          and revision (family:revision) for a            specific revision in the
          family, or full Amazon Resource Name (ARN) of the task definition to            describe.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Task Definitions
  /?Action=DescribeTasks&k=1:
    get:
      summary: ' Describe Tasks '
      description: Describes a specified task or tasks.
      operationId: describeTasks
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the task to describe.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: tasks
        description: A space-separated list of task IDs or full Amazon Resource Name
          (ARN) entries.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tasks
  /?Action=DiscoverPollEndpoint&k=1:
    get:
      summary: ' Discover Poll Endpoint '
      description: This action is only used by the Amazon EC2 Container Service agent,
        and it is not intended for use outside of the agent.
      operationId: discoverPollEndpoint
      responses:
        200:
          description: OK
      tags:
      - Poll Endpoints
  /?Action=ListAttributes&k=1:
    get:
      summary: ' List Attributes '
      description: Lists the attributes for Amazon ECS resources within a specified
        target type and            cluster.
      operationId: listAttributes
      parameters:
      - in: query
        name: attributeName
        description: The name of the attribute with which to filter the results.
        type: string
      - in: query
        name: attributeValue
        description: The value of the attribute with which to filter results. You
          must also specify an            attribute name to use this parameter.
        type: string
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          to list attributes.            If you do not specify a cluster, the default
          cluster is assumed.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of cluster results returned by ListAttributes
          in            paginated output. When this parameter is used, ListAttributes
          only returns                maxResults results in a single page along with
          a nextToken            response element. The remaining results of the initial
          request can be seen by sending            another ListAttributes request
          with the returned nextToken            value. This value can be between
          1 and 100. If this            parameter is not used, then ListAttributes
          returns up to            100 results and a nextToken value if            applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListAttributes
          request where maxResults was used and the            results exceeded the
          value of that parameter. Pagination continues from the end of the            previous
          results that returned the nextToken value. This value is                null
          when there are no more results to return.
        type: string
      - in: query
        name: targetType
        description: The type of the target with which to list attributes.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Attributes
  /?Action=ListClusters&k=1:
    get:
      summary: ' List Clusters '
      description: Returns a list of existing clusters.
      operationId: listClusters
      parameters:
      - in: query
        name: maxResults
        description: The maximum number of cluster results returned by ListClusters
          in            paginated output. When this parameter is used, ListClusters
          only returns                maxResults results in a single page along with
          a nextToken            response element. The remaining results of the initial
          request can be seen by sending            another ListClusters request with
          the returned nextToken            value. This value can be between 1 and
          100. If this            parameter is not used, then ListClusters returns
          up to            100 results and a nextToken value if            applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListClusters
          request where maxResults was used and the            results exceeded the
          value of that parameter. Pagination continues from the end of the            previous
          results that returned the nextToken value. This value is                null
          when there are no more results to return.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Clusters
  /?Action=ListContainerInstances&k=1:
    get:
      summary: ' List Container Instances '
      description: Returns a list of container instances in a specified cluster.
      operationId: listContainerInstances
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the container instances            to list. If you do not specify
          a cluster, the default cluster is assumed.
        type: string
      - in: query
        name: filter
        description: You can filter the results of a ListContainerInstances operation
          with            cluster query language statements. For more information,
          see Cluster Query Language in the                Amazon EC2 Container Service
          Developer Guide.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of container instance results returned by                ListContainerInstances
          in paginated output. When this parameter is            used, ListContainerInstances
          only returns maxResults results            in a single page along with a
          nextToken response element. The remaining            results of the initial
          request can be seen by sending another                ListContainerInstances
          request with the returned nextToken            value. This value can be
          between 1 and 100. If this            parameter is not used, then ListContainerInstances
          returns up to            100 results and a nextToken value if            applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListContainerInstances
          request where maxResults was used            and the results exceeded the
          value of that parameter. Pagination continues from the end            of
          the previous results that returned the nextToken value. This value is                null
          when there are no more results to return.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Container Instances
  /?Action=ListServices&k=1:
    get:
      summary: ' List Services '
      description: Lists the services that are running in a specified cluster.
      operationId: listServices
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the services to list.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of container instance results returned by                ListServices
          in paginated output. When this parameter is used,                ListServices
          only returns maxResults results in a single            page along with a
          nextToken response element. The remaining results of the            initial
          request can be seen by sending another ListServices request with            the
          returned nextToken value. This value can be between 1            and 10.
          If this parameter is not used, then                ListServices returns
          up to 10 results and a nextToken            value if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListServices
          request where maxResults was used and the            results exceeded the
          value of that parameter. Pagination continues from the end of the            previous
          results that returned the nextToken value. This value is                null
          when there are no more results to return.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Services
  /?Action=ListTaskDefinitionFamilies&k=1:
    get:
      summary: ' List Task Definition Families '
      description: Returns a list of task definition families that are registered
        to your account            (which may include task definition families that
        no longer have any ACTIVE            task definition revisions).
      operationId: listTaskDefinitionFamilies
      parameters:
      - in: query
        name: familyPrefix
        description: The familyPrefix is a string that is used to filter the results
          of                ListTaskDefinitionFamilies. If you specify a familyPrefix,            only
          task definition family names that begin with the familyPrefix string            are
          returned.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of task definition family results returned
          by                ListTaskDefinitionFamilies in paginated output. When this
          parameter is            used, ListTaskDefinitions only returns maxResults
          results in a            single page along with a nextToken response element.
          The remaining results            of the initial request can be seen by sending
          another                ListTaskDefinitionFamilies request with the returned                nextToken
          value. This value can be between 1 and            100. If this parameter
          is not used, then                ListTaskDefinitionFamilies returns up to
          100 results            and a nextToken value if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListTaskDefinitionFamilies
          request where maxResults was            used and the results exceeded the
          value of that parameter. Pagination continues from the            end of
          the previous results that returned the nextToken value. This value            is
          null when there are no more results to return.
        type: string
      - in: query
        name: status
        description: The task definition family status with which to filter the                ListTaskDefinitionFamilies
          results. By default, both                ACTIVE and INACTIVE task definition
          families are listed.            If this parameter is set to ACTIVE, only
          task definition families that have            an ACTIVE task definition
          revision are returned. If this parameter is set            to INACTIVE,
          only task definition families that do not have any                ACTIVE
          task definition revisions are returned. If you paginate the            resulting
          output, be sure to keep the status value constant in each            subsequent
          request.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Task Definition Families
  /?Action=ListTaskDefinitions&k=1:
    get:
      summary: ' List Task Definitions '
      description: Returns a list of task definitions that are registered to your
        account.
      operationId: listTaskDefinitions
      parameters:
      - in: query
        name: familyPrefix
        description: The full family name with which to filter the ListTaskDefinitions            results.
          Specifying a familyPrefix limits the listed task definitions to            task
          definition revisions that belong to that family.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of task definition results returned by                ListTaskDefinitions
          in paginated output. When this parameter is used,                ListTaskDefinitions
          only returns maxResults results in a            single page along with a
          nextToken response element. The remaining results            of the initial
          request can be seen by sending another ListTaskDefinitions            request
          with the returned nextToken value. This value can be between            1
          and 100. If this parameter is not used, then                ListTaskDefinitions
          returns up to 100 results and a                nextToken value if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListTaskDefinitions
          request where maxResults was used and            the results exceeded the
          value of that parameter. Pagination continues from the end of            the
          previous results that returned the nextToken value. This value is                null
          when there are no more results to return.
        type: string
      - in: query
        name: sort
        description: The order in which to sort the results. Valid values are ASC
          and                DESC. By default (ASC), task definitions are listed            lexicographically
          by family name and in ascending numerical order by revision so that            the
          newest task definitions in a family are listed last. Setting this parameter
          to                DESC reverses the sort order on family name and revision
          so that the            newest task definitions in a family are listed first.
        type: string
      - in: query
        name: status
        description: The task definition status with which to filter the                ListTaskDefinitions
          results. By default, only ACTIVE task            definitions are listed.
          By setting this parameter to INACTIVE, you can view            task definitions
          that are INACTIVE as long as an active task or service            still
          references them. If you paginate the resulting output, be sure to keep the                status
          value constant in each subsequent request.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Task Definitions
  /?Action=ListTasks&k=1:
    get:
      summary: ' List Tasks '
      description: Returns a list of tasks for a specified cluster.
      operationId: listTasks
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the tasks to list.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: containerInstance
        description: The container instance ID or full Amazon Resource Name (ARN)
          of the container instance with which to            filter the ListTasks
          results. Specifying a containerInstance            limits the results to
          tasks that belong to that container instance.
        type: string
      - in: query
        name: desiredStatus
        description: The task desired status with which to filter the ListTasks results.            Specifying
          a desiredStatus of STOPPED limits the results to            tasks that ECS
          has set the desired status to STOPPED, which can be useful            for
          debugging tasks that are not starting properly or have died or finished.
          The default            status filter is RUNNING, which shows tasks that
          ECS has set the desired            status to RUNNING.
        type: string
      - in: query
        name: family
        description: The name of the family with which to filter the ListTasks results.            Specifying
          a family limits the results to tasks that belong to that            family.
        type: string
      - in: query
        name: maxResults
        description: The maximum number of task results returned by ListTasks in paginated            output.
          When this parameter is used, ListTasks only returns                maxResults
          results in a single page along with a nextToken            response element.
          The remaining results of the initial request can be seen by sending            another
          ListTasks request with the returned nextToken value.            This value
          can be between 1 and 100. If this parameter is            not used, then
          ListTasks returns up to 100 results and a                nextToken value
          if applicable.
        type: string
      - in: query
        name: nextToken
        description: The nextToken value returned from a previous paginated                ListTasks
          request where maxResults was used and the            results exceeded the
          value of that parameter. Pagination continues from the end of the            previous
          results that returned the nextToken value. This value is                null
          when there are no more results to return.
        type: string
      - in: query
        name: serviceName
        description: The name of the service with which to filter the ListTasks results.            Specifying
          a serviceName limits the results to tasks that belong to that            service.
        type: string
      - in: query
        name: startedBy
        description: The startedBy value with which to filter the task results. Specifying            a
          startedBy value limits the results to tasks that were started with that            value.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tasks
  /?Action=PutAttributes&k=1:
    get:
      summary: ' Put Attributes '
      description: Create or update an attribute on an Amazon ECS resource.
      operationId: putAttributes
      parameters:
      - in: query
        name: attributes
        description: The attributes to apply to your resource. You can specify up
          to 10 custom attributes per resource.            You can specify up to 10
          attributes in a single call.
        type: string
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that contains the resource to apply            attributes. If you do not
          specify a cluster, the default cluster is assumed.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Attributes
  /?Action=RegisterContainerInstance&k=1:
    get:
      summary: ' Register Container Instance '
      description: 'Deregisters an Amazon ECS container instance from the specified
        cluster. '
      operationId: registerContainerInstance
      responses:
        200:
          description: OK
      tags:
      - Container Instances
  /?Action=RegisterTaskDefinition&k=1:
    get:
      summary: ' Register Task Definition '
      description: Registers a new task definition from the supplied family and                containerDefinitions.
      operationId: registerTaskDefinition
      parameters:
      - in: query
        name: containerDefinitions
        description: A list of container definitions in JSON format that describe
          the different            containers that make up your task.
        type: string
      - in: query
        name: family
        description: You must specify a family for a task definition, which allows
          you to            track multiple versions of the same task definition. The
          family is used as            a name for your task definition. Up to 255
          letters (uppercase and lowercase), numbers, hyphens, and underscores are
          allowed.
        type: string
      - in: query
        name: networkMode
        description: The Docker networking mode to use for the containers in the task.
          The valid values            are none, bridge, and host.
        type: string
      - in: query
        name: placementConstraints
        description: An array of placement constraint objects to use for the task.
          You can specify a            maximum of 10 constraints per task (this limit
          includes constraints in the task            definition and those specified
          at run time).
        type: string
      - in: query
        name: taskRoleArn
        description: The short name or full Amazon Resource Name (ARN) of the IAM
          role that containers in this task can            assume. All containers
          in this task are granted the permissions that are specified in            this
          role. For more information, see IAM Roles for                Tasks in the
          Amazon EC2 Container Service Developer Guide.
        type: string
      - in: query
        name: volumes
        description: A list of volume definitions in JSON format that containers in
          your task may            use.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Task Definitions
  /?Action=RunTask&k=1:
    get:
      summary: ' Run Task '
      description: Starts a new task using the specified task definition.
      operationId: runTask
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          on which to run your task.            If you do not specify a cluster, the
          default cluster is assumed.
        type: string
      - in: query
        name: count
        description: The number of instantiations of the specified task to place on
          your            cluster. You can specify up to 10 tasks per call.
        type: string
      - in: query
        name: group
        description: The name of the task group to associate with the task. The default
          value             is the family name of the task definition (for example,
          family:my-family-name).
        type: string
      - in: query
        name: overrides
        description: A list of container overrides in JSON format that specify the
          name of a container            in the specified task definition and the
          overrides it should receive. You can override            the default command
          for a container (that is specified in the task definition or Docker            image)
          with a command override. You can also override existing environment            variables
          (that are specified in the task definition or Docker image) on a container
          or            add new environment variables to it with an environment override.
        type: string
      - in: query
        name: placementConstraints
        description: An array of placement constraint objects to use for the task.
          You can specify up to            10 constraints per task (including constraints
          in the task definition and those specified at run time).
        type: string
      - in: query
        name: placementStrategy
        description: The placement strategy objects to use for the task. You can specify
          a            maximum of 5 strategy rules per task.
        type: string
      - in: query
        name: startedBy
        description: An optional tag specified when a task is started. For example
          if you automatically            trigger a task to run a batch process job,
          you could apply a unique identifier for that            job to your task
          with the startedBy parameter. You can then identify which            tasks
          belong to that job by filtering the results of a ListTasks call            with
          the startedBy value. Up to 36 letters (uppercase and lowercase),            numbers,
          hyphens, and underscores are allowed.
        type: string
      - in: query
        name: taskDefinition
        description: The family and revision (family:revision) or            full
          Amazon Resource Name (ARN) of the task definition to run. If a revision
          is not            specified, the latest ACTIVE revision is used.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tasks
  /?Action=StartTask&k=1:
    get:
      summary: ' Start Task '
      description: Starts a new task from the specified task definition on the specified
        container            instance or instances.
      operationId: startTask
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          on which to start your task.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: containerInstances
        description: The container instance IDs or full Amazon Resource Name (ARN)
          entries for the container instances on            which you would like to
          place your task. You can specify up to 10 container instances.
        type: string
      - in: query
        name: group
        description: The name of the task group to associate with the task. The default
          value             is the family name of the task definition (for example,
          family:my-family-name).
        type: string
      - in: query
        name: overrides
        description: A list of container overrides in JSON format that specify the
          name of a container            in the specified task definition and the
          overrides it should receive. You can override            the default command
          for a container (that is specified in the task definition or Docker            image)
          with a command override. You can also override existing environment            variables
          (that are specified in the task definition or Docker image) on a container
          or            add new environment variables to it with an environment override.
        type: string
      - in: query
        name: startedBy
        description: An optional tag specified when a task is started. For example
          if you automatically            trigger a task to run a batch process job,
          you could apply a unique identifier for that            job to your task
          with the startedBy parameter. You can then identify which            tasks
          belong to that job by filtering the results of a ListTasks call            with
          the startedBy value. Up to 36 letters (uppercase and lowercase),            numbers,
          hyphens, and underscores are allowed.
        type: string
      - in: query
        name: taskDefinition
        description: The family and revision (family:revision) or            full
          Amazon Resource Name (ARN) of the task definition to start. If a revision
          is not            specified, the latest ACTIVE revision is used.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tasks
  /?Action=StopTask&k=1:
    get:
      summary: ' Stop Task '
      description: Stops a running task.
      operationId: stopTask
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that hosts the task to stop.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: reason
        description: An optional message specified when a task is stopped. For example,
          if you are using            a custom scheduler, you can use this parameter
          to specify the reason for stopping the            task here, and the message
          will appear in subsequent DescribeTasks API            operations on this
          task. Up to 255 characters are allowed in this message.
        type: string
      - in: query
        name: task
        description: The task ID or full Amazon Resource Name (ARN) entry of the task
          to stop.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Tasks
  /?Action=SubmitContainerStateChange&k=1:
    get:
      summary: ' Submit Container State Change '
      description: This action is only used by the Amazon EC2 Container Service agent,
        and it is not intended for use outside of the agent.
      operationId: submitContainerStateChange
      responses:
        200:
          description: OK
      tags:
      - Container State Change
  /?Action=SubmitTaskStateChange&k=1:
    get:
      summary: ' Submit Task State Change '
      description: This action is only used by the Amazon EC2 Container Service agent,
        and it is not intended for use outside of the agent.
      operationId: submitTaskStateChange
      responses:
        200:
          description: OK
      tags:
      - Task State Change
  /?Action=UpdateContainerAgent&k=1:
    get:
      summary: ' Update Container Agent '
      description: Updates the Amazon ECS container agent on a specified container
        instance.
      operationId: updateContainerAgent
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that your container instance is            running on. If you do not specify
          a cluster, the default cluster is assumed.
        type: string
      - in: query
        name: containerInstance
        description: The container instance ID or full Amazon Resource Name (ARN)
          entries for the container instance on            which you would like to
          update the Amazon ECS container agent.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Container Agents
  /?Action=UpdateService&k=1:
    get:
      summary: ' Update Service '
      description: Modifies the desired count, deployment configuration, or task definition
        used in a            service.
      operationId: updateService
      parameters:
      - in: query
        name: cluster
        description: The short name or full Amazon Resource Name (ARN) of the cluster
          that your service is running on.            If you do not specify a cluster,
          the default cluster is assumed.
        type: string
      - in: query
        name: deploymentConfiguration
        description: Optional deployment parameters that control how many tasks run
          during the            deployment and the ordering of stopping and starting
          tasks.
        type: string
      - in: query
        name: desiredCount
        description: The number of instantiations of the task to place and keep running
          in your            service.
        type: string
      - in: query
        name: service
        description: The name of the service to update.
        type: string
      - in: query
        name: taskDefinition
        description: The family and revision (family:revision) or            full
          Amazon Resource Name (ARN) of the task definition to run in your service.
          If a revision            is not specified, the latest ACTIVE revision is
          used. If you modify the            task definition with UpdateService, Amazon
          ECS spawns a task with the new            version of the task definition
          and then stops an old task after the new version is            running.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Services
definitions: []