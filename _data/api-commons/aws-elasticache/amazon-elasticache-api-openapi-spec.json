
  {
	"swagger": "2.0",
	"info": {
		"title": "Amazon ElastiCache API",
		"version": "1.0.0"
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/?Action=AddTagsToResource&k=1": {
			"get": {
				"summary": " Add Tags To Resource ",
				"description": "Adds up to 10 cost allocation tags to the named resource.",
				"operationId": "addTagsToResource",
				"parameters": [{
					"in": "query",
					"name": "ResourceName",
					"description": "The Amazon Resource Name (ARN) of the resource to which the tags are to be added,             for example arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster             or arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of cost allocation tags to be added to this resource. A tag is a key-value pair.           A tag key must be accompanied by a tag value.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Resource Tags"]
			}
		},
		"/?Action=AuthorizeCacheSecurityGroupIngress&k=1": {
			"get": {
				"summary": " Authorize Cache Security Group Ingress ",
				"description": "Allows network ingress to a cache            security group.",
				"operationId": "authorizeCacheSecurityGroupIngress",
				"parameters": [{
					"in": "query",
					"name": "CacheSecurityGroupName",
					"description": "The cache security group that allows network ingress.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupName",
					"description": "The Amazon EC2 security group to be authorized for ingress to the cache security group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupOwnerId",
					"description": "The AWS account number of the Amazon EC2 security group owner.             Note that this is not the same thing as an AWS access key ID -             you must provide a valid AWS account number for this parameter.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Security Groups"]
			}
		},
		"/?Action=CopySnapshot&k=1": {
			"get": {
				"summary": " Copy Snapshot ",
				"description": "Makes a copy of an existing snapshot.",
				"operationId": "copySnapshot",
				"parameters": [{
					"in": "query",
					"name": "SourceSnapshotName",
					"description": "The name of an existing snapshot from which to make a copy.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetBucket",
					"description": "The Amazon S3 bucket to which the snapshot is exported.            This parameter is used only when exporting a snapshot for external access.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetSnapshotName",
					"description": "A name for the snapshot copy.            ElastiCache does not permit overwriting a snapshot, therefore            this name must be unique within its context - ElastiCache or an Amazon S3 bucket if exporting.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=CreateCacheCluster&k=1": {
			"get": {
				"summary": " Create Cache Cluster ",
				"description": "Creates a cache cluster.",
				"operationId": "createCacheCluster",
				"parameters": [{
					"in": "query",
					"name": "AuthToken",
					"description": "Reserved parameter.              The password used to access a password protected server.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "This parameter is currently disabled.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AZMode",
					"description": "Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or             created across multiple Availability Zones in the clusters region.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The node group (shard) identifier. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheNodeType",
					"description": "The compute and memory capacity of the nodes in the node group (shard).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the parameter group to associate with this cache cluster.             If this argument is omitted, the default parameter group for the specified engine is used.            You cannot use any parameter group which has cluster-enabled=yes when creating a cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSecurityGroupNames.CacheSecurityGroupName.N",
					"description": "A list of security group names to associate with this cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSubnetGroupName",
					"description": "The name of the subnet group to be used for the cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The name of the cache engine to be used for this cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version number of the cache engine to be used for this cache cluster.             To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NotificationTopicArn",
					"description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic           to which notifications are sent.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumCacheNodes",
					"description": "The initial number of cache nodes that the cache cluster has.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which each of the cache nodes  accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredAvailabilityZone",
					"description": "The EC2 Availability Zone in which the cache cluster is created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredAvailabilityZones.PreferredAvailabilityZone.N",
					"description": "A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "Specifies the weekly time range during which maintenance            on the cache cluster is performed. It is specified as a range in            the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum            maintenance window is a 60 minute period.            Valid values for ddd are:",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "Important",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SecurityGroupIds.SecurityGroupId.N",
					"description": "One or more VPC security groups associated with the cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotArns.SnapshotArn.N",
					"description": "A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3.           The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotName",
					"description": "The name of a Redis snapshot from which to restore data into the new node group (shard).          The snapshot status changes to restoring while the new node group (shard) is being created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotRetentionLimit",
					"description": "The number of days for which ElastiCache retains automatic snapshots before deleting them.     For example, if you set SnapshotRetentionLimit to 5,     a snapshot taken today is retained for 5 days before being deleted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotWindow",
					"description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of cost allocation tags to be added to this resource. A tag is a key-value pair. A tag key must be accompanied by a tag value.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Clusters"]
			}
		},
		"/?Action=CreateCacheParameterGroup&k=1": {
			"get": {
				"summary": " Create Cache Parameter Group ",
				"description": "Creates a new cache parameter group.",
				"operationId": "createCacheParameterGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupFamily",
					"description": "The name of the cache parameter group family that the cache parameter group can be used with.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "A user-specified name for the cache parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Description",
					"description": "A user-specified description for the cache parameter group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Parameter Groups"]
			}
		},
		"/?Action=CreateCacheSecurityGroup&k=1": {
			"get": {
				"summary": " Create Cache Security Group ",
				"description": "Creates a new cache security group.",
				"operationId": "createCacheSecurityGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheSecurityGroupName",
					"description": "A name for the cache security group. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Description",
					"description": "A description for the cache security group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Security Groups"]
			}
		},
		"/?Action=CreateCacheSubnetGroup&k=1": {
			"get": {
				"summary": " Create Cache Subnet Group ",
				"description": "Creates a new cache subnet group.",
				"operationId": "createCacheSubnetGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheSubnetGroupDescription",
					"description": "A description for the cache subnet group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSubnetGroupName",
					"description": "A name for the cache subnet group. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubnetIds.SubnetIdentifier.N",
					"description": "A list of VPC subnet IDs for the cache subnet group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Subnet Groups"]
			}
		},
		"/?Action=CreateReplicationGroup&k=1": {
			"get": {
				"summary": " Create Replication Group ",
				"description": "Creates a Redis (cluster mode disabled) or a Redis (cluster mode enabled) replication group.",
				"operationId": "createReplicationGroup",
				"parameters": [{
					"in": "query",
					"name": "AuthToken",
					"description": "Reserved parameter.              The password used to access a password protected server.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutomaticFailoverEnabled",
					"description": "Specifies whether a read-only replica is automatically promoted to read/write primary if the existing primary fails.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "This parameter is currently disabled.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheNodeType",
					"description": "The compute and memory capacity of the nodes in the node group (shard).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the parameter group to associate with this replication group.             If this argument is omitted, the default cache parameter group for the specified engine is            used.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSecurityGroupNames.CacheSecurityGroupName.N",
					"description": "A list of cache security group names to associate with this replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSubnetGroupName",
					"description": "The name of the cache subnet group to be used for the replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The name of the cache engine to be used for the cache clusters in this replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version number of the cache engine to be used for the cache clusters in this replication group.             To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NodeGroupConfiguration.NodeGroupConfiguration.N",
					"description": "A list of node group (shard) configuration options.             Each node group (shard) configuration has the following: Slots, PrimaryAvailabilityZone, ReplicaAvailabilityZones, ReplicaCount.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NotificationTopicArn",
					"description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumCacheClusters",
					"description": "The number of clusters this replication group initially has.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumNodeGroups",
					"description": "An optional parameter that specifies the number of node groups (shards) for this Redis (cluster mode enabled) replication group.             For Redis (cluster mode disabled) either omit this parameter or set it to 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which each member of the replication group accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredCacheClusterAZs.AvailabilityZone.N",
					"description": "A list of EC2 Availability Zones in which the replication groups cache clusters are created.             The order of the Availability Zones in the list is the order in which clusters are allocated.             The primary cluster is created in the first AZ in the list.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "Specifies the weekly time range during which maintenance    on the cache cluster is performed. It is specified as a range in    the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum    maintenance window is a 60 minute period.    Valid values for ddd are:",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PrimaryClusterId",
					"description": "The identifier of the cache cluster that serves as the primary for this replication            group. This cache cluster must already exist and have a status of available.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicasPerNodeGroup",
					"description": "An optional parameter that specifies the number of replica nodes in each node group (shard).            Valid values are 0 to 5.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupDescription",
					"description": "A user-created description for the replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "The replication group identifier. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SecurityGroupIds.SecurityGroupId.N",
					"description": "One or more Amazon VPC security groups associated with this replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotArns.SnapshotArn.N",
					"description": "A list of Amazon Resource Names (ARN) that uniquely identify           the Redis RDB snapshot files stored in Amazon S3.           The snapshot files are used to populate the replication group.           The Amazon S3 object name in the ARN cannot contain any commas.           The list must match the number of node groups (shards) in the replication group,           which means you cannot repartition.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotName",
					"description": "The name of a snapshot from which to restore data into the new replication group.     The snapshot status changes to restoring while the new replication group is being created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotRetentionLimit",
					"description": "The number of days for which ElastiCache retains automatic snapshots before deleting them.     For example, if you set SnapshotRetentionLimit to 5,     a snapshot that was taken today is retained for 5 days before being deleted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotWindow",
					"description": "The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of cost allocation tags to be added to this resource.           A tag is a key-value pair. A tag key must be accompanied by a tag value.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Replication Groups"]
			}
		},
		"/?Action=CreateSnapshot&k=1": {
			"get": {
				"summary": " Create Snapshot ",
				"description": "Creates a copy of an entire cache cluster or replication group at a            specific moment in time.",
				"operationId": "createSnapshot",
				"parameters": [{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The identifier of an existing cache cluster. The snapshot is created from this cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "The identifier of an existing replication group. The snapshot is created from this replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotName",
					"description": "A name for the snapshot being created.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=DeleteCacheCluster&k=1": {
			"get": {
				"summary": " Delete Cache Cluster ",
				"description": "Deletes a previously provisioned cache cluster.",
				"operationId": "deleteCacheCluster",
				"parameters": [{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The cache cluster identifier for the cluster to be deleted. This parameter is not case sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "FinalSnapshotIdentifier",
					"description": "The user-supplied name of a final cache cluster snapshot. This is the unique name that identifies the snapshot.             ElastiCache creates the snapshot, and then deletes the cache cluster immediately afterward.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Clusters"]
			}
		},
		"/?Action=DeleteCacheParameterGroup&k=1": {
			"get": {
				"summary": " Delete Cache Parameter Group ",
				"description": "Deletes the specified cache parameter            group.",
				"operationId": "deleteCacheParameterGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the cache parameter group to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Parameter Groups"]
			}
		},
		"/?Action=DeleteCacheSecurityGroup&k=1": {
			"get": {
				"summary": " Delete Cache Security Group ",
				"description": "Deletes a cache security group.",
				"operationId": "deleteCacheSecurityGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheSecurityGroupName",
					"description": "The name of the cache security group to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Security Groups"]
			}
		},
		"/?Action=DeleteCacheSubnetGroup&k=1": {
			"get": {
				"summary": " Delete Cache Subnet Group ",
				"description": "Deletes a cache subnet group.",
				"operationId": "deleteCacheSubnetGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheSubnetGroupName",
					"description": "The name of the cache subnet group to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Subnet Groups"]
			}
		},
		"/?Action=DeleteReplicationGroup&k=1": {
			"get": {
				"summary": " Delete Replication Group ",
				"description": "Deletes an existing replication group.",
				"operationId": "deleteReplicationGroup",
				"parameters": [{
					"in": "query",
					"name": "FinalSnapshotIdentifier",
					"description": "The name of a final node group (shard) snapshot.             ElastiCache creates the snapshot from the primary node in the cluster,             rather than one of the replicas; this is to ensure that it captures the freshest data.             After the final snapshot is taken, the replication group is immediately deleted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "The identifier for the cluster to be deleted. This parameter is not case sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RetainPrimaryCluster",
					"description": "If set to true, all of the read replicas are deleted,             but the primary node is retained.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Replication Groups"]
			}
		},
		"/?Action=DeleteSnapshot&k=1": {
			"get": {
				"summary": " Delete Snapshot ",
				"description": "Deletes an existing snapshot.",
				"operationId": "deleteSnapshot",
				"parameters": [{
					"in": "query",
					"name": "SnapshotName",
					"description": "The name of the snapshot to be deleted.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=DescribeCacheClusters&k=1": {
			"get": {
				"summary": " Describe Cache Clusters ",
				"description": "Returns information about all provisioned            cache clusters if no cache cluster identifier is specified, or about a specific cache            cluster if a cache cluster identifier is supplied.",
				"operationId": "describeCacheClusters",
				"parameters": [{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The user-supplied cluster identifier. If this parameter is specified, only information            about that specific cache cluster is returned. This parameter isnt case sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation. If this            parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ShowCacheNodeInfo",
					"description": "An optional flag that can be included in the DescribeCacheCluster request             to retrieve information about the individual cache nodes.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Clusters"]
			}
		},
		"/?Action=DescribeCacheEngineVersions&k=1": {
			"get": {
				"summary": " Describe Cache Engine Versions ",
				"description": "Returns a list of the available cache            engines and their versions.",
				"operationId": "describeCacheEngineVersions",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupFamily",
					"description": "The name of a specific cache parameter group family to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DefaultOnly",
					"description": "If true, specifies that only the default version of the specified engine or engine            and major version combination is to be returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The cache engine to return. Valid values: memcached | redis",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The cache engine version to return.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Engine Versions"]
			}
		},
		"/?Action=DescribeCacheParameterGroups&k=1": {
			"get": {
				"summary": " Describe Cache Parameter Groups ",
				"description": "Returns a list of cache parameter group            descriptions.",
				"operationId": "describeCacheParameterGroups",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of a specific cache parameter group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Parameter Groups"]
			}
		},
		"/?Action=DescribeCacheParameters&k=1": {
			"get": {
				"summary": " Describe Cache Parameters ",
				"description": "Returns the detailed parameter list for a            particular cache parameter group.",
				"operationId": "describeCacheParameters",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of a specific cache parameter group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Source",
					"description": "The parameter types to return.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Parameters"]
			}
		},
		"/?Action=DescribeCacheSecurityGroups&k=1": {
			"get": {
				"summary": " Describe Cache Security Groups ",
				"description": "Returns a list of cache security group            descriptions.",
				"operationId": "describeCacheSecurityGroups",
				"parameters": [{
					"in": "query",
					"name": "CacheSecurityGroupName",
					"description": "The name of the cache security group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this            parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Security Groups"]
			}
		},
		"/?Action=DescribeCacheSubnetGroups&k=1": {
			"get": {
				"summary": " Describe Cache Subnet Groups ",
				"description": "Returns a list of cache subnet group            descriptions.",
				"operationId": "describeCacheSubnetGroups",
				"parameters": [{
					"in": "query",
					"name": "CacheSubnetGroupName",
					"description": "The name of the cache subnet group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Subnet Groups"]
			}
		},
		"/?Action=DescribeEngineDefaultParameters&k=1": {
			"get": {
				"summary": " Describe Engine Default Parameters ",
				"description": "Returns the default engine and            system parameter information for the specified cache engine.",
				"operationId": "describeEngineDefaultParameters",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupFamily",
					"description": "The name of the cache parameter group family.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this            parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Engine Default Parameters"]
			}
		},
		"/?Action=DescribeEvents&k=1": {
			"get": {
				"summary": " Describe Events ",
				"description": "Returns events related to cache clusters, cache            security groups, and cache parameter groups.",
				"operationId": "describeEvents",
				"parameters": [{
					"in": "query",
					"name": "Duration",
					"description": "The number of minutes worth of events to retrieve.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EndTime",
					"description": "The end of the time interval for which to retrieve events, specified in ISO 8601 format.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker,             up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceIdentifier",
					"description": "The identifier of the event source for which events are returned.             If not specified, all sources are included in the response.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceType",
					"description": "The event source to retrieve events for.             If no value is specified, all events are returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartTime",
					"description": "The beginning of the time interval to retrieve events for, specified in ISO 8601 format.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Events"]
			}
		},
		"/?Action=DescribeReplicationGroups&k=1": {
			"get": {
				"summary": " Describe Replication Groups ",
				"description": "Returns information about a particular            replication group.",
				"operationId": "describeReplicationGroups",
				"parameters": [{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this            parameter is specified, the response includes only records beyond the marker, up to the            value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "The identifier for the replication group to be described. This parameter is not case sensitive.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Replication Groups"]
			}
		},
		"/?Action=DescribeReservedCacheNodes&k=1": {
			"get": {
				"summary": " Describe Reserved Cache Nodes ",
				"description": "Returns information about reserved cache            nodes for this account, or about a specified reserved cache node.",
				"operationId": "describeReservedCacheNodes",
				"parameters": [{
					"in": "query",
					"name": "CacheNodeType",
					"description": "The cache node type filter value.             Use this parameter to show only those reservations matching the specified cache node type.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Duration",
					"description": "The duration filter value, specified in years or seconds.             Use this parameter to show only reservations for this duration.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker,             up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OfferingType",
					"description": "The offering type filter value.             Use this parameter to show only the available offerings matching the specified offering type.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ProductDescription",
					"description": "The product description filter value. Use this parameter to show only those reservations matching the specified product description.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedCacheNodeId",
					"description": "The reserved cache node identifier filter value.             Use this parameter to show only the reservation that matches the specified reservation ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedCacheNodesOfferingId",
					"description": "The offering identifier filter value.             Use this parameter to show only purchased reservations matching the specified offering identifier.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reserved Cache Nodes"]
			}
		},
		"/?Action=DescribeReservedCacheNodesOfferings&k=1": {
			"get": {
				"summary": " Describe Reserved Cache Nodes Offerings ",
				"description": "Lists available reserved cache            node offerings.",
				"operationId": "describeReservedCacheNodesOfferings",
				"parameters": [{
					"in": "query",
					"name": "CacheNodeType",
					"description": "The cache node type filter value.             Use this parameter to show only the available offerings matching the specified cache node type.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Duration",
					"description": "Duration filter value, specified in years or seconds.             Use this parameter to show only reservations for a given duration.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker,             up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OfferingType",
					"description": "The offering type filter value.             Use this parameter to show only the available offerings matching the specified offering type.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ProductDescription",
					"description": "The product description filter value.             Use this parameter to show only the available offerings matching the specified product description.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedCacheNodesOfferingId",
					"description": "The offering identifier filter value.             Use this parameter to show only the available offering that matches the specified reservation identifier.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reserved Cache Nodes"]
			}
		},
		"/?Action=DescribeSnapshots&k=1": {
			"get": {
				"summary": " Describe Snapshots ",
				"description": "Returns information about cache cluster or replication group snapshots.",
				"operationId": "describeSnapshots",
				"parameters": [{
					"in": "query",
					"name": "CacheClusterId",
					"description": "A user-supplied cluster identifier.             If this parameter is specified, only snapshots associated with that specific cache cluster are described.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional marker returned from a prior request.             Use this marker for pagination of results from this operation.             If this parameter is specified, the response includes only records beyond the marker,             up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the            specified MaxRecords value, a marker is included in the response so that            the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "A user-supplied replication group identifier.            If this parameter is specified, only snapshots associated with that specific replication group are described.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ShowNodeGroupConfig",
					"description": "A Boolean value which if true, the node group (shard) configuration is included in the snapshot description.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotName",
					"description": "A user-supplied name of the snapshot.             If this parameter is specified, only this snapshot are described.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotSource",
					"description": "If set to system, the output shows snapshots that were automatically created by ElastiCache.             If set to user the output shows snapshots that were manually created.             If omitted, the output shows both automatically and manually created snapshots.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=ListAllowedNodeTypeModifications&k=1": {
			"get": {
				"summary": " List Allowed Node Type Modifications ",
				"description": "Lists all available node types that you            can scale your Redis clusters or replication groups current node type up to.",
				"operationId": "listAllowedNodeTypeModifications",
				"parameters": [{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The name of the cache cluster you want to scale up to a larger node instanced type.             ElastiCache uses the cluster id to identify the current node type of this cluster and from that to create a list of node types you can scale up to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "The name of the replication group want to scale up to a larger node type.        ElastiCache uses the replication group id to identify the current node type being used by        this replication group, and from that to create a list of node types you can scale up to.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Node Type Modifications"]
			}
		},
		"/?Action=ListAvailableNodeTypes&k=1": {
			"get": {
				"summary": " List Available Node Types ",
				"description": ".",
				"operationId": "listAvailableNodeTypes",
				"parameters": [{
					"in": "query",
					"name": "AvailableNodeTypes.member.N",
					"description": "Type: array of AvailableNodeType objects",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Node Types"]
			}
		},
		"/?Action=ListTagsForResource&k=1": {
			"get": {
				"summary": " List Tags For Resource ",
				"description": "Lists all cost allocation tags currently on the named resource.",
				"operationId": "listTagsForResource",
				"parameters": [{
					"in": "query",
					"name": "ResourceName",
					"description": "The Amazon Resource Name (ARN) of the resource for which you want the list of tags,             for example arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster             or arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Resource Tags"]
			}
		},
		"/?Action=ModifyCacheCluster&k=1": {
			"get": {
				"summary": " Modify Cache Cluster ",
				"description": "Modifies the settings for a cache cluster.",
				"operationId": "modifyCacheCluster",
				"parameters": [{
					"in": "query",
					"name": "ApplyImmediately",
					"description": "If true, this parameter causes the modifications in this request and any            pending modifications to be applied, asynchronously and as soon as possible, regardless            of the PreferredMaintenanceWindow setting for the cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "This parameter is currently disabled.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AZMode",
					"description": "Specifies whether the new nodes in this Memcached cache cluster are all created in a             single Availability Zone or created across multiple Availability Zones.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The cache cluster identifier. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheNodeIdsToRemove.CacheNodeId.N",
					"description": "A list of cache node IDs to be removed. A node ID is a numeric identifier (0001, 0002,            etc.). This parameter is only valid when NumCacheNodes is less than the existing number            of cache nodes. The number of cache node IDs supplied in this parameter must match the            difference between the existing number of cache nodes in the cluster or pending cache nodes, whichever is            greater, and the value of NumCacheNodes in the request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheNodeType",
					"description": "A valid cache node type that you want to scale this cache cluster up to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the cache parameter group to apply to this cache cluster. This change is            asynchronously applied as soon as possible for parameters when the            ApplyImmediately parameter is specified as true for this request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSecurityGroupNames.CacheSecurityGroupName.N",
					"description": "A list of cache security group names to authorize on this cache cluster.             This change is asynchronously applied as soon as possible.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The upgraded version of the cache engine to be run on the cache nodes.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NewAvailabilityZones.PreferredAvailabilityZone.N",
					"description": "The list of Availability Zones where the new Memcached cache nodes are created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NotificationTopicArn",
					"description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NotificationTopicStatus",
					"description": "The status of the Amazon SNS notification topic. Notifications are sent only if the            status is active.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumCacheNodes",
					"description": "The number of cache nodes that the cache cluster should have.             If the value for NumCacheNodes is greater than the sum of  the number of current cache nodes and             the number of cache nodes pending creation (which may be zero), more nodes are added.             If the value is less than the number of existing cache nodes,  nodes are removed.             If the value is equal to the number of current cache nodes,              any pending add or remove requests are canceled.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "Specifies the weekly time range during which maintenance   on the cluster is performed. It is specified as a range in   the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum   maintenance window is a 60 minute period.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SecurityGroupIds.SecurityGroupId.N",
					"description": "Specifies the VPC Security Groups associated with the cache cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotRetentionLimit",
					"description": "The number of days for which ElastiCache retains automatic cache cluster snapshots before            deleting them. For example, if you set SnapshotRetentionLimit to 5,  a            snapshot that was taken today is retained for 5 days before being deleted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotWindow",
					"description": "The daily time range (in UTC) during which ElastiCache  begins taking a daily snapshot of            your cache cluster.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Clusters"]
			}
		},
		"/?Action=ModifyCacheParameterGroup&k=1": {
			"get": {
				"summary": " Modify Cache Parameter Group ",
				"description": "Modifies the parameters of a cache            parameter group.",
				"operationId": "modifyCacheParameterGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the cache parameter group to modify.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ParameterNameValues.ParameterNameValue.N",
					"description": "An array of parameter names and values for the parameter update. You must supply at least one parameter name and value; subsequent arguments are optional. A maximum of 20 parameters may be modified per request.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Parameter Groups"]
			}
		},
		"/?Action=ModifyCacheSubnetGroup&k=1": {
			"get": {
				"summary": " Modify Cache Subnet Group ",
				"description": "Modifies an existing cache subnet group.",
				"operationId": "modifyCacheSubnetGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheSubnetGroupDescription",
					"description": "A description of the cache subnet group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSubnetGroupName",
					"description": "The name for the cache subnet group. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubnetIds.SubnetIdentifier.N",
					"description": "The EC2 subnet IDs for the cache subnet group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Subnet Groups"]
			}
		},
		"/?Action=ModifyReplicationGroup&k=1": {
			"get": {
				"summary": " Modify Replication Group ",
				"description": "Modifies the settings for a replication group.",
				"operationId": "modifyReplicationGroup",
				"parameters": [{
					"in": "query",
					"name": "ApplyImmediately",
					"description": "If true, this parameter causes the modifications in this request and any            pending modifications to be applied, asynchronously and as soon as possible, regardless            of the PreferredMaintenanceWindow setting for the replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutomaticFailoverEnabled",
					"description": "Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "This parameter is currently disabled.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheNodeType",
					"description": "A valid cache node type that you want to scale this replication group to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the cache parameter group to apply to all of the clusters in this replication group.             This change is asynchronously applied as soon as possible for parameters when the             ApplyImmediately parameter is specified as true for this request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheSecurityGroupNames.CacheSecurityGroupName.N",
					"description": "A list of cache security group names to authorize for the clusters in this replication group. This change is asynchronously applied as soon as possible.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The upgraded version of the cache engine to be run on the cache clusters in the replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NotificationTopicArn",
					"description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which notifications are sent.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NotificationTopicStatus",
					"description": "The status of the Amazon SNS notification topic for the replication group.             Notifications are sent only if the status is active.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "Specifies the weekly time range during which maintenance   on the cluster is performed. It is specified as a range in   the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum   maintenance window is a 60 minute period.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PrimaryClusterId",
					"description": "For replication groups with a single primary,             if this parameter is specified, ElastiCache promotes the specified cluster in the specified replication group to the primary role.             The nodes of all other clusters in the replication group are read replicas.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupDescription",
					"description": "A description for the replication group. Maximum length is 255 characters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationGroupId",
					"description": "The identifier of the replication group to modify.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SecurityGroupIds.SecurityGroupId.N",
					"description": "Specifies the VPC Security Groups associated with the cache clusters in the replication group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotRetentionLimit",
					"description": "The number of days for which ElastiCache retains automatic node group (shard) snapshots before            deleting them. For example, if you set SnapshotRetentionLimit to 5, a            snapshot that was taken today is retained for 5 days before being deleted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshottingClusterId",
					"description": "The cache cluster ID that is used as the daily snapshot source for the replication group.            This parameter cannot be set for Redis (cluster mode enabled) replication groups.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotWindow",
					"description": "The daily time range (in UTC) during which ElastiCache  begins taking a daily snapshot of            the node group (shard) specified by SnapshottingClusterId.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Replication Groups"]
			}
		},
		"/?Action=PurchaseReservedCacheNodesOffering&k=1": {
			"get": {
				"summary": " Purchase Reserved Cache Nodes Offering ",
				"description": "Allows you to purchase a reserved            cache node offering.",
				"operationId": "purchaseReservedCacheNodesOffering",
				"parameters": [{
					"in": "query",
					"name": "CacheNodeCount",
					"description": "The number of cache node instances to reserve.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedCacheNodeId",
					"description": "A customer-specified identifier to track this reservation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedCacheNodesOfferingId",
					"description": "The ID of the reserved cache node offering to purchase.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reserved Cache Nodes"]
			}
		},
		"/?Action=RebootCacheCluster&k=1": {
			"get": {
				"summary": " Reboot Cache Cluster ",
				"description": "Reboots some, or all, of the cache nodes            within a provisioned cache cluster.",
				"operationId": "rebootCacheCluster",
				"parameters": [{
					"in": "query",
					"name": "CacheClusterId",
					"description": "The cache cluster identifier. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CacheNodeIdsToReboot.CacheNodeId.N",
					"description": "A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cache cluster, specify all of the cache node IDs.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Clusters"]
			}
		},
		"/?Action=RemoveTagsFromResource&k=1": {
			"get": {
				"summary": " Remove Tags From Resource ",
				"description": "Removes the tags identified by the TagKeys             list from the named resource.",
				"operationId": "removeTagsFromResource",
				"parameters": [{
					"in": "query",
					"name": "ResourceName",
					"description": "The Amazon Resource Name (ARN) of the resource from which you want the tags removed,             for example arn:aws:elasticache:us-west-2:0123456789:cluster:myCluster             or arn:aws:elasticache:us-west-2:0123456789:snapshot:mySnapshot.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TagKeys.member.N",
					"description": "A list of TagKeys identifying the tags you want removed from the named resource.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Resource Tags"]
			}
		},
		"/?Action=ResetCacheParameterGroup&k=1": {
			"get": {
				"summary": " Reset Cache Parameter Group ",
				"description": "Modifies the parameters of a cache            parameter group to the engine or system default value.",
				"operationId": "resetCacheParameterGroup",
				"parameters": [{
					"in": "query",
					"name": "CacheParameterGroupName",
					"description": "The name of the cache parameter group to reset.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ParameterNameValues.ParameterNameValue.N",
					"description": "An array of parameter names to reset to their default values.             If ResetAllParameters is true,             do not use ParameterNameValues.            If ResetAllParameters is false,             you must specify the name of at least one parameter to reset.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ResetAllParameters",
					"description": "If true,             all parameters in the cache parameter group are reset to their default values.            If false, only the parameters listed by ParameterNameValues            are reset to their default values.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Parameter Groups"]
			}
		},
		"/?Action=RevokeCacheSecurityGroupIngress&k=1": {
			"get": {
				"summary": " Revoke Cache Security Group Ingress ",
				"description": "Revokes ingress from a cache            security group.",
				"operationId": "revokeCacheSecurityGroupIngress",
				"parameters": [{
					"in": "query",
					"name": "CacheSecurityGroupName",
					"description": "The name of the cache security group to revoke ingress from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupName",
					"description": "The name of the Amazon EC2 security group to revoke access from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupOwnerId",
					"description": "The AWS account number of the Amazon EC2 security group owner.             Note that this is not the same thing as an AWS access key ID - you must provide             a valid AWS account number for this parameter.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cache Security Groups"]
			}
		}
	},
	"definitions": []
}