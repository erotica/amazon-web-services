
  {
	"swagger": "2.0",
	"info": {
		"title": "Amazon Glacier API",
		"version": "1.0.0"
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/{AccountId}/policies/data-retrieval": {
			"get": {
				"summary": "Get  Data  Retrieval  Policy",
				"description": "DescriptionThis operation returns the current data retrieval policy for the account and region specified in thenttttGET request",
				"operationId": "Get Data Retrieval Policy (GET policy)",
				"parameters": [{
					"in": "query",
					"name": "BytesPerHour",
					"description": "The maximum number of bytes that can be retrieved in an hour.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Rules",
					"description": "The policy rule. Although this is a list type, currently there will be only one rule, which contains attttttttStrategy field and optionally a BytesPerHour field.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Strategy",
					"description": "The type of data retrieval policy.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Data  Retrieval  Policies"]
			},
			"put": {
				"summary": "Set  Data  Retrieval  Policy",
				"description": "DescriptionThis operation sets and then enacts a data retrieval policy in the region specified in the PUT request",
				"operationId": "Set Data Retrieval Policy (PUT policy)",
				"parameters": [{
					"in": "query",
					"name": "BytesPerHour",
					"description": "The maximum number of bytes that can be retrieved in an hour.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Rules",
					"description": "The policy rule. Although this is a list type, currently there must be only onettttttttrule, which contains a Strategy field and optionally a BytesPerHour field.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Strategy",
					"description": "The type of data retrieval policy to set.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Data  Retrieval  Policy"]
			}
		},
		"/{AccountId}/provisioned-capacity": {
			"post": {
				"summary": "Purchase  Provisioned  Capacity",
				"description": "Purchase Provisioned Capacity (POST provisioned-capacity)This operation purchases a provisioned capacity unit for an AWS account",
				"operationId": "Purchase Provisioned Capacity (POST provisioned-capacity)",
				"parameters": [{
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Purchase Provisioned Capacity"]
			}
		},
		"/{AccountId}/vaults": {
			"get": {
				"summary": "List  Vaults",
				"description": "DescriptionThis operation lists all vaults owned by the calling user&#8217;s account",
				"operationId": "List Vaults (GET vaults)",
				"parameters": [{
					"in": "query",
					"name": "CreationDate",
					"description": "The date the vault was created, in Coordinated Universal Time (UTC).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LastInventoryDate",
					"description": "The date of the last vault inventory, in Coordinated Universal Time (UTC). This fieldttttttttcan be null if an inventory has not yet run on the vault, forttttttttexample, if you just created the vault. For information aboutttttttttinitiating an inventory for a vault, see Initiate Job (POST jobs).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "The vaultARN that represents where to continue pagination of the results.ttttttttYou use the marker in another List Vaults request tottttttttobtain more vaults in the list. If there are no more vaults, thisttttttttvalue is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumberOfArchives",
					"description": "The number of archives in the vault as of the last inventory date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SizeInBytes",
					"description": "The total size, in bytes, of all the archives in the vault including any per-archivettttttttoverhead, as of the last inventory date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) of the vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultList",
					"description": "An array of objects, with each object providing a description of a vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultName",
					"description": "The vault name.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vaults"]
			}
		},
		"/{AccountId}/vaults/{VaultName}": {
			"delete": {
				"summary": "Delete  Vault",
				"description": "DescriptionThis operation deletes a vault",
				"operationId": "Delete Vault (DELETE vault)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vaults"]
			},
			"get": {
				"summary": "Describe  Vault",
				"description": "DescriptionThis operation returns information about a vault, including the vault Amazon Resource Namenttt(ARN), the date the vault was created, the number of archives contained within thentttvault, and the total size of all the archives in the vault",
				"operationId": "Describe Vault (GET vault)",
				"parameters": [{
					"in": "query",
					"name": "CreationDate",
					"description": "The UTC date when the vault was created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LastInventoryDate",
					"description": "The UTC date when Amazon Glacier completed the last vault inventory. For information abouttttttttinitiating an inventory for a vault, see Initiate Job (POST jobs).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumberOfArchives",
					"description": "The number of archives in the vault as per the last vault inventory. This field willtttttttreturn null if an inventory has not yet run on the vault, for example,tttttttif you just created the vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SizeInBytes",
					"description": "The total size in bytes of the archives in the vault including any per-archive overhead,tttttttas of the last inventory date. This field will return nulltttttttif an inventory has not yet run on the vault, for example, if you justtttttttcreated the vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) of the vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultName",
					"description": "The vault name that was specified at creation time. The vault name is also included intttttttthe vaults ARN.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vaults"]
			},
			"put": {
				"summary": "Create  Vault",
				"description": "DescriptionThis operation creates a new vault with the specified name",
				"operationId": "Create Vault (PUT vault)",
				"parameters": [{
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vaults"]
			}
		},
		"/{AccountId}/vaults/{vaultName}/access-policy": {
			"delete": {
				"summary": "Delete  Vault  Access  Policy",
				"description": "DescriptionThis operation deletes the access policy associated with the specified vault",
				"operationId": "Delete Vault Access Policy (DELETEnttaccess-policy)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Access Policies"]
			},
			"get": {
				"summary": "Get  Vault  Access  Policy",
				"description": "DescriptionThis operation retrieves the access-policy subresource set on thentttvault&#8212;for more information on setting this subresource, see Set Vault Access Policy (PUT access-policy)",
				"operationId": "Get Vault Access Policy (GET access-policy)",
				"parameters": [{
					"in": "query",
					"name": "Policy",
					"description": "The vault access policy as a JSON string, which uses \ as an escape character.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Access Policies"]
			},
			"put": {
				"summary": "Set  Vault  Access  Policy",
				"description": "DescriptionThis operation configures an access policy for a vault and will overwrite an existingntttpolicy",
				"operationId": "Set Vault Access Policy (PUT access-policy)",
				"parameters": [{
					"in": "query",
					"name": "Policy",
					"description": "The vault access policy as a JSON string, which uses \ as an escape character.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Access Policies"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/archives": {
			"post": {
				"summary": "Upload  Archive",
				"description": "DescriptionThis operation adds an archive to a vault",
				"operationId": "Upload Archive (POST archive)",
				"parameters": [{
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Archives"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/archives/{ArchiveID}": {
			"delete": {
				"summary": "Delete  Archive",
				"description": "DescriptionThis operation deletes an archive from a vault",
				"operationId": "Delete Archive (DELETE archive)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Archives"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/jobs": {
			"get": {
				"summary": "List  Jobs",
				"description": "DescriptionThis operation lists jobs for a vault including jobs that are in-progress and jobs that haventttrecently finished",
				"operationId": "list Jobs (GET jobs)",
				"parameters": [{
					"in": "query",
					"name": "Action",
					"description": "For archive retrieval jobs, this value is ArchiveRetrieval. For inventorytttttttretrieval jobs, this value is InventoryRetrieval.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveId",
					"description": "The ID of the archive that was requested in an archive retrieval. Thistttttttfield only appears for archive retrieval job descriptions.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveSHA256TreeHash",
					"description": "The SHA256 tree hash of the entire archive for an archive retrieval. For inventorytttttttretrieval jobs, this field is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveSizeInBytes",
					"description": "The size of the archive for which the archive retrieval job requesttttttttwas initiated.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Completed",
					"description": "true if the job is completed; false otherwise.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CompletionDate",
					"description": "The Universal Coordinated Time (UTC) date when the job completed.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CreationDate",
					"description": "The Universal Coordinated Time (UTC) date the job started.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EndDate",
					"description": "The end of the date range in UTC for vault inventory retrieval that includes tttttttarchives created before this date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Format",
					"description": "The output format for the vault inventory list, which is set by the  tttttttInitiate Job (POST jobs) request  tttttttwhen initiating a job to retrieve a vault inventory.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "InventorySizeInBytes",
					"description": "The size of the inventory associated with an inventory retrieval job request. This fieldtttttttappears only for inventory retrieval job descriptions.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "JobDescription",
					"description": "A description of the job.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "JobId",
					"description": "The ID that represents the job in Amazon Glacier.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "JobList",
					"description": "An array of job objects. Each job object contains a set of name-value pairs describingtttttttthe job.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Limit",
					"description": "Specifies the maximum number of inventory items returned per vault inventory retrievaltttttttrequest. This limit is set when initiating the job with an Initiate Job (POST jobs) request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An opaque string that represents where to continue pagination of the results. You usetttttttthe marker value in a new List Jobs request to obtain moretttttttjobs in the list. If there are no more jobs to list, this value isttttttttnull.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker (InventoryRetrievalParameters)",
					"description": "An opaque string that represents where to continue pagination of the vault inventorytttttttretrieval results. You use the marker in a new Initiate Jobttttttt request to obtain additional inventory items. If there are notttttttmore inventory items, this value is null. For informationtttttttabout using the marker, see Range Inventory Retrieval.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RetrievalByteRange",
					"description": "The retrieved byte range for archive retrieval jobs in the formttttttttStartByteValue-EndByteValuetttttttIf no range was specified in the archive retrieval, then the wholetttttttarchive is retrieved and StartByteValue equals 0tttttttand EndByteValue equals the size of the archivetttttttminus 1. For inventory retrieval jobs this field is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SHA256TreeHash",
					"description": "The SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST jobs) request for an archivetttttttspecified a tree-hash aligned range, then this field returns a value.tttttttFor more information about tree hash aligned ranges for archive rangetttttttretrievals, see Receiving Checksums When Downloading Data.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SNSTopic",
					"description": "The Amazon Resource Name (ARN) that represents an Amazon SNS topic where notification oftttttttjob completion or failure is sent, if notification was configured in thetttttttjob initiation (Initiate Job (POST jobs)).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartDate",
					"description": "The start of the date range in UTC for vault inventory retrieval that includes archivestttttttcreated on or after this date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StatusCode",
					"description": "The job status code. The values can be Succeeded, Failed, orttttttttInProgress.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StatusMessage",
					"description": "The job status message.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tier",
					"description": "The retrieval option to use for the archive retrieval.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) of the vault of which the job is atttttttsubresource.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Jobs"]
			},
			"post": {
				"summary": "Initiate  Job",
				"description": "Initiate Job (POST jobs)This operation initiates a job of the specified type, which can be an archive retrieval or vault inventory retrieval",
				"operationId": "initiate Job (POST jobs)",
				"parameters": [{
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveId",
					"description": "The ID of the archive that you want to retrieve. This field is required only ifttttttttType is set to archive-retrieval. An error occurs if youtttttttspecify this field for an inventory retrieval job request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Description",
					"description": "The optional description for the job.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EndDate",
					"description": "The end of the date range in UTC for vault inventory retrieval that includes archivestttttttcreated before this date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Format",
					"description": "When initiating a job to retrieve a vault inventory, you can optionally add this parametertttttttto your request to specify the output format. If you are initiating an inventory job and dotttttttnot specify a Format field, JSON is the default format.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Limit",
					"description": "The maximum number of inventory items returned per vault inventory retrievaltttttttrequest.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An opaque string that represents where to continue pagination of the vault inventorytttttttretrieval results. You use the marker in a new Initiate Job request to obtaintttttttadditional inventory items. If there are no more inventory items, this value is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RetrievalByteRange",
					"description": "The byte range to retrieve for an archive retrieval. in the formttttttttStartByteValue-EndByteValue Iftttttttnot specified, the whole archive is retrieved. If specified, the byte range must be megabytettttttt(1024*1024) aligned, which means that StartByteValue must be divisibletttttttby 1 MB, and the EndByteValue plus 1 must be divisible by 1 MB or betttttttthe end of the archive specified as the archive byte size value minus 1. IfttttttttRetrievalByteRange is not megabyte aligned, this operation returnsttttttta 400 response.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SNSTopic",
					"description": "The Amazon SNS topic ARN where Amazon Glacier sends a notification when the job is completed, and thetttttttoutput is ready for you to download. The specified topic publishes the notification to itstttttttsubscribers. The SNS topic must exist. If it does not, Amazon Glacier does not create it for you.tttttttAdditionally, the SNS topic must have a policy that allows the account that created the jobtttttttto publish messages to the topic. For information about SNS topic names, see CreateTopic in the AmazonttttttttSimple Notification ServicetttttttAPI Reference.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartDate",
					"description": "The start of the date range in UTC for vault inventory retrieval that includes archivestttttttcreated on or after this date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tier",
					"description": "The retrieval option to use for the archive retrieval. Standard is thetttttttdefault value used.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Type",
					"description": "The job type. You can initiate a job to retrieve an archive or get an inventory of atttttttvault.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Jobs"]
			}
		},
		"/{AccountID}/vaults/{VaultName}/jobs/{JobID}": {
			"get": {
				"summary": "Describe  Job",
				"description": "DescriptionThis operation returns information about a job you previously initiated, including the jobntttinitiation date, the user who initiated the job, the job status code/message and thentttAmazon Simple Notification Service (Amazon SNS) topic to notify after Amazon Glacierntttcompletes the job",
				"operationId": "describe Job (GET JobID)",
				"parameters": [{
					"in": "query",
					"name": "Action",
					"description": "The job type. It is either ArchiveRetrieval orttttttttInventoryRetrieval.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveId",
					"description": "For an ArchiveRetrieval job, this is the archive ID requested for download.tttttttOtherwise, this field is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveSHA256TreeHash",
					"description": "The SHA256 tree hash of the entire archive for an archive retrieval job. For inventorytttttttretrieval jobs, this field is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveSizeInBytes",
					"description": "For an ArchiveRetrieval job, this is the size in bytes of the archive beingtttttttrequested for download. For the InventoryRetrieval job, thetttttttvalue is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Completed",
					"description": "The job status. When a job is completed you get the jobs output using the Get Job Output (GET output).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CompletionDate",
					"description": "The UTC time that the job request completed. While the job is in progress, the valuetttttttwill be null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CreationDate",
					"description": "The UTC time that the job was created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EndDate",
					"description": "The end of the date range in UTC for vault inventory retrieval that includes tttttttarchives created before this date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Format",
					"description": "The output format for the vault inventory list, which is set by the  tttttttInitiate Job (POST jobs) request  tttttttwhen initiating a job to retrieve a vault inventory.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "InventorySizeInBytes",
					"description": "For an InventoryRetrieval job, this is the size in bytes of the inventorytttttttrequested for download. For the ArchiveRetrieval job, thetttttttvalue is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "JobDescription",
					"description": "The job description you provided when you initiated the job.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "JobId",
					"description": "The ID that represents the job in Amazon Glacier.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Limit",
					"description": "Specifies the maximum number of inventory items returned per vault inventory tttttttretrieval request. This limit is set when initiating the job with the a tttttttInitiate Job (POST jobs) request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An opaque string that represents where to continue pagination of the vault inventorytttttttretrieval results. You use the marker in a new Initiate Job  request tttttttto obtain additional inventory items. If there aretttttttno more inventory items, this value is null. tttttttFor information about using the marker, see Range Inventory Retrieval.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RetrievalByteRange",
					"description": "The retrieved byte range for archive retrieval jobs in the formttttttttStartByteValue-EndByteValuetttttttIf you dont specify a range in the archive retrieval, then the wholetttttttarchive is retrieved; also StartByteValue equals 0,tttttttand EndByteValue equals the size of the archivetttttttminus 1. For inventory retrieval jobs, this field is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SHA256TreeHash",
					"description": "The SHA256 tree hash value for the requested range of an archive. If the Initiate Job (POST jobs) request for an archivetttttttspecified a tree-hash aligned range, then this field returns a value.tttttttFor more information about tree-hash alignment for archive rangetttttttretrievals, see Receiving Checksums When Downloading Data.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SNSTopic",
					"description": "An Amazon Simple Notification Service (Amazon SNS) topic that receivestttttttnotification.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartDate",
					"description": "The start of the date range in UTC for vault inventory retrieval that includes archivestttttttcreated on or after this date.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StatusCode",
					"description": "The status code can be InProgress, Succeeded, orttttttttFailed, and indicates the status of the job.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StatusMessage",
					"description": "A friendly message that describes the job status.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tier",
					"description": "The retrieval option to use for the archive retrieval.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) of the vault from which the archivetttttttretrieval was requested.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Jobs"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/jobs/{JobID}/output": {
			"get": {
				"summary": "Get  Job  Output",
				"description": "DescriptionThis operation downloads the output of the job you initiated using Initiate Job (POST jobs)",
				"operationId": "get Job Output (GET output)",
				"parameters": [{
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveDescription",
					"description": "The description of an archive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveId",
					"description": "The ID of an archive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ArchiveList",
					"description": "An array of archive metadata. Each object in the array represents metadata for onetttttttarchive contained in the vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CreationDate",
					"description": "The UTC date and time the archive was created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "InventoryDate",
					"description": "The UTC date and time of the last inventory for the vault that was completed aftertttttttchanges to the vault. Even though Amazon Glacier prepares a vaulttttttttinventory once a day, the inventory date is only updated if there havetttttttbeen archive additions or deletions to the vault since the lasttttttttinventory.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SHA256TreeHash",
					"description": "The tree hash of the archive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Size",
					"description": "The size in bytes of the archive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) resource from which the archivettttttttretrieval was requested.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Jobs"]
			}
		},
		"/{AccountId}/vaults/{vaultName}/lock-policy": {
			"delete": {
				"summary": "Abort  Vault  Lock",
				"description": "DescriptionThis operation aborts the vault locking process if the vault lock is not in thenttttLocked state",
				"operationId": "Abort Vault Lock (DELETE lock-policy)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Locks"]
			},
			"get": {
				"summary": "Get  Vault  Lock",
				"description": "DescriptionThis operation retrieves the following attributes from the lock-policyntttsubresource set on the specified vault: ntttThe vault lock policy set on the vault",
				"operationId": "Get Vault Lock (GET lock-policy)",
				"parameters": [{
					"in": "query",
					"name": "CreationDate",
					"description": "The UTC date and time at which the vault lock was put into the InProgresstttttttstate.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ExpirationDate",
					"description": "The UTC date and time at which the lock ID expires. This value can be nulltttttttif the vault lock is in a Locked state.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Policy",
					"description": "The vault lock policy as a JSON string, which uses \ as an escape character.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "State",
					"description": "The state of the vault lock.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Locks"]
			},
			"post": {
				"summary": "Initiate  Vault  Lock",
				"description": "DescriptionThis operation initiates the vault locking process by doing the following: Installing a vault lock policy on the specified vault",
				"operationId": "Initiate Vault Lock (POST lock-policy)",
				"parameters": [{
					"type": "string"
				},
				{
					"in": "query",
					"name": "Policy",
					"description": "The vault lock policy as a JSON string, which uses \ as an escapetttttttcharacter.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Locks"]
			}
		},
		"/{AccountId}/vaults/{vaultName}/lock-policy/{lockId}": {
			"post": {
				"summary": "Complete  Vault  Lock",
				"description": "DescriptionThis operation completes the vault locking process by transitioning the vault lock fromn         the InProgress state to the Locked state, which causes the vaultn         lock policy to become unchangeable",
				"operationId": "Complete Vault Lock (POST lockId)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Locks"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/multipart-uploads": {
			"get": {
				"summary": "List  Multipart  Uploads",
				"description": "DescriptionThis multipart upload operation lists in-progress multipart uploads for the specified vault",
				"operationId": "list Multipart Uploads (GET multipart-uploads)",
				"parameters": [{
					"in": "query",
					"name": "ArchiveDescription",
					"description": "The description of the archive that was specified in the Initiate Multipart Uploadtttttttrequest. This field is null if no archive description wastttttttspecified in the Initiate Multipart Upload operation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CreationDate",
					"description": "The UTC time that the multipart upload was initiated.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An opaque string that represents where to continue pagination of the results. You usetttttttthe marker in a new List Multipart Uploads request totttttttobtain more uploads in the list. If there are no more uploads, thistttttttvalue is null.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultipartUploadId",
					"description": "The ID of the multipart upload.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PartSizeInBytes",
					"description": "The part size specified in the Initiate Multipart Upload (POSTttmultipart-uploads) request. This is thetttttttsize of all the parts in the upload except the last part, which may betttttttsmaller than this size.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "UploadsList",
					"description": "A list of metadata about multipart upload objects. Each item in the list contains a settttttttof name-value pairs for the corresponding upload, includingttttttttArchiveDescription, CreationDate,ttttttttMultipartUploadId, PartSizeInBytes, andttttttttVaultARN.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) of the vault that contains the archive.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Multipart Uploads"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/multipart-uploads/{uploadID}": {
			"delete": {
				"summary": "Abort  Multipart  Upload",
				"description": "DescriptionThis multipart upload operation aborts a multipart upload identified by the uploadntttID",
				"operationId": "abort Multipart Upload (DELETE uploadID)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Multipart Uploads"]
			},
			"get": {
				"summary": "List  Parts",
				"description": "DescriptionThis multipart upload operation lists the parts of an archive that have been uploaded in antttspecific multipart upload identified by an upload ID",
				"operationId": "list Parts (GET uploadID)",
				"parameters": [{
					"in": "query",
					"name": "ArchiveDescription",
					"description": "The description of the archive that was specified in the Initiate Multipart Uploadtttttttrequest. This field is null if no archive description wastttttttspecified in the Initiate Multipart Upload operation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CreationDate",
					"description": "The UTC time that the multipart upload was initiated.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An opaque string that represents where to continue pagination of the results. You usetttttttthe marker in a new List Parts request to obtain more jobstttttttin the list. If there are no more parts, this value istttttttnull.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultipartUploadId",
					"description": "The ID of the upload to which the parts are associated.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Parts",
					"description": "A list of the part sizes of the multipart upload. Each object in the array contains attttttttRangeBytes and sha256-tree-hash name/valuetttttttpair.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PartSizeInBytes",
					"description": "The part size in bytes. This is the same value that you specified intttttttthe Initiate Multipart Upload request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RangeInBytes",
					"description": "The byte range of a part, inclusive of the upper value of the range.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SHA256TreeHash",
					"description": "The SHA256 tree hash value that Amazon Glacier calculated for the part. This field is neverttttttttnull.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VaultARN",
					"description": "The Amazon Resource Name (ARN) of the vault to which the multiparttttttttupload was initiated.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parts"]
			},
			"post": {
				"summary": "Complete  Multipart  Upload",
				"description": "DescriptionYou call this multipart upload operation to inform Amazon Glacier that all the archive parts haventttbeen uploaded and Amazon Glacier can now assemble the archive from the uploaded parts",
				"operationId": "complete Multipart Upload (POST uploadID)",
				"parameters": [{
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Multipart Uploads"]
			},
			"put": {
				"summary": "Upload  Part",
				"description": "DescriptionThis multipart upload operation uploads a part of an archive",
				"operationId": "upload Part (PUT uploadID)",
				"parameters": [{
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parts"]
			}
		},
		"/{AccountId}/vaults/{VaultName}/notification-configuration": {
			"delete": {
				"summary": "Delete  Vault  Notifications",
				"description": "DescriptionThis operation deletes the notification configuration set for a vault ntttSet Vault Notification Configuration (PUTnttnotification-configuration)",
				"operationId": "Delete Vault Notifications (DELETEnttnotification-configuration)",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Notifications"]
			},
			"get": {
				"summary": "Get  Vault  Notifications",
				"description": "DescriptionThis operation retrieves the notification-configuration subresource set on thentttvault (see Set Vault Notification Configuration (PUTnttnotification-configuration)",
				"operationId": "Get Vault Notifications (GETnttnotification-configuration)",
				"parameters": [{
					"in": "query",
					"name": "Events",
					"description": "A list of one or more events for which Amazon Glacier will send a notification to thettttttttspecified Amazon SNS topic. For information about vault events forttttttttwhich you can configure a vault to publish notifications, see Set Vault Notification Configuration (PUTttnotification-configuration).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SNSTopic",
					"description": "The Amazon Simple Notification Service (Amazon SNS) topic Amazon Resource Name (ARN).ttttttttFor more information, see Getting Started with Amazon SNS in the Amazon Simple Notification Service Getting Started Guide.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Notifications"]
			},
			"put": {
				"summary": "Set  Vault  Notification  Configuration",
				"description": "DescriptionRetrieving an archive and a vault inventory are asynchronous operations in Amazon Glacier for whichntttyou must first initiate a job and wait for the job to complete before you can downloadntttthe job output",
				"operationId": "Set Vault Notification Configuration (PUTnttnotification-configuration)",
				"parameters": [{
					"in": "query",
					"name": "Events",
					"description": "An array of one or more events for which you want Amazon Glacier to sendtttttttnotification.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SNSTopic",
					"description": "The Amazon SNS topic ARN. For more information, go to Getting Started with Amazon SNS in the Amazon Simple Notification Service Getting Started Guide.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Vault Notifications"]
			}
		},
		"Synta": {
			"syntax": {
				"summary": "List  Provisioned  Capacity",
				"description": "List Provisioned Capacity (GETn        provisioned-capacity)This operation lists the provisioned capacity for the specified AWS account",
				"operationId": "List Provisioned Capacity (GETn        provisioned-capacity)",
				"parameters": [{
					"in": "query",
					"name": "CapacityId",
					"description": "The ID that identifies the provisioned capacity unit.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DryRun",
					"description": "Checks whether you have the required permissions for the action, without actually making the request,        and provides an error response. If you have the required permissions, the error response is DryRunOperation.        Otherwise, it is UnauthorizedOperation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ExpirationDate",
					"description": "The date that the provisioned capacity unit expires, in Coordinated                            Universal Time (UTC).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filter.N",
					"description": "One or more filters.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NetworkInterfaceId.N",
					"description": "One or more network interface IDs.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartDate",
					"description": "The date that the provisioned capacity unit was purchased, in Coordinated                            Universal Time (UTC).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TagKeys",
					"description": "A list of tag keys. Each corresponding tag is removed from the vault.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags",
					"description": "The tags attached to the vault. Each tag is composed of a key and a                        value.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": [""]
			}
		}
	},
	"definitions": []
}