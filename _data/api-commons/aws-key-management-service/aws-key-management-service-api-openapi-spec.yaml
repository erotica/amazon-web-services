swagger: "2.0"
info:
  title: AWS Key Management Service API
  version: 1.0.0
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /?Action=CancelKeyDeletion&k=1:
    get:
      summary: ' Cancel Key Deletion '
      description: Cancels the deletion of a customer master key (CMK).
      operationId: cancelKeyDeletion
      parameters:
      - in: query
        name: KeyId
        description: The unique identifier for the customer master key (CMK) for which
          to cancel      deletion.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=CreateAlias&k=1:
    get:
      summary: ' Create Alias '
      description: Creates a display name for a customer master key.
      operationId: createAlias
      parameters:
      - in: query
        name: AliasName
        description: String that contains the display name. The name must start with
          the word alias      followed by a forward slash (alias/). Aliases that begin
          with alias/AWS are      reserved.
        type: string
      - in: query
        name: TargetKeyId
        description: An identifier of the key for which you are creating the alias.
          This value cannot be      another alias but can be a globally unique identifier
          or a fully specified ARN to a      key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Aliases
  /?Action=CreateGrant&k=1:
    get:
      summary: ' Create Grant '
      description: Adds a grant to a key to specify who can use the key and under
        what conditions.
      operationId: createGrant
      parameters:
      - in: query
        name: Constraints
        description: The conditions under which the operations permitted by the grant
          are allowed.
        type: string
      - in: query
        name: GranteePrincipal
        description: The principal that is given permission to perform the operations
          that the grant      permits.
        type: string
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      - in: query
        name: KeyId
        description: The unique identifier for the customer master key (CMK) that
          the grant applies      to.
        type: string
      - in: query
        name: Name
        description: A friendly name for identifying the grant. Use this value to
          prevent unintended      creation of duplicate grants when retrying this
          request.
        type: string
      - in: query
        name: Operations
        description: A list of operations that the grant permits.
        type: string
      - in: query
        name: RetiringPrincipal
        description: The principal that is given permission to retire the grant by
          using RetireGrant operation.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Grants
  /?Action=CreateKey&k=1:
    get:
      summary: ' Create Key '
      description: Creates a customer master key (CMK).
      operationId: createKey
      parameters:
      - in: query
        name: BypassPolicyLockoutSafetyCheck
        description: A flag to indicate whether to bypass the key policy lockout safety
          check.
        type: string
      - in: query
        name: Description
        description: A description of the CMK.
        type: string
      - in: query
        name: KeyUsage
        description: The intended use of the CMK.
        type: string
      - in: query
        name: Origin
        description: The source of the CMKs key material.
        type: string
      - in: query
        name: Policy
        description: The key policy to attach to the CMK.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=Decrypt&k=1:
    get:
      summary: ' Decrypt '
      description: Decrypts ciphertext.
      operationId: decrypt
      parameters:
      - in: query
        name: CiphertextBlob
        description: Ciphertext to be decrypted. The blob includes metadata.
        type: string
      - in: query
        name: EncryptionContext
        description: The encryption context. If this was specified in the Encrypt      function,
          it must be specified here or the decryption operation will fail. For more      information,
          see Encryption Context.
        type: string
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Decrypt
  /?Action=DeleteAlias&k=1:
    get:
      summary: ' Delete Alias '
      description: Deletes the specified alias.
      operationId: deleteAlias
      parameters:
      - in: query
        name: AliasName
        description: The alias to be deleted. The name must start with the word alias
          followed by a      forward slash (alias/). Aliases that begin with alias/AWS
          are reserved.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Aliases
  /?Action=DeleteImportedKeyMaterial&k=1:
    get:
      summary: ' Delete Imported Key Material '
      description: Deletes key material that you previously imported and makes the
        specified customer      master key (CMK) unusable.
      operationId: deleteImportedKeyMaterial
      parameters:
      - in: query
        name: KeyId
        description: The identifier of the CMK whose key material to delete. The CMKs
          Origin      must be EXTERNAL.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=DescribeKey&k=1:
    get:
      summary: ' Describe Key '
      description: Provides detailed information about the specified customer master
        key.
      operationId: describeKey
      parameters:
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier, a fully specified ARN to either an
          alias or a key, or an alias name prefixed by      alias/.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=DisableKey&k=1:
    get:
      summary: ' Disable Key '
      description: Sets the state of a customer master key (CMK) to disabled, thereby
        preventing its use      for cryptographic operations.
      operationId: disableKey
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the CMK.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=DisableKeyRotation&k=1:
    get:
      summary: ' Disable Key Rotation '
      description: Disables rotation of the specified key.
      operationId: disableKeyRotation
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier or the fully specified ARN to a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=EnableKey&k=1:
    get:
      summary: ' Enable Key '
      description: Marks a key as enabled, thereby permitting its use.
      operationId: enableKey
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier or the fully specified ARN to a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=EnableKeyRotation&k=1:
    get:
      summary: ' Enable Key Rotation '
      description: Enables rotation of the specified customer master key.
      operationId: enableKeyRotation
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier or the fully specified ARN to a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=Encrypt&k=1:
    get:
      summary: ' Encrypt '
      description: Encrypts plaintext into ciphertext by using a customer master key.
      operationId: encrypt
      parameters:
      - in: query
        name: EncryptionContext
        description: Name-value pair that specifies the encryption context to be used
          for authenticated      encryption. If used here, the same value must be
          supplied to the Decrypt API or      decryption will fail. For more information,
          see Encryption Context.
        type: string
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier, a fully specified ARN to either an
          alias or a key, or an alias name prefixed by      alias/.
        type: string
      - in: query
        name: Plaintext
        description: Data to be encrypted.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Encrypt
  /?Action=GenerateDataKey&k=1:
    get:
      summary: ' Generate Data Key '
      description: Returns a data encryption key that you can use in your application
        to encrypt      data locally.
      operationId: generateDataKey
      parameters:
      - in: query
        name: EncryptionContext
        description: A set of key-value pairs that represents additional authenticated
          data.
        type: string
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      - in: query
        name: KeyId
        description: The identifier of the CMK under which to generate and encrypt
          the data encryption      key.
        type: string
      - in: query
        name: KeySpec
        description: The length of the data encryption key. Use AES_128 to generate
          a 128-bit      symmetric key, or AES_256 to generate a 256-bit symmetric
          key.
        type: string
      - in: query
        name: NumberOfBytes
        description: The length of the data encryption key in bytes. For example,
          use the value 64 to      generate a 512-bit data key (64 bytes is 512 bits).
          For common key lengths (128-bit and      256-bit symmetric keys), we recommend
          that you use the KeySpec field instead of      this one.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=GenerateDataKeyWithoutPlaintext&k=1:
    get:
      summary: ' Generate Data Key Without Plaintext '
      description: Returns a data encryption key encrypted under a customer master
        key (CMK).
      operationId: generateDataKeyWithoutPlaintext
      parameters:
      - in: query
        name: EncryptionContext
        description: A set of key-value pairs that represents additional authenticated
          data.
        type: string
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      - in: query
        name: KeyId
        description: The identifier of the CMK under which to generate and encrypt
          the data encryption      key.
        type: string
      - in: query
        name: KeySpec
        description: The length of the data encryption key. Use AES_128 to generate
          a 128-bit      symmetric key, or AES_256 to generate a 256-bit symmetric
          key.
        type: string
      - in: query
        name: NumberOfBytes
        description: The length of the data encryption key in bytes. For example,
          use the value 64 to      generate a 512-bit data key (64 bytes is 512 bits).
          For common key lengths (128-bit and      256-bit symmetric keys), we recommend
          that you use the KeySpec field instead of      this one.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=GenerateRandom&k=1:
    get:
      summary: ' Generate Random '
      description: Generates an unpredictable byte string.
      operationId: generateRandom
      parameters:
      - in: query
        name: NumberOfBytes
        description: The length of the byte string.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Randoms
  /?Action=GetKeyPolicy&k=1:
    get:
      summary: ' Get Key Policy '
      description: Retrieves a policy attached to the specified key.
      operationId: getKeyPolicy
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier or the fully specified ARN to a key.
        type: string
      - in: query
        name: PolicyName
        description: String that contains the name of the policy. Currently, this
          must be default. Policy      names can be discovered by calling ListKeyPolicies.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Key Policies
  /?Action=GetKeyRotationStatus&k=1:
    get:
      summary: ' Get Key Rotation Status '
      description: Retrieves a Boolean value that indicates whether key rotation is
        enabled for the      specified key.
      operationId: getKeyRotationStatus
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier or the fully specified ARN to a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=GetParametersForImport&k=1:
    get:
      summary: ' Get Parameters For Import '
      description: Returns the items you need in order to import key material into
        AWS KMS from your      existing key management infrastructure.
      operationId: getParametersForImport
      parameters:
      - in: query
        name: KeyId
        description: The identifier of the CMK into which you will import key material.
          The CMKs        Origin must be EXTERNAL.
        type: string
      - in: query
        name: WrappingAlgorithm
        description: The algorithm you will use to encrypt the key material before
          importing it with ImportKeyMaterial. For more information, see Encrypt the
          Key Material      in the AWS Key Management Service Developer Guide.
        type: string
      - in: query
        name: WrappingKeySpec
        description: The type of wrapping key (public key) to return in the response.
          Only 2048-bit RSA      public keys are supported.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Parameters
  /?Action=ImportKeyMaterial&k=1:
    get:
      summary: ' Import Key Material '
      description: Imports key material into an AWS KMS customer master key (CMK)
        from your existing key      management infrastructure.
      operationId: importKeyMaterial
      parameters:
      - in: query
        name: EncryptedKeyMaterial
        description: The encrypted key material to import. It must be encrypted with
          the public key that you      received in the response to a previous GetParametersForImport
          request, using      the wrapping algorithm that you specified in that request.
        type: string
      - in: query
        name: ExpirationModel
        description: Specifies whether the key material expires. The default is        KEY_MATERIAL_EXPIRES,
          in which case you must include the ValidTo      parameter. When this parameter
          is set to KEY_MATERIAL_DOES_NOT_EXPIRE, you must      omit the ValidTo parameter.
        type: string
      - in: query
        name: ImportToken
        description: The import token that you received in the response to a previous
          GetParametersForImport request. It must be from the same response that contained      the
          public key that you used to encrypt the key material.
        type: string
      - in: query
        name: KeyId
        description: The identifier of the CMK to import the key material into. The
          CMKs        Origin must be EXTERNAL.
        type: string
      - in: query
        name: ValidTo
        description: The time at which the imported key material expires. When the
          key material expires,      AWS KMS deletes the key material and the CMK
          becomes unusable. You must omit this parameter when      the ExpirationModel
          parameter is set to      KEY_MATERIAL_DOES_NOT_EXPIRE. Otherwise it is required.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=ListAliases&k=1:
    get:
      summary: ' List Aliases '
      description: Lists all of the key aliases in the account.
      operationId: listAliases
      parameters:
      - in: query
        name: Limit
        description: When paginating results, specify the maximum number of items
          to return in the response.      If additional items exist beyond the number
          you specify, the Truncated element in      the response is set to true.
        type: string
      - in: query
        name: Marker
        description: Use this parameter only when paginating results and only in a
          subsequent request after      you receive a response with truncated results.
          Set it to the value of NextMarker      from the response you just received.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Aliases
  /?Action=ListGrants&k=1:
    get:
      summary: ' List Grants '
      description: List the grants for a specified key.
      operationId: listGrants
      parameters:
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key. This value can
          be a globally unique      identifier or the fully specified ARN to a key.
        type: string
      - in: query
        name: Limit
        description: When paginating results, specify the maximum number of items
          to return in the response.      If additional items exist beyond the number
          you specify, the Truncated element in      the response is set to true.
        type: string
      - in: query
        name: Marker
        description: Use this parameter only when paginating results and only in a
          subsequent request after      you receive a response with truncated results.
          Set it to the value of NextMarker      from the response you just received.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Grants
  /?Action=ListKeyPolicies&k=1:
    get:
      summary: ' List Key Policies '
      description: Retrieves a list of policies attached to a key.
      operationId: listKeyPolicies
      parameters:
      - in: query
        name: KeyId
        description: 'A unique identifier for the customer master key (CMK). You can
          use the unique key ID or      the Amazon Resource Name (ARN) of the CMK.
          Examples:'
        type: string
      - in: query
        name: Limit
        description: When paginating results, specify the maximum number of items
          to return in the response.      If additional items exist beyond the number
          you specify, the Truncated element in      the response is set to true.
        type: string
      - in: query
        name: Marker
        description: Use this parameter only when paginating results and only in a
          subsequent request after      you receive a response with truncated results.
          Set it to the value of NextMarker      from the response you just received.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Policies
  /?Action=ListKeys&k=1:
    get:
      summary: ' List Keys '
      description: Lists the customer master keys.
      operationId: listKeys
      parameters:
      - in: query
        name: Limit
        description: When paginating results, specify the maximum number of items
          to return in the response.      If additional items exist beyond the number
          you specify, the Truncated element in      the response is set to true.
        type: string
      - in: query
        name: Marker
        description: Use this parameter only when paginating results and only in a
          subsequent request after      you receive a response with truncated results.
          Set it to the value of NextMarker      from the response you just received.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=ListRetirableGrants&k=1:
    get:
      summary: ' List Retirable Grants '
      description: Returns a list of all grants for which the grants RetiringPrincipal      matches
        the one specified.
      operationId: listRetirableGrants
      parameters:
      - in: query
        name: Limit
        description: When paginating results, specify the maximum number of items
          to return in the response.      If additional items exist beyond the number
          you specify, the Truncated element in      the response is set to true.
        type: string
      - in: query
        name: Marker
        description: Use this parameter only when paginating results and only in a
          subsequent request after      you receive a response with truncated results.
          Set it to the value of NextMarker      from the response you just received.
        type: string
      - in: query
        name: RetiringPrincipal
        description: The retiring principal for which to list grants.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Grants
  /?Action=PutKeyPolicy&k=1:
    get:
      summary: ' Put Key Policy '
      description: Attaches a key policy to the specified customer master key (CMK).
      operationId: putKeyPolicy
      parameters:
      - in: query
        name: BypassPolicyLockoutSafetyCheck
        description: A flag to indicate whether to bypass the key policy lockout safety
          check.
        type: string
      - in: query
        name: KeyId
        description: A unique identifier for the CMK.
        type: string
      - in: query
        name: Policy
        description: The key policy to attach to the CMK.
        type: string
      - in: query
        name: PolicyName
        description: The name of the key policy.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=ReEncrypt&k=1:
    get:
      summary: ' Re Encrypt '
      description: Encrypts data on the server side with a new customer master key
        (CMK) without exposing      the plaintext of the data on the client side.
      operationId: reEncrypt
      parameters:
      - in: query
        name: CiphertextBlob
        description: Ciphertext of the data to reencrypt.
        type: string
      - in: query
        name: DestinationEncryptionContext
        description: Encryption context to use when the data is reencrypted.
        type: string
      - in: query
        name: DestinationKeyId
        description: A unique identifier for the CMK to use to reencrypt the data.
          This value      can be a globally unique identifier, a fully specified ARN
          to either an alias or a key, or an      alias name prefixed by alias/.
        type: string
      - in: query
        name: GrantTokens
        description: A list of grant tokens.
        type: string
      - in: query
        name: SourceEncryptionContext
        description: Encryption context used to encrypt and decrypt the data specified
          in the        CiphertextBlob parameter.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Encrypt
  /?Action=RetireGrant&k=1:
    get:
      summary: ' Retire Grant '
      description: Retires a grant.
      operationId: retireGrant
      parameters:
      - in: query
        name: GrantId
        description: Unique identifier of the grant to retire. The grant ID is returned
          in the response to      a CreateGrant operation.
        type: string
      - in: query
        name: GrantToken
        description: Token that identifies the grant to be retired.
        type: string
      - in: query
        name: KeyId
        description: 'The Amazon Resource Name of the CMK associated with the grant.
          Example:'
        type: string
      responses:
        200:
          description: OK
      tags:
      - Grants
  /?Action=RevokeGrant&k=1:
    get:
      summary: ' Revoke Grant '
      description: Revokes a grant.
      operationId: revokeGrant
      parameters:
      - in: query
        name: GrantId
        description: Identifier of the grant to be revoked.
        type: string
      - in: query
        name: KeyId
        description: A unique identifier for the customer master key associated with
          the grant. This value      can be a globally unique identifier or the fully
          specified ARN to a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Grants
  /?Action=ScheduleKeyDeletion&k=1:
    get:
      summary: ' Schedule Key Deletion '
      description: Schedules the deletion of a customer master key (CMK).
      operationId: scheduleKeyDeletion
      parameters:
      - in: query
        name: KeyId
        description: The unique identifier for the customer master key (CMK) to delete.
        type: string
      - in: query
        name: PendingWindowInDays
        description: The waiting period, specified in number of days. After the waiting
          period ends, AWS KMS      deletes the customer master key (CMK).
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
  /?Action=UpdateAlias&k=1:
    get:
      summary: ' Update Alias '
      description: Updates an alias to map it to a different key.
      operationId: updateAlias
      parameters:
      - in: query
        name: AliasName
        description: String that contains the name of the alias to be modified. The
          name must start with the      word alias followed by a forward slash (alias/).
          Aliases that begin with alias/aws are      reserved.
        type: string
      - in: query
        name: TargetKeyId
        description: Unique identifier of the customer master key to be mapped to
          the alias. This value can      be a globally unique identifier or the fully
          specified ARN of a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Aliases
  /?Action=UpdateKeyDescription&k=1:
    get:
      summary: ' Update Key Description '
      description: Updates the description of a customer master key (CMK).
      operationId: updateKeyDescription
      parameters:
      - in: query
        name: Description
        description: New description for the CMK.
        type: string
      - in: query
        name: KeyId
        description: A unique identifier for the CMK. This value can be a globally
          unique identifier or the      fully specified ARN to a key.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Keys
definitions: []