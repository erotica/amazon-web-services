
  {
	"swagger": "2.0",
	"info": {
		"title": "Amazon RDS API",
		"version": "1.0.0"
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/?Action=AddRoleToDBCluster&k=1": {
			"get": {
				"summary": "Add Role To D B Cluster",
				"description": "Associates an Identity and Access Management (IAM) role from an Aurora DB cluster.",
				"operationId": "addroletodbcluster",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The name of the DB cluster to associate the IAM role with.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RoleArn",
					"description": "The Amazon Resource Name (ARN) of the IAM role to associate with the Aurora DB cluster, for example            arn:aws:iam::123456789012:role/AuroraAccessRole.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=AddSourceIdentifierToSubscription&k=1": {
			"get": {
				"summary": "Add Source Identifier To Subscription",
				"description": "Adds a source identifier to an existing RDS event notification subscription.",
				"operationId": "addsourceidentifiertosubscription",
				"parameters": [{
					"in": "query",
					"name": "SourceIdentifier",
					"description": "The identifier of the event source to be added. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubscriptionName",
					"description": "The name of the RDS event notification subscription you want to add a source identifier to.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Subscriptions"]
			}
		},
		"/?Action=AddTagsToResource&k=1": {
			"get": {
				"summary": "Add Tags To Resource",
				"description": "Adds metadata tags to an Amazon RDS resource.",
				"operationId": "addtagstoresource",
				"parameters": [{
					"in": "query",
					"name": "ResourceName",
					"description": "The Amazon RDS resource the tags will be added to. This value is an Amazon Resource Name (ARN). For information about              creating an ARN,         see             Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "The tags to be assigned to the Amazon RDS resource.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			}
		},
		"/?Action=ApplyPendingMaintenanceAction&k=1": {
			"get": {
				"summary": "Apply Pending Maintenance Action",
				"description": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
				"operationId": "applypendingmaintenanceaction",
				"parameters": [{
					"in": "query",
					"name": "ApplyAction",
					"description": "The pending maintenance action to apply to this resource.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptInType",
					"description": "A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in            request of type immediate cannot be undone.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ResourceIdentifier",
					"description": "The RDS Amazon Resource Name (ARN) of the resource that the       pending maintenance action applies to. For information about        creating an ARN,       see         Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Maintenance Actions"]
			}
		},
		"/?Action=AuthorizeDBSecurityGroupIngress&k=1": {
			"get": {
				"summary": "Authorize D B Security Group Ingress",
				"description": "Enables ingress to a DBSecurityGroup using one of two forms of authorization.",
				"operationId": "authorizedbsecuritygroupingress",
				"parameters": [{
					"in": "query",
					"name": "CIDRIP",
					"description": "The IP range to authorize.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSecurityGroupName",
					"description": "The name of the DB security group to add authorization to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupId",
					"description": "Id of the EC2 security group to authorize.        For VPC DB security groups, EC2SecurityGroupId must be provided.        Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupName",
					"description": "Name of the EC2 security group to authorize.        For VPC DB security groups, EC2SecurityGroupId must be provided.        Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName       or EC2SecurityGroupId must be provided.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupOwnerId",
					"description": "AWS account number of the owner of the EC2 security group        specified in the EC2SecurityGroupName parameter.        The AWS Access Key ID is not an acceptable value.        For VPC DB security groups, EC2SecurityGroupId must be provided.        Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Security Groups"]
			}
		},
		"/?Action=CopyDBClusterParameterGroup&k=1": {
			"get": {
				"summary": "Copy D B Cluster Parameter Group",
				"description": "Copies the specified DB cluster parameter group.",
				"operationId": "copydbclusterparametergroup",
				"parameters": [{
					"in": "query",
					"name": "SourceDBClusterParameterGroupIdentifier",
					"description": "The identifier or Amazon Resource Name (ARN) for the source DB cluster parameter group.            For information about              creating an ARN,             see                 Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBClusterParameterGroupDescription",
					"description": "A description for the copied DB cluster parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBClusterParameterGroupIdentifier",
					"description": "The identifier for the copied DB cluster parameter group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameter Groups"]
			}
		},
		"/?Action=CopyDBClusterSnapshot&k=1": {
			"get": {
				"summary": "Copy D B Cluster Snapshot",
				"description": "Creates a snapshot of a DB cluster.",
				"operationId": "copydbclustersnapshot",
				"parameters": [{
					"in": "query",
					"name": "SourceDBClusterSnapshotIdentifier",
					"description": "The identifier of the DB cluster snapshot to copy. This parameter is not case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBClusterSnapshotIdentifier",
					"description": "The identifier of the new DB cluster snapshot to create from the source DB cluster snapshot. This parameter is not case-sensitive.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Snapshots"]
			}
		},
		"/?Action=CopyDBParameterGroup&k=1": {
			"get": {
				"summary": "Copy D B Parameter Group",
				"description": "Copies the specified DB parameter group.",
				"operationId": "copydbparametergroup",
				"parameters": [{
					"in": "query",
					"name": "SourceDBParameterGroupIdentifier",
					"description": "The identifier or ARN for the source DB parameter group.        For information about          creating an ARN,         see           Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBParameterGroupDescription",
					"description": "A description for the copied DB parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBParameterGroupIdentifier",
					"description": "The identifier for the copied DB parameter group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameter Groups"]
			}
		},
		"/?Action=CopyDBSnapshot&k=1": {
			"get": {
				"summary": "Copy D B Snapshot",
				"description": "Copies the specified DB snapshot.",
				"operationId": "copydbsnapshot",
				"parameters": [{
					"in": "query",
					"name": "CopyTags",
					"description": "True to copy all tags from the source DB snapshot to the target DB snapshot; otherwise false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "KmsKeyId",
					"description": "The AWS KMS key ID for an encrypted DB snapshot.         The KMS key ID is the Amazon Resource Name (ARN), KMS key identifier, or the KMS key alias for the KMS encryption key.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreSignedUrl",
					"description": "The URL that contains a Signature Version 4 signed request for the CopyDBSnapshot API action in the AWS region that contains the             source DB snapshot to copy. The PreSignedUrl parameter must be used when copying an encrypted DB snapshot from another AWS region.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceDBSnapshotIdentifier",
					"description": "The identifier for the source DB snapshot.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBSnapshotIdentifier",
					"description": "The identifier for the copied snapshot.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=CopyOptionGroup&k=1": {
			"get": {
				"summary": "Copy Option Group",
				"description": "Copies the specified option group.",
				"operationId": "copyoptiongroup",
				"parameters": [{
					"in": "query",
					"name": "SourceOptionGroupIdentifier",
					"description": "The identifier or ARN for the source option group. For information about        creating an ARN,       see         Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetOptionGroupDescription",
					"description": "The description for the copied option group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetOptionGroupIdentifier",
					"description": "The identifier for the copied option group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Option Groups"]
			}
		},
		"/?Action=CreateDBCluster&k=1": {
			"get": {
				"summary": "Create D B Cluster",
				"description": "Creates a new Amazon Aurora DB cluster.",
				"operationId": "createdbcluster",
				"parameters": [{
					"in": "query",
					"name": "AvailabilityZones.AvailabilityZone.N",
					"description": "A list of EC2 Availability Zones that instances in the DB cluster can be created in. For information on            regions and Availability Zones, see             Regions                and Availability Zones.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "BackupRetentionPeriod",
					"description": "The number of days for which automated backups are retained. You must specify a minimum value of 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CharacterSetName",
					"description": "A value that indicates that the DB cluster should be associated with the specified CharacterSet.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DatabaseName",
					"description": "The name for your database of up to 8 alpha-numeric characters. If you do not provide a name, Amazon RDS will not create a database in the DB cluster you are creating.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The DB cluster identifier. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group to associate            with this DB cluster. If this argument is omitted, default.aurora5.6 will be used.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "A DB subnet group to associate with this DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The name of the database engine to be used for this DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version number of the database engine to use.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "KmsKeyId",
					"description": "The KMS key identifier for an encrypted DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUsername",
					"description": "The name of the master user for the DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUserPassword",
					"description": "The password for the master database user. This password can contain any printable ASCII character except /, , or @.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "A value that indicates that the DB cluster should be associated with the specified option group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the instances in the DB cluster accept connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredBackupWindow",
					"description": "The daily time range during which automated backups are created        if automated backups are enabled        using the BackupRetentionPeriod parameter.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReplicationSourceIdentifier",
					"description": "The Amazon Resource Name (ARN) of the source DB cluster if this DB cluster is created as a Read Replica.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageEncrypted",
					"description": "Specifies whether the DB cluster is encrypted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A list of EC2 VPC security groups to associate with this DB cluster.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=CreateDBClusterParameterGroup&k=1": {
			"get": {
				"summary": "Create D B Cluster Parameter Group",
				"description": "Creates a new DB cluster parameter group.",
				"operationId": "createdbclusterparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBParameterGroupFamily",
					"description": "The DB cluster parameter group family name. A DB cluster parameter group can be associated with one and only one DB cluster parameter group family, and can be applied only to a DB cluster running a database engine and engine version compatible with that DB cluster parameter group family.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Description",
					"description": "The description for the DB cluster parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameter Groups"]
			}
		},
		"/?Action=CreateDBClusterSnapshot&k=1": {
			"get": {
				"summary": "Create D B Cluster Snapshot",
				"description": "Creates a snapshot of a DB cluster.",
				"operationId": "createdbclustersnapshot",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The identifier of the DB cluster to create a snapshot for. This parameter is not case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterSnapshotIdentifier",
					"description": "The identifier of the DB cluster snapshot. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "The tags to be assigned to the DB cluster snapshot.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Snapshots"]
			}
		},
		"/?Action=CreateDBInstance&k=1": {
			"get": {
				"summary": "Create D B Instance",
				"description": "Creates a new DB instance.",
				"operationId": "createdbinstance",
				"parameters": [{
					"in": "query",
					"name": "AllocatedStorage",
					"description": "The amount of storage (in gigabytes) to be initially allocated for the database instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AvailabilityZone",
					"description": "The EC2 Availability Zone that the database instance will be created in. For information on        regions and Availability Zones, see         Regions        and Availability Zones.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "BackupRetentionPeriod",
					"description": "The number of days for which automated backups are retained. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CharacterSetName",
					"description": "For supported engines, indicates that the DB instance should be associated with the specified CharacterSet.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CopyTagsToSnapshot",
					"description": "True to copy all tags from the DB instance to snapshots of the DB instance; otherwise false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The identifier of the DB cluster that the instance will belong to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The compute and memory capacity of the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBName",
					"description": "The meaning of this parameter differs according to the database engine you use.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of the DB parameter group to associate with this DB instance. If this argument is omitted, the default DBParameterGroup for the specified engine will be used.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSecurityGroups.DBSecurityGroupName.N",
					"description": "A list of DB security groups to associate with this DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "A DB subnet group to associate with this DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Domain",
					"description": "Specify the Active Directory Domain to create the instance in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DomainIAMRoleName",
					"description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The name of the database engine to be used for this instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version number of the database engine to use.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Iops",
					"description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "KmsKeyId",
					"description": "The KMS key identifier for an encrypted DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LicenseModel",
					"description": "License model information for this DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUsername",
					"description": "The name of master user for the client DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUserPassword",
					"description": "The password for the master database user. Can be any printable ASCII character except /, , or @.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MonitoringInterval",
					"description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MonitoringRoleArn",
					"description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. For      example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role,      go to To         create an IAM role for Amazon RDS Enhanced Monitoring.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultiAZ",
					"description": "Specifies if the DB instance is a Multi-AZ deployment. You cannot set the AvailabilityZone parameter if the MultiAZ parameter is set to true.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "Indicates that the DB instance should be associated with the specified option group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the database accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredBackupWindow",
					"description": "The daily time range during which automated backups are created        if automated backups are enabled,        using the BackupRetentionPeriod parameter. For more information, see            DB                Instance Backups.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC). For more information, see            DB        Instance Maintenance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PromotionTier",
					"description": "A value that specifies the order in which an Aurora Replica is promoted to the primary instance       after a failure of the existing primary instance. For more information,       see         Fault Tolerance for an Aurora DB Cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PubliclyAccessible",
					"description": "Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageEncrypted",
					"description": "Specifies whether the DB instance is encrypted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageType",
					"description": "Specifies the storage type to be associated with the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialArn",
					"description": "The ARN from the Key Store with which to associate the instance for TDE encryption.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialPassword",
					"description": "The password for the given ARN from the Key Store in order to access the device.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Timezone",
					"description": "The time zone of the DB instance.             The time zone parameter is currently supported only by            Microsoft SQL Server.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A list of EC2 VPC security groups to associate with this DB instance.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=CreateDBInstanceReadReplica&k=1": {
			"get": {
				"summary": "Create D B Instance Read Replica",
				"description": "Creates a DB instance for a DB instance running MySQL, MariaDB, or PostgreSQL that acts as a Read Replica of a source DB instance.",
				"operationId": "createdbinstancereadreplica",
				"parameters": [{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "Indicates that minor engine upgrades will be applied automatically to the Read Replica during the maintenance window.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AvailabilityZone",
					"description": "The Amazon EC2 Availability Zone that the Read Replica will be created in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CopyTagsToSnapshot",
					"description": "True to copy all tags from the Read Replica to snapshots of the Read Replica; otherwise false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The compute and memory capacity of the Read Replica.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier of the Read Replica. This identifier is the unique key that identifies a DB instance. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "Specifies a DB subnet group for the DB instance. The new DB instance will be created in the VPC associated with the DB subnet group. If no DB subnet group is specified, then the new DB instance is not created in a VPC.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Iops",
					"description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MonitoringInterval",
					"description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the Read Replica. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MonitoringRoleArn",
					"description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. For      example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role,      go to To         create an IAM role for Amazon RDS Enhanced Monitoring.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The option group the DB instance will be associated with. If omitted, the default option group for the engine specified will be used.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number that the DB instance uses for connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PubliclyAccessible",
					"description": "Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceDBInstanceIdentifier",
					"description": "The identifier of the DB instance that will act as the source for the Read Replica. Each DB instance can have up to five Read Replicas.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageType",
					"description": "Specifies the storage type to be associated with the Read Replica.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=CreateDBParameterGroup&k=1": {
			"get": {
				"summary": "Create D B Parameter Group",
				"description": "Creates a new DB parameter group.",
				"operationId": "createdbparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupFamily",
					"description": "The DB parameter group family name. A DB parameter group can be associated with one and only one DB parameter group family, and can be applied only to a DB instance running a database engine and engine version compatible with that DB parameter group family.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of the DB parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Description",
					"description": "The description for the DB parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameter Groups"]
			}
		},
		"/?Action=CreateDBSecurityGroup&k=1": {
			"get": {
				"summary": "Create D B Security Group",
				"description": "Creates a new DB security group.",
				"operationId": "createdbsecuritygroup",
				"parameters": [{
					"in": "query",
					"name": "DBSecurityGroupDescription",
					"description": "The description for the DB security group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSecurityGroupName",
					"description": "The name for the DB security group. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Security Groups"]
			}
		},
		"/?Action=CreateDBSnapshot&k=1": {
			"get": {
				"summary": "Create D B Snapshot",
				"description": "Creates a DBSnapshot.",
				"operationId": "createdbsnapshot",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier. This is the unique key that identifies a DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSnapshotIdentifier",
					"description": "The identifier for the DB snapshot.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=CreateDBSubnetGroup&k=1": {
			"get": {
				"summary": "Create D B Subnet Group",
				"description": "Creates a new DB subnet group.",
				"operationId": "createdbsubnetgroup",
				"parameters": [{
					"in": "query",
					"name": "DBSubnetGroupDescription",
					"description": "The description for the DB subnet group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The name for the DB subnet group. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubnetIds.SubnetIdentifier.N",
					"description": "The EC2 Subnet IDs for the DB subnet group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Subnet Groups"]
			}
		},
		"/?Action=CreateEventSubscription&k=1": {
			"get": {
				"summary": "Create Event Subscription",
				"description": "Creates an RDS event notification subscription.",
				"operationId": "createeventsubscription",
				"parameters": [{
					"in": "query",
					"name": "Enabled",
					"description": "A Boolean value; set to true to activate the subscription, set to false to create the subscription but not active it.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EventCategories.EventCategory.N",
					"description": "A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories             for a given SourceType             in the Events topic             in the Amazon RDS User Guide              or by using the DescribeEventCategories action.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnsTopicArn",
					"description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceIds.SourceId.N",
					"description": "The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceType",
					"description": "The type of source that will be generating the events. For example, if you want to be notified of           events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubscriptionName",
					"description": "The name of the subscription.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Event Subscriptions"]
			}
		},
		"/?Action=CreateOptionGroup&k=1": {
			"get": {
				"summary": "Create Option Group",
				"description": "Creates a new option group.",
				"operationId": "createoptiongroup",
				"parameters": [{
					"in": "query",
					"name": "EngineName",
					"description": "Specifies the name of the engine that this option group should be associated with.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MajorEngineVersion",
					"description": "Specifies the major version of the engine that this option group should be associated with.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupDescription",
					"description": "The description of the option group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "Specifies the name of the option group to be created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Option Groups"]
			}
		},
		"/?Action=DeleteDBCluster&k=1": {
			"get": {
				"summary": "Delete D B Cluster",
				"description": "The DeleteDBCluster action deletes a previously provisioned DB cluster.",
				"operationId": "deletedbcluster",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The DB cluster identifier for the DB cluster to be deleted. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "FinalDBSnapshotIdentifier",
					"description": "The DB cluster snapshot identifier of the new DB cluster snapshot created when SkipFinalSnapshot      is set to false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SkipFinalSnapshot",
					"description": "Determines whether a final DB cluster snapshot is created before the DB cluster is deleted.       If true is specified, no DB cluster snapshot is created. If false is specified, a DB cluster snapshot       is created before the DB cluster is deleted.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=DeleteDBClusterParameterGroup&k=1": {
			"get": {
				"summary": "Delete D B Cluster Parameter Group",
				"description": "Deletes a specified DB cluster parameter group.",
				"operationId": "deletedbclusterparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameter Groups"]
			}
		},
		"/?Action=DeleteDBClusterSnapshot&k=1": {
			"get": {
				"summary": "Delete D B Cluster Snapshot",
				"description": "Deletes a DB cluster snapshot.",
				"operationId": "deletedbclustersnapshot",
				"parameters": [{
					"in": "query",
					"name": "DBClusterSnapshotIdentifier",
					"description": "The identifier of the DB cluster snapshot to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Snapshots"]
			}
		},
		"/?Action=DeleteDBInstance&k=1": {
			"get": {
				"summary": "Delete D B Instance",
				"description": "The DeleteDBInstance action deletes a previously provisioned DB instance.",
				"operationId": "deletedbinstance",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier for the DB instance to be deleted. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "FinalDBSnapshotIdentifier",
					"description": "The DBSnapshotIdentifier of the new DBSnapshot created when SkipFinalSnapshot        is set to false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SkipFinalSnapshot",
					"description": "Determines whether a final DB snapshot is created before the DB instance is deleted.             If true is specified, no DBSnapshot is created. If false       is specified, a DB snapshot             is created before the DB instance is deleted.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=DeleteDBParameterGroup&k=1": {
			"get": {
				"summary": "Delete D B Parameter Group",
				"description": "Deletes a specified DBParameterGroup.",
				"operationId": "deletedbparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of the DB parameter group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameter Groups"]
			}
		},
		"/?Action=DeleteDBSecurityGroup&k=1": {
			"get": {
				"summary": "Delete D B Security Group",
				"description": "Deletes a DB security group.",
				"operationId": "deletedbsecuritygroup",
				"parameters": [{
					"in": "query",
					"name": "DBSecurityGroupName",
					"description": "The name of the DB security group to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Security Groups"]
			}
		},
		"/?Action=DeleteDBSnapshot&k=1": {
			"get": {
				"summary": "Delete D B Snapshot",
				"description": "Deletes a DBSnapshot.",
				"operationId": "deletedbsnapshot",
				"parameters": [{
					"in": "query",
					"name": "DBSnapshotIdentifier",
					"description": "The DBSnapshot identifier.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=DeleteDBSubnetGroup&k=1": {
			"get": {
				"summary": "Delete D B Subnet Group",
				"description": "Deletes a DB subnet group.",
				"operationId": "deletedbsubnetgroup",
				"parameters": [{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The name of the database subnet group to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Subnet Groups"]
			}
		},
		"/?Action=DeleteEventSubscription&k=1": {
			"get": {
				"summary": "Delete Event Subscription",
				"description": "Deletes an RDS event notification subscription.",
				"operationId": "deleteeventsubscription",
				"parameters": [{
					"in": "query",
					"name": "SubscriptionName",
					"description": "The name of the RDS event notification subscription you want to delete.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Event Subscriptions"]
			}
		},
		"/?Action=DeleteOptionGroup&k=1": {
			"get": {
				"summary": "Delete Option Group",
				"description": "Deletes an existing option group.",
				"operationId": "deleteoptiongroup",
				"parameters": [{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group to be deleted.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Option Groups"]
			}
		},
		"/?Action=DescribeAccountAttributes&k=1": {
			"get": {
				"summary": "Describe Account Attributes",
				"description": "Lists all of the attributes for a customer account.",
				"operationId": "describeaccountattributes",
				"parameters": [{
					"in": "query",
					"name": "AccountQuotas.AccountQuota.N",
					"description": "A list of AccountQuota objects. Within this list, each quota has a name,             a count of usage toward the quota maximum, and a maximum value for the quota.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Accounts"]
			}
		},
		"/?Action=DescribeCertificates&k=1": {
			"get": {
				"summary": "Describe Certificates",
				"description": "Lists the set of CA certificates provided by Amazon RDS for this AWS account.",
				"operationId": "describecertificates",
				"parameters": [{
					"in": "query",
					"name": "CertificateIdentifier",
					"description": "The user-supplied certificate identifier. If this parameter is specified, information for only the identified certificate is returned. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeCertificates request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Certificates"]
			}
		},
		"/?Action=DescribeDBClusterParameterGroups&k=1": {
			"get": {
				"summary": "Describe D B Cluster Parameter Groups",
				"description": "Returns a list of DBClusterParameterGroup descriptions.",
				"operationId": "describedbclusterparametergroups",
				"parameters": [{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of a specific DB cluster parameter group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeDBClusterParameterGroups request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameter Groups"]
			}
		},
		"/?Action=DescribeDBClusterParameters&k=1": {
			"get": {
				"summary": "Describe D B Cluster Parameters",
				"description": "Returns the detailed parameter list for a particular DB cluster parameter group.",
				"operationId": "describedbclusterparameters",
				"parameters": [{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of a specific DB cluster parameter group to return parameter details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous      DescribeDBClusterParameters request.      If this parameter is specified, the response includes      only records beyond the marker,      up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.      If more records exist than the specified MaxRecords value,      a pagination token called a marker is included in the response so that the remaining      results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Source",
					"description": "A value that indicates to return only parameters for a specific source.       Parameter sources can be engine, service,      or customer.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameters"]
			}
		},
		"/?Action=DescribeDBClusters&k=1": {
			"get": {
				"summary": "Describe D B Clusters",
				"description": "Returns information about provisioned Aurora DB clusters.",
				"operationId": "describedbclusters",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The user-supplied DB cluster identifier. If this parameter is specified, information from only the specific DB cluster is returned. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "A filter that specifies one or more DB clusters to describe.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous            DescribeDBClusters request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=DescribeDBClusterSnapshotAttributes&k=1": {
			"get": {
				"summary": "Describe D B Cluster Snapshot Attributes",
				"description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB cluster snapshot.",
				"operationId": "describedbclustersnapshotattributes",
				"parameters": [{
					"in": "query",
					"name": "DBClusterSnapshotIdentifier",
					"description": "The identifier for the DB cluster snapshot to describe the attributes for.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Snapshots"]
			}
		},
		"/?Action=DescribeDBClusterSnapshots&k=1": {
			"get": {
				"summary": "Describe D B Cluster Snapshots",
				"description": "Returns information about DB cluster snapshots.",
				"operationId": "describedbclustersnapshots",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The ID of the DB cluster to retrieve the list of DB cluster snapshots for.             This parameter cannot be used in conjunction with the            DBClusterSnapshotIdentifier parameter.            This parameter is not case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterSnapshotIdentifier",
					"description": "A specific DB cluster snapshot identifier to describe.             This parameter cannot be used in conjunction with the            DBClusterIdentifier parameter.                        This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "IncludePublic",
					"description": "Set this value to true to include manual DB cluster snapshots that are public and can be copied             or restored by any AWS account, otherwise set this value to false. The default is false.             The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "IncludeShared",
					"description": "Set this value to true to include shared manual DB cluster snapshots             from other AWS accounts that this AWS account has been given             permission to copy or restore, otherwise set this value to false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous            DescribeDBClusterSnapshots request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotType",
					"description": "The type of DB cluster snapshots to be returned. You can specify one of the following values:",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Snapshots"]
			}
		},
		"/?Action=DescribeDBEngineVersions&k=1": {
			"get": {
				"summary": "Describe D B Engine Versions",
				"description": "Returns a list of the available DB engines.",
				"operationId": "describedbengineversions",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupFamily",
					"description": "The name of a specific DB parameter group family to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DefaultOnly",
					"description": "Indicates that only the default version of the specified engine or engine and major version combination is returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The database engine to return.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The database engine version to return.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "Not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ListSupportedCharacterSets",
					"description": "If this parameter is specified           and the requested engine supports the CharacterSetName parameter for CreateDBInstance,           the response includes a list of supported character sets for each engine version.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ListSupportedTimezones",
					"description": "If this parameter is specified             and the requested engine supports the TimeZone parameter for CreateDBInstance,             the response includes a list of supported time zones for each engine version.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.    If more than the MaxRecords value is available, a pagination token called a marker is    included in the response so that the following results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Engines"]
			}
		},
		"/?Action=DescribeDBInstances&k=1": {
			"get": {
				"summary": "Describe D B Instances",
				"description": "Returns information about provisioned RDS instances.",
				"operationId": "describedbinstances",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The user-supplied instance identifier. If this parameter is specified, information from only the specific DB instance is returned. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "A filter that specifies one or more DB instances to describe.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeDBInstances request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=DescribeDBLogFiles&k=1": {
			"get": {
				"summary": "Describe D B Log Files",
				"description": "Returns a list of DB log files for the DB instance.",
				"operationId": "describedblogfiles",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The customer-assigned name of the DB instance that contains the log files you want to list.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "FileLastWritten",
					"description": "Filters the available log files for files written since the specified date, in POSIX timestamp format with milliseconds.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "FilenameContains",
					"description": "Filters the available log files for log file names that contain the specified string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "FileSize",
					"description": "Filters the available log files for files larger than the specified size.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "The pagination token provided in the previous request. If this parameter is specified the response includes only records beyond the marker, up to MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a pagination token called a marker is included in the response so that the remaining results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Blog Files"]
			}
		},
		"/?Action=DescribeDBParameterGroups&k=1": {
			"get": {
				"summary": "Describe D B Parameter Groups",
				"description": "Returns a list of DBParameterGroup descriptions.",
				"operationId": "describedbparametergroups",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of a specific DB parameter group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeDBParameterGroups request.            If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameter Groups"]
			}
		},
		"/?Action=DescribeDBParameters&k=1": {
			"get": {
				"summary": "Describe D B Parameters",
				"description": "Returns the detailed parameter list for a particular DB parameter group.",
				"operationId": "describedbparameters",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of a specific DB parameter group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeDBParameters request.            If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Source",
					"description": "The parameter types to return.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameters"]
			}
		},
		"/?Action=DescribeDBSecurityGroups&k=1": {
			"get": {
				"summary": "Describe D B Security Groups",
				"description": "Returns a list of DBSecurityGroup descriptions.",
				"operationId": "describedbsecuritygroups",
				"parameters": [{
					"in": "query",
					"name": "DBSecurityGroupName",
					"description": "The name of the DB security group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeDBSecurityGroups request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Security Groups"]
			}
		},
		"/?Action=DescribeDBSnapshotAttributes&k=1": {
			"get": {
				"summary": "Describe D B Snapshot Attributes",
				"description": "Returns a list of DB snapshot attribute names and values for a manual DB snapshot.",
				"operationId": "describedbsnapshotattributes",
				"parameters": [{
					"in": "query",
					"name": "DBSnapshotIdentifier",
					"description": "The identifier for the DB snapshot to describe the attributes for.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=DescribeDBSnapshots&k=1": {
			"get": {
				"summary": "Describe D B Snapshots",
				"description": "Returns information about DB snapshots.",
				"operationId": "describedbsnapshots",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The ID of the DB instance to retrieve the list of DB snapshots for.         This parameter cannot be used in conjunction with DBSnapshotIdentifier.        This parameter is not case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSnapshotIdentifier",
					"description": "A specific DB snapshot identifier to describe. This parameter cannot be used in conjunction with DBInstanceIdentifier.                        This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "IncludePublic",
					"description": "Set this value to true to include manual DB snapshots that are public and can be copied or restored           by any AWS account, otherwise set this value to false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "IncludeShared",
					"description": "Set this value to true to include shared manual DB snapshots from other           AWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to false.           The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeDBSnapshots request.            If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotType",
					"description": "The type of snapshots to be returned. You can specify one of the following values:",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=DescribeDBSubnetGroups&k=1": {
			"get": {
				"summary": "Describe D B Subnet Groups",
				"description": "Returns a list of DBSubnetGroup descriptions.",
				"operationId": "describedbsubnetgroups",
				"parameters": [{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The name of the DB subnet group to return details for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous DescribeDBSubnetGroups request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Subnet Groups"]
			}
		},
		"/?Action=DescribeEngineDefaultClusterParameters&k=1": {
			"get": {
				"summary": "Describe Engine Default Cluster Parameters",
				"description": "Returns the default engine and system parameter information for the cluster database engine.",
				"operationId": "describeenginedefaultclusterparameters",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupFamily",
					"description": "The name of the DB cluster parameter group family to return engine parameter information for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous      DescribeEngineDefaultClusterParameters request.      If this parameter is specified, the response includes      only records beyond the marker,      up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.      If more records exist than the specified MaxRecords value,      a pagination token called a marker is included in the response so that the remaining      results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Default Cluster Parameters"]
			}
		},
		"/?Action=DescribeEngineDefaultParameters&k=1": {
			"get": {
				"summary": "Describe Engine Default Parameters",
				"description": "Returns the default engine and system parameter information for the specified database engine.",
				"operationId": "describeenginedefaultparameters",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupFamily",
					"description": "The name of the DB parameter group family.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "Not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeEngineDefaultParameters request.            If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,        a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Default Parameters"]
			}
		},
		"/?Action=DescribeEventCategories&k=1": {
			"get": {
				"summary": "Describe Event Categories",
				"description": "Displays a list of categories for all event source types, or, if specified, for a specified source type.",
				"operationId": "describeeventcategories",
				"parameters": [{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceType",
					"description": "The type of source that will be generating the events.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Event Categories"]
			}
		},
		"/?Action=DescribeEvents&k=1": {
			"get": {
				"summary": "Describe Events",
				"description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days.",
				"operationId": "describeevents",
				"parameters": [{
					"in": "query",
					"name": "Duration",
					"description": "The number of minutes to retrieve events for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EndTime",
					"description": "The end of the time interval for which to retrieve events,        specified in ISO 8601 format. For more information about ISO 8601,         go to the ISO8601 Wikipedia page.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EventCategories.EventCategory.N",
					"description": "A list of event categories that trigger notifications for a event notification subscription.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous        DescribeEvents request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.        If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining        results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceIdentifier",
					"description": "The identifier of the event source for which events will be returned. If not specified, then all sources are included in the response.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceType",
					"description": "The event source to retrieve events for. If no value is specified, all events are returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartTime",
					"description": "The beginning of the time interval to retrieve events for,        specified in ISO 8601 format. For more information about ISO 8601,         go to the ISO8601 Wikipedia page.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Events"]
			}
		},
		"/?Action=DescribeEventSubscriptions&k=1": {
			"get": {
				"summary": "Describe Event Subscriptions",
				"description": "Lists all the subscription descriptions for a customer account.",
				"operationId": "describeeventsubscriptions",
				"parameters": [{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous            DescribeOrderableDBInstanceOptions request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords .",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubscriptionName",
					"description": "The name of the RDS event notification subscription you want to describe.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Event Subscriptions"]
			}
		},
		"/?Action=DescribeOptionGroupOptions&k=1": {
			"get": {
				"summary": "Describe Option Group Options",
				"description": "Describes all available options.",
				"operationId": "describeoptiongroupoptions",
				"parameters": [{
					"in": "query",
					"name": "EngineName",
					"description": "A required parameter. Options available for the given engine name will be described.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MajorEngineVersion",
					"description": "If specified, filters the results to include only options for the specified major engine version.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Option Groups"]
			}
		},
		"/?Action=DescribeOptionGroups&k=1": {
			"get": {
				"summary": "Describe Option Groups",
				"description": "Describes the available option groups.",
				"operationId": "describeoptiongroups",
				"parameters": [{
					"in": "query",
					"name": "EngineName",
					"description": "Filters the list of option groups to only include groups associated with a specific database engine.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MajorEngineVersion",
					"description": "Filters the list of option groups to only include groups associated with a specific database engine version. If specified, then EngineName must also be specified.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous DescribeOptionGroups request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group to describe. Cannot be supplied together with EngineName or MajorEngineVersion.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Option Groups"]
			}
		},
		"/?Action=DescribeOrderableDBInstanceOptions&k=1": {
			"get": {
				"summary": "Describe Orderable D B Instance Options",
				"description": "Returns a list of orderable DB instance options for the specified engine.",
				"operationId": "describeorderabledbinstanceoptions",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The name of the engine to retrieve DB instance options for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The engine version filter value. Specify this parameter to show only the available offerings matching the specified engine version.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LicenseModel",
					"description": "The license model filter value. Specify this parameter to show only the available offerings matching the specified license model.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous            DescribeOrderableDBInstanceOptions request.            If this parameter is specified, the response includes            only records beyond the marker,            up to the value specified by MaxRecords .",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Vpc",
					"description": "The VPC filter value. Specify this parameter to show only the available VPC or non-VPC offerings.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=DescribePendingMaintenanceActions&k=1": {
			"get": {
				"summary": "Describe Pending Maintenance Actions",
				"description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
				"operationId": "describependingmaintenanceactions",
				"parameters": [{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "A filter that specifies one or more resources to return pending maintenance actions for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous            DescribePendingMaintenanceActions request.            If this parameter is specified, the response includes            only records beyond the marker,            up to a number of records specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.            If more records exist than the specified MaxRecords value,            a pagination token called a marker is included in the response so that the remaining            results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ResourceIdentifier",
					"description": "The ARN of a resource to return pending maintenance actions for.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Maintenance Actions"]
			}
		},
		"/?Action=DescribeReservedDBInstances&k=1": {
			"get": {
				"summary": "Describe Reserved D B Instances",
				"description": "Returns information about reserved DB instances for this account, or about a specified reserved DB instance.",
				"operationId": "describereserveddbinstances",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The DB instance class filter value. Specify this parameter to show only those reservations matching the specified DB instances class.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Duration",
					"description": "The duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.    If more than the MaxRecords value is available, a pagination token called a marker is    included in the response so that the following results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultiAZ",
					"description": "The Multi-AZ filter value. Specify this parameter to show only those reservations matching the specified Multi-AZ parameter.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OfferingType",
					"description": "The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ProductDescription",
					"description": "The product description filter value. Specify this parameter to show only those reservations matching the specified product description.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedDBInstanceId",
					"description": "The reserved DB instance identifier filter value. Specify this parameter to show only the reservation that matches the specified reservation ID.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedDBInstancesOfferingId",
					"description": "The offering identifier filter value. Specify this parameter to show only purchased reservations matching the specified offering identifier.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=DescribeReservedDBInstancesOfferings&k=1": {
			"get": {
				"summary": "Describe Reserved D B Instances Offerings",
				"description": "Lists available reserved DB instance offerings.",
				"operationId": "describereserveddbinstancesofferings",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The DB instance class filter value. Specify this parameter to show only the available offerings matching the specified DB instance class.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Duration",
					"description": "Duration filter value, specified in years or seconds. Specify this parameter to show only reservations for this duration.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous request.        If this parameter is specified, the response includes        only records beyond the marker,        up to the value specified by MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response.    If more than the MaxRecords value is available, a pagination token called a marker is    included in the response so that the following results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultiAZ",
					"description": "The Multi-AZ filter value. Specify this parameter to show only the available offerings matching the specified Multi-AZ parameter.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OfferingType",
					"description": "The offering type filter value. Specify this parameter to show only the available offerings matching the specified offering type.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ProductDescription",
					"description": "Product description filter value. Specify this parameter to show only the available offerings matching the specified product description.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedDBInstancesOfferingId",
					"description": "The offering identifier filter value. Specify this parameter to show only the available offering that matches the specified reservation identifier.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=DescribeSourceRegions&k=1": {
			"get": {
				"summary": "Describe Source Regions",
				"description": "Returns a list of the source AWS regions where the current AWS region can create a Read Replica             or copy a DB snapshot from.",
				"operationId": "describesourceregions",
				"parameters": [{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "An optional pagination token provided by a previous DescribeSourceRegions request. If this parameter is specified, the response            includes only records beyond the marker, up to the value specified by            MaxRecords.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MaxRecords",
					"description": "The maximum number of records to include in the response. If more records exist            than the specified MaxRecords value, a pagination token called a marker is            included in the response so that the remaining results can be retrieved.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RegionName",
					"description": "The source region name. For example, us-east-1.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Source Regions"]
			}
		},
		"/?Action=DownloadDBLogFilePortion&k=1": {
			"get": {
				"summary": "Download D B Log File Portion",
				"description": "Downloads all or a portion of the specified log file, up to 1 MB in size.",
				"operationId": "downloaddblogfileportion",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The customer-assigned name of the DB instance that contains the log files you want to list.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LogFileName",
					"description": "The name of the log file to be downloaded.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Marker",
					"description": "The pagination token provided in the previous request or 0. If the Marker parameter is specified the response includes only records beyond the marker until the end of the file or up to NumberOfLines.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NumberOfLines",
					"description": "The number of lines to download. If the number of lines specified results in a file over 1 MB in size, the file will be truncated at 1 MB in size.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Log Files"]
			}
		},
		"/?Action=FailoverDBCluster&k=1": {
			"get": {
				"summary": "Failover D B Cluster",
				"description": "Forces a failover for a DB cluster.",
				"operationId": "failoverdbcluster",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "A DB cluster identifier to force a failover for. This parameter is not case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBInstanceIdentifier",
					"description": "The name of the instance to promote to the primary instance.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=ListTagsForResource&k=1": {
			"get": {
				"summary": "List Tags For Resource",
				"description": "Lists all tags on an Amazon RDS resource.",
				"operationId": "listtagsforresource",
				"parameters": [{
					"in": "query",
					"name": "Filters.Filter.N",
					"description": "This parameter is not currently supported.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ResourceName",
					"description": "The Amazon RDS resource with tags to be listed. This value is an Amazon Resource Name (ARN). For information about             creating an ARN,             see                 Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			}
		},
		"/?Action=ModifyDBCluster&k=1": {
			"get": {
				"summary": "Modify D B Cluster",
				"description": "Modify a setting for an Amazon Aurora DB cluster.",
				"operationId": "modifydbcluster",
				"parameters": [{
					"in": "query",
					"name": "ApplyImmediately",
					"description": "A value that specifies whether the modifications in this request and      any pending modifications are asynchronously applied      as soon as possible, regardless of the      PreferredMaintenanceWindow setting for the DB cluster.       If this parameter is set to false, changes to the      DB cluster are applied during the next maintenance window.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "BackupRetentionPeriod",
					"description": "The number of days for which automated backups are retained. You must specify a minimum value of 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The DB cluster identifier for the cluster being modified. This parameter is not case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group to use for the DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUserPassword",
					"description": "The new password for the master database user. This password can contain any printable ASCII character except /, , or @.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NewDBClusterIdentifier",
					"description": "The new DB cluster identifier for the DB cluster when renaming a DB cluster. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "A value that indicates that the DB cluster should be associated with the specified option group.             Changing this parameter does not result in an outage except in the following case, and the change             is applied during the next maintenance window            unless the ApplyImmediately parameter is set            to true for this request. If the parameter change results in an option group that             enables OEM, this change can cause a brief (sub-second) period during which new connections             are rejected but existing connections are not interrupted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the DB cluster accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredBackupWindow",
					"description": "The daily time range during which automated backups are created            if automated backups are enabled,            using the BackupRetentionPeriod parameter.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A lst of VPC security groups that the DB cluster will belong to.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=ModifyDBClusterParameterGroup&k=1": {
			"get": {
				"summary": "Modify D B Cluster Parameter Group",
				"description": "Modifies the parameters of a DB cluster parameter group.",
				"operationId": "modifydbclusterparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group to modify.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Parameters.Parameter.N",
					"description": "A list of parameters in the DB cluster parameter group to modify.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameter Groups"]
			}
		},
		"/?Action=ModifyDBClusterSnapshotAttribute&k=1": {
			"get": {
				"summary": "Modify D B Cluster Snapshot Attribute",
				"description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB cluster snapshot.",
				"operationId": "modifydbclustersnapshotattribute",
				"parameters": [{
					"in": "query",
					"name": "AttributeName",
					"description": "The name of the DB cluster snapshot attribute to modify.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterSnapshotIdentifier",
					"description": "The identifier for the DB cluster snapshot to modify the attributes for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ValuesToAdd.AttributeValue.N",
					"description": "A list of DB cluster snapshot attributes to add to the attribute specified by AttributeName.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ValuesToRemove.AttributeValue.N",
					"description": "A list of DB cluster snapshot attributes to remove from the attribute specified by AttributeName.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Snapshots"]
			}
		},
		"/?Action=ModifyDBInstance&k=1": {
			"get": {
				"summary": "Modify D B Instance",
				"description": "Modifies settings for a DB instance.",
				"operationId": "modifydbinstance",
				"parameters": [{
					"in": "query",
					"name": "AllocatedStorage",
					"description": "The new storage capacity of the RDS instance.        Changing this setting does not result in an outage and        the change is applied during the next maintenance window        unless ApplyImmediately is set        to true for this request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AllowMajorVersionUpgrade",
					"description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ApplyImmediately",
					"description": "Specifies whether the modifications in this request and        any pending modifications are asynchronously applied        as soon as possible, regardless of the        PreferredMaintenanceWindow setting for the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "Indicates that minor version upgrades will be applied automatically    to the DB instance during the maintenance window.     Changing this parameter does not result in an outage except in the following case     and the change is asynchronously applied as soon as possible.    An outage will result if this parameter is set to true during the maintenance window,     and a newer minor version is available, and RDS has enabled auto patching for that engine version.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "BackupRetentionPeriod",
					"description": "The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CACertificateIdentifier",
					"description": "Indicates the certificate that needs to be associated with the instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CopyTagsToSnapshot",
					"description": "True to copy all tags from the DB instance to snapshots of the DB instance; otherwise false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The new compute and memory capacity of the DB instance. To determine the instance classes that are available for a particular             DB engine, use the DescribeOrderableDBInstanceOptions action.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of the DB parameter group to apply to the DB instance. Changing this setting does not result in an outage. The parameter group name itself is changed immediately, but the actual parameter changes are not applied until you reboot the instance without failover. The db instance will NOT be rebooted automatically and the parameter changes will NOT be applied during the next maintenance window.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBPortNumber",
					"description": "The port number on which the database accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSecurityGroups.DBSecurityGroupName.N",
					"description": "A list of DB security groups to authorize on this DB instance. Changing this setting does not result in an outage and the change is asynchronously applied as soon as possible.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The new DB subnet group for the DB instance.          You can use this parameter to move your DB instance to a different VPC.                    If your DB instance is not in a VPC, you can also use this parameter to move your DB instance into a VPC.          For more information, see           Updating the VPC for a DB Instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Domain",
					"description": "The Active Directory Domain to move the instance to.            Specify none to remove the instance from its current domain.          The domain must be created prior to this operation.           Currently only a Microsoft SQL Server instance can be created in a Active Directory Domain.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DomainIAMRoleName",
					"description": "The name of the IAM role to use when making API calls to the Directory Service.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version number of the database engine to upgrade to.     Changing this parameter results in an outage and the change     is applied during the next maintenance window    unless the ApplyImmediately parameter is set        to true for this request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Iops",
					"description": "The new Provisioned IOPS (I/O operations per second) value for the RDS instance.             Changing this setting does not result in an outage and            the change is applied during the next maintenance window            unless the ApplyImmediately parameter is set            to true for this request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LicenseModel",
					"description": "The license model for the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUserPassword",
					"description": "The new password for the DB instance master user. Can be any printable ASCII character except /, , or @.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MonitoringInterval",
					"description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MonitoringRoleArn",
					"description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. For      example, arn:aws:iam:123456789012:role/emaccess. For information on creating a monitoring role,      go to To         create an IAM role for Amazon RDS Enhanced Monitoring.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultiAZ",
					"description": "Specifies if the DB instance is a Multi-AZ deployment.     Changing this parameter does not result in an outage and the change     is applied during the next maintenance window    unless the ApplyImmediately parameter is set        to true for this request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "NewDBInstanceIdentifier",
					"description": "The new DB instance identifier for the DB instance when renaming a DB            instance. When you change the DB instance identifier, an instance             reboot will occur immediately if you set Apply Immediately             to true, or will occur during the next maintenance window if             Apply Immediately to false. This value is stored             as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "Indicates that the DB instance should be associated with the specified option group.             Changing this parameter does not result in an outage except in the following case and the change             is applied during the next maintenance window            unless the ApplyImmediately parameter is set            to true for this request. If the parameter change results in an option group that             enables OEM, this change can cause a brief (sub-second) period during which new connections             are rejected but existing connections are not interrupted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredBackupWindow",
					"description": "The daily time range during which automated backups are created        if automated backups are enabled,        as determined by the BackupRetentionPeriod parameter.             Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If there are pending actions that cause a reboot, and the maintenance window is changed to include the current time, then changing this parameter will cause a reboot of the DB instance. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PromotionTier",
					"description": "A value that specifies the order in which an Aurora Replica is promoted to the primary instance       after a failure of the existing primary instance. For more information,       see         Fault Tolerance for an Aurora DB Cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PubliclyAccessible",
					"description": "Boolean value that indicates if the DB instance has a publicly resolvable DNS name.       Set to True to make the DB instance Internet-facing with       a publicly resolvable DNS name,      which resolves to a public IP address. Set to False to make       the DB instance internal       with a DNS name that resolves to a private IP address.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageType",
					"description": "Specifies the storage type to be associated with the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialArn",
					"description": "The ARN from the Key Store with which to associate the instance for TDE encryption.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialPassword",
					"description": "The password for the given ARN from the Key Store in order to access the device.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A list of EC2 VPC security groups to authorize on this DB instance. This change is asynchronously applied as soon as possible.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=ModifyDBParameterGroup&k=1": {
			"get": {
				"summary": "Modify D B Parameter Group",
				"description": "Modifies the parameters of a DB parameter group.",
				"operationId": "modifydbparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of the DB parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Parameters.Parameter.N",
					"description": "An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters can be modified in a single request.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameter Groups"]
			}
		},
		"/?Action=ModifyDBSnapshotAttribute&k=1": {
			"get": {
				"summary": "Modify D B Snapshot Attribute",
				"description": "Adds an attribute and values to, or removes an attribute and values from, a manual DB snapshot.",
				"operationId": "modifydbsnapshotattribute",
				"parameters": [{
					"in": "query",
					"name": "AttributeName",
					"description": "The name of the DB snapshot attribute to modify.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSnapshotIdentifier",
					"description": "The identifier for the DB snapshot to modify the attributes for.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ValuesToAdd.AttributeValue.N",
					"description": "A list of DB snapshot attributes to add to the attribute specified by AttributeName.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ValuesToRemove.AttributeValue.N",
					"description": "A list of DB snapshot attributes to remove from the attribute specified by AttributeName.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=ModifyDBSubnetGroup&k=1": {
			"get": {
				"summary": "Modify D B Subnet Group",
				"description": "Modifies an existing DB subnet group.",
				"operationId": "modifydbsubnetgroup",
				"parameters": [{
					"in": "query",
					"name": "DBSubnetGroupDescription",
					"description": "The description for the DB subnet group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The name for the DB subnet group. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubnetIds.SubnetIdentifier.N",
					"description": "The EC2 subnet IDs for the DB subnet group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Subnet Groups"]
			}
		},
		"/?Action=ModifyEventSubscription&k=1": {
			"get": {
				"summary": "Modify Event Subscription",
				"description": "Modifies an existing RDS event notification subscription.",
				"operationId": "modifyeventsubscription",
				"parameters": [{
					"in": "query",
					"name": "Enabled",
					"description": "A Boolean value; set to true to activate the subscription.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EventCategories.EventCategory.N",
					"description": "A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType             in the Events topic in the Amazon RDS User Guide              or by using the DescribeEventCategories action.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnsTopicArn",
					"description": "The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceType",
					"description": "The type of source that will be generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubscriptionName",
					"description": "The name of the RDS event notification subscription.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Event Subscriptions"]
			}
		},
		"/?Action=ModifyOptionGroup&k=1": {
			"get": {
				"summary": "Modify Option Group",
				"description": "Modifies an existing option group.",
				"operationId": "modifyoptiongroup",
				"parameters": [{
					"in": "query",
					"name": "ApplyImmediately",
					"description": "Indicates whether the changes should be applied immediately, or during the next maintenance window for each instance associated with the option group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group to be modified.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionsToInclude.OptionConfiguration.N",
					"description": "Options in this list are added to the option group or, if already present, the specified configuration is used to update the existing configuration.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionsToRemove.member.N",
					"description": "Options in this list are removed from the option group.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Option Groups"]
			}
		},
		"/?Action=PromoteReadReplica&k=1": {
			"get": {
				"summary": "Promote Read Replica",
				"description": "Promotes a Read Replica DB instance to a standalone DB instance.",
				"operationId": "promotereadreplica",
				"parameters": [{
					"in": "query",
					"name": "BackupRetentionPeriod",
					"description": "The number of days to retain automated backups. Setting this parameter to a positive number enables backups. Setting this parameter to 0 disables automated backups.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier. This value is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredBackupWindow",
					"description": "The daily time range during which automated backups are created        if automated backups are enabled,        using the BackupRetentionPeriod parameter.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Replicas"]
			}
		},
		"/?Action=PromoteReadReplicaDBCluster&k=1": {
			"get": {
				"summary": "Promote Read Replica D B Cluster",
				"description": "Promotes a Read Replica DB cluster to a standalone DB cluster.",
				"operationId": "promotereadreplicadbcluster",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The identifier of the DB cluster Read Replica to promote.      This parameter is not case-sensitive.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Replicas"]
			}
		},
		"/?Action=PurchaseReservedDBInstancesOffering&k=1": {
			"get": {
				"summary": "Purchase Reserved D B Instances Offering",
				"description": "Purchases a reserved DB instance offering.",
				"operationId": "purchasereserveddbinstancesoffering",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceCount",
					"description": "The number of instances to reserve.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedDBInstanceId",
					"description": "Customer-specified identifier to track this reservation.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ReservedDBInstancesOfferingId",
					"description": "The ID of the Reserved DB instance offering to purchase.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=RebootDBInstance&k=1": {
			"get": {
				"summary": "Reboot D B Instance",
				"description": "Rebooting a DB instance restarts the database engine service.",
				"operationId": "rebootdbinstance",
				"parameters": [{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "The DB instance identifier. This parameter is stored as a lowercase string.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ForceFailover",
					"description": "When true, the reboot will be conducted through a MultiAZ failover.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=RemoveRoleFromDBCluster&k=1": {
			"get": {
				"summary": "Remove Role From D B Cluster",
				"description": "Disassociates an Identity and Access Management (IAM) role from an Aurora DB cluster.",
				"operationId": "removerolefromdbcluster",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The name of the DB cluster to disassociate the IAM role rom.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RoleArn",
					"description": "The Amazon Resource Name (ARN) of the IAM role to disassociate from the Aurora DB cluster, for example        arn:aws:iam::123456789012:role/AuroraAccessRole.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=RemoveSourceIdentifierFromSubscription&k=1": {
			"get": {
				"summary": "Remove Source Identifier From Subscription",
				"description": "Removes a source identifier from an existing RDS event notification subscription.",
				"operationId": "removesourceidentifierfromsubscription",
				"parameters": [{
					"in": "query",
					"name": "SourceIdentifier",
					"description": "The source identifier to be removed from the subscription, such as the DB instance identifier             for a DB instance or the name of a security group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SubscriptionName",
					"description": "The name of the RDS event notification subscription you want to remove a source identifier from.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Subscriptions"]
			}
		},
		"/?Action=RemoveTagsFromResource&k=1": {
			"get": {
				"summary": "Remove Tags From Resource",
				"description": "Removes metadata tags from an Amazon RDS resource.",
				"operationId": "removetagsfromresource",
				"parameters": [{
					"in": "query",
					"name": "ResourceName",
					"description": "The Amazon RDS resource the tags will be removed from. This value is an Amazon Resource Name (ARN). For information about              creating an ARN,             see                 Constructing an RDS Amazon Resource Name (ARN).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TagKeys.member.N",
					"description": "The tag key (name) of the tag to be removed.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			}
		},
		"/?Action=ResetDBClusterParameterGroup&k=1": {
			"get": {
				"summary": "Reset D B Cluster Parameter Group",
				"description": "Modifies the parameters of a DB cluster parameter group to the default value.",
				"operationId": "resetdbclusterparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group to reset.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Parameters.Parameter.N",
					"description": "A list of parameter names in the DB cluster parameter group to reset to the default values. You cannot use this        parameter if the ResetAllParameters parameter is set to true.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ResetAllParameters",
					"description": "A value that is set to true to reset all parameters in the DB cluster parameter group       to their default values, and false otherwise. You cannot use this parameter if there         is a list of parameter names specified for the Parameters parameter.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Cluster Parameter Groups"]
			}
		},
		"/?Action=ResetDBParameterGroup&k=1": {
			"get": {
				"summary": "Reset D B Parameter Group",
				"description": "Modifies the parameters of a DB parameter group to the engine/system default value.",
				"operationId": "resetdbparametergroup",
				"parameters": [{
					"in": "query",
					"name": "DBParameterGroupName",
					"description": "The name of the DB parameter group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Parameters.Parameter.N",
					"description": "An array of parameter names, values, and the apply method for the parameter update. At least one parameter name, value, and apply method must be supplied; subsequent arguments are optional. A maximum of 20 parameters can be modified in a single request.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ResetAllParameters",
					"description": "Specifies whether (true) or not (false) to reset all parameters        in the DB parameter group to default values.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Parameter Groups"]
			}
		},
		"/?Action=RestoreDBClusterFromS3&k=1": {
			"get": {
				"summary": "Restore D B Cluster From S3",
				"description": "Creates an Amazon Aurora DB cluster from data stored in an Amazon S3 bucket.",
				"operationId": "restoredbclusterfroms3",
				"parameters": [{
					"in": "query",
					"name": "AvailabilityZones.AvailabilityZone.N",
					"description": "A list of EC2 Availability Zones that instances in the restored DB cluster can be created in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "BackupRetentionPeriod",
					"description": "The number of days for which automated backups of the restored DB cluster are retained. You must specify a minimum value of 1.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CharacterSetName",
					"description": "A value that indicates that the restored DB cluster should be associated with the specified CharacterSet.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DatabaseName",
					"description": "The database name for the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The name of the DB cluster to create from the source data in the S3 bucket. This parameter is isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterParameterGroupName",
					"description": "The name of the DB cluster parameter group to associate            with the restored DB cluster. If this argument is omitted, default.aurora5.6 will be used.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "A DB subnet group to associate with the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The name of the database engine to be used for the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version number of the database engine to use.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "KmsKeyId",
					"description": "The KMS key identifier for an encrypted DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUsername",
					"description": "The name of the master user for the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MasterUserPassword",
					"description": "The password for the master database user. This password can contain any printable ASCII character except /, , or @.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "A value that indicates that the restored DB cluster should be associated with the specified option group.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the instances in the restored DB cluster accept connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredBackupWindow",
					"description": "The daily time range during which automated backups are created            if automated backups are enabled            using the BackupRetentionPeriod parameter.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PreferredMaintenanceWindow",
					"description": "The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).",
					"type": "string"
				},
				{
					"in": "query",
					"name": "S3BucketName",
					"description": "The name of the Amazon S3 bucket that contains the data used to create the Amazon Aurora DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "S3IngestionRoleArn",
					"description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that authorizes        Amazon RDS to access the Amazon S3 bucket on your behalf.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "S3Prefix",
					"description": "The prefix for all of the file names that contain the data used to create the Amazon Aurora DB cluster.        If you do not specify a SourceS3Prefix value, then the Amazon Aurora DB cluster is        created by using all of the files in the Amazon S3 bucket.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceEngine",
					"description": "The identifier for the database engine that was backed up to create the files stored in the            Amazon S3 bucket.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceEngineVersion",
					"description": "The version of the database that the backup files were created from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageEncrypted",
					"description": "Specifies whether the restored DB cluster is encrypted.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A list of EC2 VPC security groups to associate with the restored DB cluster.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=RestoreDBClusterFromSnapshot&k=1": {
			"get": {
				"summary": "Restore D B Cluster From Snapshot",
				"description": "Creates a new DB cluster from a DB cluster snapshot.",
				"operationId": "restoredbclusterfromsnapshot",
				"parameters": [{
					"in": "query",
					"name": "AvailabilityZones.AvailabilityZone.N",
					"description": "Provides the list of EC2 Availability Zones that instances in the restored DB cluster can be created in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DatabaseName",
					"description": "The database name for the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The name of the DB cluster to create from the DB cluster snapshot. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The name of the DB subnet group to use for the new DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The database engine to use for the new DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EngineVersion",
					"description": "The version of the database engine to use for the new DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "KmsKeyId",
					"description": "The KMS key identifier to use when restoring an encrypted DB cluster from a DB cluster snapshot.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group to use for the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the new DB cluster accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SnapshotIdentifier",
					"description": "The identifier for the DB cluster snapshot to restore from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "The tags to be assigned to the restored DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A list of VPC security groups that the new DB cluster will belong to.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Snapshots"]
			}
		},
		"/?Action=RestoreDBClusterToPointInTime&k=1": {
			"get": {
				"summary": "Restore D B Cluster To Point In Time",
				"description": "Restores a DB cluster to an arbitrary point in time.",
				"operationId": "restoredbclustertopointintime",
				"parameters": [{
					"in": "query",
					"name": "DBClusterIdentifier",
					"description": "The name of the new DB cluster to be created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The DB subnet group name to use for the new DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "KmsKeyId",
					"description": "The KMS key identifier to use when restoring an encrypted DB cluster from an encrypted DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group for the new DB cluster.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the new DB cluster accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RestoreToTime",
					"description": "The date and time to restore the DB cluster to.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceDBClusterIdentifier",
					"description": "The identifier of the source DB cluster from which to restore.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "UseLatestRestorableTime",
					"description": "A value that is set to true to restore the DB cluster to the latest       restorable backup time, and false otherwise.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "VpcSecurityGroupIds.VpcSecurityGroupId.N",
					"description": "A lst of VPC security groups that the new DB cluster belongs to.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Clusters"]
			}
		},
		"/?Action=RestoreDBInstanceFromDBSnapshot&k=1": {
			"get": {
				"summary": "Restore D B Instance From D B Snapshot",
				"description": "Creates a new DB instance from a DB snapshot.",
				"operationId": "restoredbinstancefromdbsnapshot",
				"parameters": [{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "Indicates that minor version upgrades will be applied automatically to the DB instance during the maintenance window.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AvailabilityZone",
					"description": "The EC2 Availability Zone that the database instance will be created in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CopyTagsToSnapshot",
					"description": "True to copy all tags from the restored DB instance to snapshots of the DB instance; otherwise false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The compute and memory capacity of the Amazon RDS DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceIdentifier",
					"description": "Name of the DB instance to create from the DB snapshot. This parameter isnt case-sensitive.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBName",
					"description": "The database name for the restored DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSnapshotIdentifier",
					"description": "The identifier for the DB snapshot to restore from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The DB subnet group name to use for the new instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Domain",
					"description": "Specify the Active Directory Domain to restore the instance in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DomainIAMRoleName",
					"description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The database engine to use for the new instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Iops",
					"description": "Specifies the amount of provisioned IOPS for the DB instance, expressed in I/O operations per second. If this parameter is not specified, the IOPS value will be taken from the backup. If this parameter is set to 0, the new instance will be converted to a non-PIOPS instance, which will take additional time, though your DB instance will be available for connections before the conversion starts.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LicenseModel",
					"description": "License model information for the restored DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultiAZ",
					"description": "Specifies if the DB instance is a Multi-AZ deployment.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group to be used for the restored DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the database accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PubliclyAccessible",
					"description": "Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageType",
					"description": "Specifies the storage type to be associated with the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialArn",
					"description": "The ARN from the Key Store with which to associate the instance for TDE encryption.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialPassword",
					"description": "The password for the given ARN from the Key Store in order to access the device.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=RestoreDBInstanceToPointInTime&k=1": {
			"get": {
				"summary": "Restore D B Instance To Point In Time",
				"description": "Restores a DB instance to an arbitrary point in time.",
				"operationId": "restoredbinstancetopointintime",
				"parameters": [{
					"in": "query",
					"name": "AutoMinorVersionUpgrade",
					"description": "Indicates that minor version upgrades will be applied automatically to the DB instance during the maintenance window.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "AvailabilityZone",
					"description": "The EC2 Availability Zone that the database instance will be created in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "CopyTagsToSnapshot",
					"description": "True to copy all tags from the restored DB instance to snapshots of the DB instance; otherwise false. The default is false.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBInstanceClass",
					"description": "The compute and memory capacity of the Amazon RDS DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBName",
					"description": "The database name for the restored DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSubnetGroupName",
					"description": "The DB subnet group name to use for the new instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Domain",
					"description": "Specify the Active Directory Domain to restore the instance in.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DomainIAMRoleName",
					"description": "Specify the name of the IAM role to be used when making API calls to the Directory Service.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Engine",
					"description": "The database engine to use for the new instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Iops",
					"description": "The amount of Provisioned IOPS (input/output operations per second) to be initially allocated for the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "LicenseModel",
					"description": "License model information for the restored DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "MultiAZ",
					"description": "Specifies if the DB instance is a Multi-AZ deployment.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "OptionGroupName",
					"description": "The name of the option group to be used for the restored DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Port",
					"description": "The port number on which the database accepts connections.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "PubliclyAccessible",
					"description": "Specifies the accessibility options for the DB instance. A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. A value of false specifies an internal instance with a DNS name that resolves to a private IP address.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "RestoreTime",
					"description": "The date and time to restore from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "SourceDBInstanceIdentifier",
					"description": "The identifier of the source DB instance from which to restore.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StorageType",
					"description": "Specifies the storage type to be associated with the DB instance.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags.Tag.N",
					"description": "A list of tags.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TargetDBInstanceIdentifier",
					"description": "The name of the new database instance to be created.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialArn",
					"description": "The ARN from the Key Store with which to associate the instance for TDE encryption.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TdeCredentialPassword",
					"description": "The password for the given ARN from the Key Store in order to access the device.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "UseLatestRestorableTime",
					"description": "Specifies whether (true) or not (false) the        DB instance is restored from the latest backup time.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Instances"]
			}
		},
		"/?Action=RevokeDBSecurityGroupIngress&k=1": {
			"get": {
				"summary": "Revoke D B Security Group Ingress",
				"description": "Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups.",
				"operationId": "revokedbsecuritygroupingress",
				"parameters": [{
					"in": "query",
					"name": "CIDRIP",
					"description": "The IP range to revoke access from.         Must be a valid CIDR range. If CIDRIP is specified,         EC2SecurityGroupName, EC2SecurityGroupId and EC2SecurityGroupOwnerId        cannot be provided.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "DBSecurityGroupName",
					"description": "The name of the DB security group to revoke ingress from.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupId",
					"description": "The id of the EC2 security group to revoke access from.        For VPC DB security groups, EC2SecurityGroupId must be provided.        Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupName",
					"description": "The name of the EC2 security group to revoke access from.        For VPC DB security groups, EC2SecurityGroupId must be provided.        Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
					"type": "string"
				},
				{
					"in": "query",
					"name": "EC2SecurityGroupOwnerId",
					"description": "The AWS Account Number of the owner of the EC2 security group        specified in the EC2SecurityGroupName parameter.        The AWS Access Key ID is not an acceptable value.        For VPC DB security groups, EC2SecurityGroupId must be provided.        Otherwise, EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId must be provided.",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Security Groups"]
			}
		}
	},
	"definitions": []
}