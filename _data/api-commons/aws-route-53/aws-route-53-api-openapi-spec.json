
  {
	"swagger": "2.0",
	"info": {
		"title": "AWS Route 53 API",
		"version": "1.0.0"
	},
	"schemes": ["http"],
	"produces": ["application/json"],
	"consumes": ["application/json"],
	"paths": {
		"/2013-04-01/change/Id": {
			"get": {
				"summary": "Get Change",
				"description": "Returns the current status of a change batch request",
				"operationId": "getchange",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the change batch request",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Changes"]
			}
		},
		"/2013-04-01/checkeripranges": {
			"get": {
				"summary": "Get Checker Ip Ranges",
				"description": "GetCheckerIpRanges still works, but we recommend that you download ip-ranges",
				"operationId": "getcheckeripranges",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["IP Ranges"]
			}
		},
		"/2013-04-01/delegationset": {
			"post": {
				"summary": "Create Reusable Delegation Set",
				"description": "Creates a delegation set (a group of four name servers) that can be reused by multiplehosted zones",
				"operationId": "createreusabledelegationset",
				"parameters": [{
					"in": "body",
					"name": "CallerReference",
					"description": "A unique string that identifies the request, and that allows you to retry failedttttCreateReusableDelegationSet requests without the risk of executing thetttoperation twice",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "CreateReusableDelegationSetRequest",
					"description": "Root level tag for the CreateReusableDelegationSetRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "HostedZoneId",
					"description": "If you want to mark the delegation set for an existing hosted zone as reusable, the IDtttfor that hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reusable Delegation Sets"]
			}
		},
		"/2013-04-01/delegationset/Id": {
			"delete": {
				"summary": "Delete Reusable Delegation Set",
				"description": "Deletes a reusable delegation set",
				"operationId": "deletereusabledelegationset",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the reusable delegation set you want to delete",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reusable Delegation Sets"]
			},
			"get": {
				"summary": "Get Reusable Delegation Set",
				"description": "Retrieves the reusable delegation set",
				"operationId": "getreusabledelegationset",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the reusable delegation set for which you want to get a list of the nametttserver",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reusable Delegation Sets"]
			}
		},
		"/2013-04-01/delegationset?marker=Marker&amp;maxitems=MaxItems": {
			"get": {
				"summary": "List Reusable Delegation Sets",
				"description": "To retrieve a list of your reusable delegation sets, send a GET request tothe /2013-04-01/delegationset resource",
				"operationId": "listreusabledelegationsets",
				"parameters": [{
					"in": "path",
					"name": "marker",
					"description": "If you're making the second or subsequent call tottttListReusableDelegationSets, the Marker element matches the valuetttthat you specified in the marker parameter in the previous request",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Reusable Delegation Sets"]
			}
		},
		"/2013-04-01/geolocation?continentcode=ContinentCode&amp;countrycode=CountryCode&amp;subdivisioncode=SubdivisionCode": {
			"get": {
				"summary": "Get Geo Location",
				"description": "Retrieves a single geo location",
				"operationId": "getgeolocation",
				"parameters": [{
					"in": "path",
					"name": "continentcode",
					"description": "Amazon Route 53 supports the following continent codes:                        AF: Africa                        AN: Antarctica                        AS: Asia                        EU: Europe                        OC: Oceania                        NA: North America                        SA: South AmericaLength Constraints: Fixed length of 2",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Locations"]
			}
		},
		"/2013-04-01/geolocations&amp;maxitems=MaxItems?startcontinentcode=StartContinentCode&amp;startcountrycode=StartCountryCode&amp;startsubdivisioncode=StartSubdivisionCode": {
			"get": {
				"summary": "List Geo Locations",
				"description": "Retrieves a list of supported geo locations",
				"operationId": "listgeolocations",
				"parameters": [{
					"in": "path",
					"name": "maxitems",
					"description": "(Optional) The maximum number of geolocations to be included in the response body fortttthis request",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Locations"]
			}
		},
		"/2013-04-01/healthcheck": {
			"post": {
				"summary": "Create Health Check",
				"description": "Creates a new health check",
				"operationId": "createhealthcheck",
				"parameters": [{
					"in": "body",
					"name": "CallerReference",
					"description": "A unique string that identifies the request and that allows failedttttCreateHealthCheck requests to be retried without the risk of executing thetttoperation twice",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "CreateHealthCheckRequest",
					"description": "Root level tag for the CreateHealthCheckRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "HealthCheckConfig",
					"description": "A complex type that contains the response to a CreateHealthCheck request",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			}
		},
		"/2013-04-01/healthcheck/HealthCheckId": {
			"delete": {
				"summary": "Delete Health Check",
				"description": "Deletes a health check",
				"operationId": "deletehealthcheck",
				"parameters": [{
					"in": "path",
					"name": "HealthCheckId",
					"description": "The ID of the health check that you want to delete",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			},
			"get": {
				"summary": "Get Health Check",
				"description": "Gets information about a specified health check",
				"operationId": "gethealthcheck",
				"parameters": [{
					"in": "path",
					"name": "HealthCheckId",
					"description": "The identifier that Amazon Route 53 assigned to the health check when you created it",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			},
			"post": {
				"summary": "Update Health Check",
				"description": "Updates an existing health check",
				"operationId": "updatehealthcheck",
				"parameters": [{
					"in": "body",
					"name": "AlarmIdentifier",
					"description": "A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers totttuse to determine whether this health check is healthy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "ChildHealthChecks",
					"description": "A complex type that contains one ChildHealthCheck element for each healthtttcheck that you want to associate with a CALCULATED health check",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "EnableSNI",
					"description": "Specify whether you want Amazon Route 53 to send the value ofttttFullyQualifiedDomainName to the endpoint in the client_hellotttmessage during TLS negotiation",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "FailureThreshold",
					"description": "The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 totttchange the current status of the endpoint from unhealthy to healthy or vice versa",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "FullyQualifiedDomainName",
					"description": "Amazon Route 53 behavior depends on whether you specify a value for IPAddress",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "HealthCheckId",
					"description": "The ID for the health check for which you want detailed information",
					"type": "string"
				},
				{
					"in": "body",
					"name": "HealthCheckVersion",
					"description": "A sequential counter that Amazon Route 53 sets to 1 when you create a health checktttand increments by 1 each time you update settings for the health check",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "HealthThreshold",
					"description": "The number of child health checks that are associated with a CALCULATEDttthealth that Amazon Route 53 must consider healthy for the CALCULATED health check to betttconsidered healthy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "InsufficientDataHealthStatus",
					"description": "When CloudWatch has insufficient data about the metric to determine the alarm state, the status tttthat you want Amazon Route 53 to assign to the health check:                        Healthy: Amazon Route 53 considers the health check to be healthy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Inverted",
					"description": "Specify whether you want Amazon Route 53 to invert the status of a health check, for example, totttconsider a health check unhealthy when it otherwise would be considered healthy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "IPAddress",
					"description": "The IPv4 or IPv6 IP address for the endpoint that you want Amazon Route 53 to perform health checks on",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Port",
					"description": "The port on the endpoint on which you want Amazon Route 53 to perform health checks",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Regions",
					"description": "A complex type that contains one Region element for each region from which you wanttttAmazon Route 53 health checkers to check the specified endpoint",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "ResourcePath",
					"description": "The path that you want Amazon Route 53 to request when performing health checks",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "SearchString",
					"description": "If the value of Type is HTTP_STR_MATCH orttttHTTP_STR_MATCH, the string that you want Amazon Route 53 to search for in the responsetttbody from the specified resource",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "UpdateHealthCheckRequest",
					"description": "Root level tag for the UpdateHealthCheckRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			}
		},
		"/2013-04-01/healthcheck/HealthCheckId/lastfailurereason": {
			"get": {
				"summary": "Get Health Check Last Failure Reason",
				"description": "If you want to learn why a health check is currently failing or why it failed mostrecently (if at all), you can get the failure reason for the most recent failure",
				"operationId": "gethealthchecklastfailurereason",
				"parameters": [{
					"in": "path",
					"name": "HealthCheckId",
					"description": "The ID for the health check for which you want the last failure reason",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			}
		},
		"/2013-04-01/healthcheck/HealthCheckId/status": {
			"get": {
				"summary": "Get Health Check Status",
				"description": "Gets status of a specified health check",
				"operationId": "gethealthcheckstatus",
				"parameters": [{
					"in": "path",
					"name": "HealthCheckId",
					"description": "If you want Amazon Route 53 to return this resource record set in response to a DNS query onlytttwhen a health check is passing, include the HealthCheckId element and specify thetttID of the applicable health check",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			}
		},
		"/2013-04-01/healthcheck?marker=Marker&amp;maxitems=MaxItems": {
			"get": {
				"summary": "List Health Checks",
				"description": "Retrieve a list of your health checks",
				"operationId": "listhealthchecks",
				"parameters": [{
					"in": "path",
					"name": "marker",
					"description": "If the response to a ListHealthChecks is more than one page, marker is thettthealth check ID for the first health check on the next page of results",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			}
		},
		"/2013-04-01/healthcheckcount": {
			"get": {
				"summary": "Get Health Check Count",
				"description": "To retrieve a count of all your health checks, send a GET request to the/2013-04-01/healthcheckcount resource",
				"operationId": "gethealthcheckcount",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Health Checks"]
			}
		},
		"/2013-04-01/hostedzone": {
			"post": {
				"summary": "Create Hosted Zone",
				"description": "Creates a new public hosted zone, used to specify how the Domain Name System (DNS)routes traffic on the Internet for a domain, such as example",
				"operationId": "createhostedzone",
				"parameters": [{
					"in": "body",
					"name": "CallerReference",
					"description": "A unique string that identifies the request and that allows failedtttCreateHostedZone requests to be retried without the risk of executing thetttoperation twice",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "CreateHostedZoneRequest",
					"description": "Root level tag for the CreateHostedZoneRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Default",
					"description": "None",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "DelegationSetId",
					"description": "If you want to associate a reusable delegation set with this hosted zone, the ID thattttAmazon Route 53 assigned to the reusable delegation set when you created it",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "HostedZoneConfig",
					"description": "(Optional) A complex type that contains an optional comment about your hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Name",
					"description": "The name of the domain",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Parent",
					"description": "CreatedHostedZoneRequest",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "VPC",
					"description": "The VPC that you want your hosted zone to be associated with",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			}
		},
		"/2013-04-01/hostedzone&amp;delegationsetid=DelegationSetId?marker=Marker&amp;maxitems=MaxItems": {
			"get": {
				"summary": "List Hosted Zones",
				"description": "To retrieve a list of your public and private hosted zones, send a GETrequest to the /2013-04-01/hostedzone resource",
				"operationId": "listhostedzones",
				"parameters": [{
					"in": "path",
					"name": "delegationsetid",
					"description": "If you're using reusable delegation sets and you want to list all of the hosted zones that are associated tttwith a reusable delegation set, specify the ID of that reusable delegation set",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			}
		},
		"/2013-04-01/hostedzone/Id": {
			"delete": {
				"summary": "Delete Hosted Zone",
				"description": "Deletes a hosted zone",
				"operationId": "deletehostedzone",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the hosted zone you want to delete",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			},
			"get": {
				"summary": "Get Hosted Zone",
				"description": "Retrieves the delegation set for a hosted zone, including the four name serversassigned to the hosted zone",
				"operationId": "gethostedzone",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the hosted zone for which you want to get a list of the name servers in thetttdelegation set",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			},
			"post": {
				"summary": "Update Hosted Zone Comment",
				"description": "Updates the hosted zone comment",
				"operationId": "updatehostedzonecomment",
				"parameters": [{
					"in": "body",
					"name": "Comment",
					"description": "The new comment for the hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The ID for the hosted zone for which you want to update the comment",
					"type": "string"
				},
				{
					"in": "body",
					"name": "UpdateHostedZoneCommentRequest",
					"description": "Root level tag for the UpdateHostedZoneCommentRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			}
		},
		"/2013-04-01/hostedzone/Id/associatevpc": {
			"post": {
				"summary": "Associate V P C With Hosted Zone",
				"description": "Associates an Amazon VPC with a private hosted zone",
				"operationId": "associatevpcwithhostedzone",
				"parameters": [{
					"in": "body",
					"name": "AssociateVPCWithHostedZoneRequest",
					"description": "Root level tag for the AssociateVPCWithHostedZoneRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Comment",
					"description": "Optional: A comment about the association request",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The ID of the private hosted zone that you want to associate an Amazon VPC with",
					"type": "string"
				},
				{
					"in": "body",
					"name": "VPC",
					"description": "A complex type that contains information about the VPC that you want to associate with a private hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["VPC"]
			}
		},
		"/2013-04-01/hostedzone/Id/authorizevpcassociation": {
			"post": {
				"summary": "Create V P C Association Authorization",
				"description": "Authorizes the AWS account that created a specified VPC to submit an AssociateVPCWithHostedZone request to associate the VPC with a specified hosted zone that was created by a different account",
				"operationId": "createvpcassociationauthorization",
				"parameters": [{
					"in": "body",
					"name": "CreateVPCAssociationAuthorizationRequest",
					"description": "Root level tag for the CreateVPCAssociationAuthorizationRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The ID of the private hosted zone that you want to authorize associating a VPC with",
					"type": "string"
				},
				{
					"in": "body",
					"name": "VPC",
					"description": "A complex type that contains the VPC ID and region for the VPC that you want to authorize associating tttwith your hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["VPC"]
			}
		},
		"/2013-04-01/hostedzone/Id/authorizevpcassociation&amp;maxresults=MaxResults?nexttoken=NextToken": {
			"get": {
				"summary": "List V P C Association Authorizations",
				"description": "Gets a list of the VPCs that were created by other accounts and that can be associated with a specified hosted zone because you've submitted one or more CreateVPCAssociationAuthorization requests",
				"operationId": "listvpcassociationauthorizations",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the hosted zone for which you want a list of VPCs that can be associated with the hosted zone",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["VPC"]
			}
		},
		"/2013-04-01/hostedzone/Id/deauthorizevpcassociation": {
			"post": {
				"summary": "Delete V P C Association Authorization",
				"description": "Removes authorization to submit an AssociateVPCWithHostedZone request to associate a specified VPC with a hosted zone that was created by a different account",
				"operationId": "deletevpcassociationauthorization",
				"parameters": [{
					"in": "body",
					"name": "DeleteVPCAssociationAuthorizationRequest",
					"description": "Root level tag for the DeleteVPCAssociationAuthorizationRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "When removing authorization to associate a VPC that was created by one AWS account with a hosted zone tttthat was created with a different AWS account, the ID of the hosted zone",
					"type": "string"
				},
				{
					"in": "body",
					"name": "VPC",
					"description": "When removing authorization to associate a VPC that was created by one AWS account with a hosted zone tttthat was created with a different AWS account, a complex type that includes the ID and region of the VPC",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["VPC"]
			}
		},
		"/2013-04-01/hostedzone/Id/disassociatevpc": {
			"post": {
				"summary": "Disassociate V P C From Hosted Zone",
				"description": "Disassociates a VPC from a Amazon Route 53 private hosted zone",
				"operationId": "disassociatevpcfromhostedzone",
				"parameters": [{
					"in": "body",
					"name": "Comment",
					"description": "Optional: A comment about the disassociation request",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "DisassociateVPCFromHostedZoneRequest",
					"description": "Root level tag for the DisassociateVPCFromHostedZoneRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The ID of the private hosted zone that you want to disassociate a VPC from",
					"type": "string"
				},
				{
					"in": "body",
					"name": "VPC",
					"description": "A complex type that contains information about the VPC that you're disassociatingtttfrom the specified hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["VPC"]
			}
		},
		"/2013-04-01/hostedzone/Id/rrset&amp;identifier=StartRecordIdentifier&amp;maxitems=MaxItems?name=StartRecordName&amp;type=StartRecordType": {
			"get": {
				"summary": "List Resource Record Sets",
				"description": "Lists the resource record sets in a specified hosted zone",
				"operationId": "listresourcerecordsets",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the hosted zone that contains the resource record sets that you want totttget",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Resource Record Sets"]
			}
		},
		"/2013-04-01/hostedzone/Id/rrset/": {
			"post": {
				"summary": "Change Resource Record Sets",
				"description": "Create, change, update, or delete authoritative DNS information on all Amazon Route 53 servers",
				"operationId": "changeresourcerecordsets",
				"parameters": [{
					"in": "body",
					"name": "ChangeBatch",
					"description": "A complex type that contains an optional comment and the Changestttelement",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "ChangeResourceRecordSetsRequest",
					"description": "Root level tag for the ChangeResourceRecordSetsRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The ID of the hosted zone that contains the resource record sets that you want totttchange",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Changes"]
			}
		},
		"/2013-04-01/hostedzonecount": {
			"get": {
				"summary": "Get Hosted Zone Count",
				"description": "Retrieves a count of all your hosted zones",
				"operationId": "gethostedzonecount",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			}
		},
		"/2013-04-01/hostedzonesbyname?dnsname=DNSName&amp;hostedzoneid=HostedZoneId&amp;maxitems=MaxItems": {
			"get": {
				"summary": "List Hosted Zones By Name",
				"description": "Retrieves a list of your hosted zones in lexicographic order",
				"operationId": "listhostedzonesbyname",
				"parameters": [{
					"in": "path",
					"name": "dnsname",
					"description": "(Optional) For your first request to ListHostedZonesByName, include thettttdnsname parameter only if you want to specify the name of the first hosted zonetttin the response",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Hosted Zones"]
			}
		},
		"/2013-04-01/tags/ResourceType": {
			"post": {
				"summary": "List Tags For Resources",
				"description": "Lists tags for up to 10 health checks or hosted zones",
				"operationId": "listtagsforresources",
				"parameters": [{
					"in": "body",
					"name": "ListTagsForResourcesRequest",
					"description": "Root level tag for the ListTagsForResourcesRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "ResourceIds",
					"description": "A complex type that contains the ResourceId element for each resource for which youtttwant to get a list of tags",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "ResourceType",
					"description": "The type of the resources",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			}
		},
		"/2013-04-01/tags/ResourceType/ResourceId": {
			"get": {
				"summary": "List Tags For Resource",
				"description": "Lists tags for one health check or hosted zone",
				"operationId": "listtagsforresource",
				"parameters": [{
					"in": "path",
					"name": "ResourceId",
					"description": "The ID of the resource for which you want to retrieve tags",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Tags"]
			},
			"post": {
				"summary": "Change Tags For Resource",
				"description": "Adds, edits, or deletes tags for a health check or a hosted zone",
				"operationId": "changetagsforresource",
				"parameters": [{
					"in": "body",
					"name": "AddTags",
					"description": "A complex type that contains a list of the tags that you want to add to the specifiedttthealth check or hosted zone and/or the tags for which you want to edit the Valuetttelement",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "ChangeTagsForResourceRequest",
					"description": "Root level tag for the ChangeTagsForResourceRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "RemoveTagKeys",
					"description": "A complex type that contains a list of the tags that you want to delete from thetttspecified health check or hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "ResourceId",
					"description": "The ID of the resource for which you want to add, change, or delete tags",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Changes"]
			}
		},
		"/2013-04-01/testdnsanswer&amp;edns0clientsubnetip=EDNS0ClientSubnetIP&amp;edns0clientsubnetmask=EDNS0ClientSubnetMask?hostedzoneid=HostedZoneId&amp;recordname=RecordName&amp;recordtype=RecordType&amp;resolverip=ResolverIP": {
			"get": {
				"summary": "Test D N S Answer",
				"description": "Gets the value that Amazon Route 53 returns in response to a DNS request for a specified record name and type",
				"operationId": "testdnsanswer",
				"parameters": [{
					"in": "path",
					"name": "edns0clientsubnetip",
					"description": "If the resolver that you specified for resolverip supports EDNS0, specify the IP address of a client tttin the applicable location",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["DNS"]
			}
		},
		"/2013-04-01/trafficpolicies&amp;maxitems=MaxItems?trafficpolicyid=TrafficPolicyIdMarker": {
			"get": {
				"summary": "List Traffic Policies",
				"description": "Gets information about the latest version for every traffic policy that is associatedwith the current AWS account",
				"operationId": "listtrafficpolicies",
				"parameters": [{
					"in": "path",
					"name": "maxitems",
					"description": "(Optional) The maximum number of traffic policies to be included in the response bodytttfor this request",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicies/Id/versions&amp;maxitems=MaxItems?trafficpolicyversion=TrafficPolicyVersionMarker": {
			"get": {
				"summary": "List Traffic Policy Versions",
				"description": "Gets information about all of the versions for a specified traffic policy",
				"operationId": "listtrafficpolicyversions",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "Specify the value of Id of the traffic policy for which you want to listtttall versions",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicy": {
			"post": {
				"summary": "Create Traffic Policy",
				"description": "Creates a traffic policy, which you use to create multiple DNS resource record sets forone domain name (such as example",
				"operationId": "createtrafficpolicy",
				"parameters": [{
					"in": "body",
					"name": "Comment",
					"description": "(Optional) Any comments that you want to include about the traffic policy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "CreateTrafficPolicyRequest",
					"description": "Root level tag for the CreateTrafficPolicyRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Document",
					"description": "The definition of this traffic policy in JSON format",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Name",
					"description": "The name of the traffic policy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicy/Id": {
			"post": {
				"summary": "Create Traffic Policy Version",
				"description": "Creates a new version of an existing traffic policy",
				"operationId": "createtrafficpolicyversion",
				"parameters": [{
					"in": "body",
					"name": "Comment",
					"description": "The comment that you specified in the CreateTrafficPolicyVersion request,tttif any",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "CreateTrafficPolicyVersionRequest",
					"description": "Root level tag for the CreateTrafficPolicyVersionRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Document",
					"description": "The definition of this version of the traffic policy, in JSON format",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The ID of the traffic policy for which you want to create a new version",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicy/Id/Version": {
			"delete": {
				"summary": "Delete Traffic Policy",
				"description": "Deletes a traffic policy",
				"operationId": "deletetrafficpolicy",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the traffic policy that you want to delete",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			},
			"get": {
				"summary": "Get Traffic Policy",
				"description": "Gets information about a specific traffic policy version",
				"operationId": "gettrafficpolicy",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the traffic policy that you want to get information about",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			},
			"post": {
				"summary": "Update Traffic Policy Comment",
				"description": "Updates the comment for a specified traffic policy version",
				"operationId": "updatetrafficpolicycomment",
				"parameters": [{
					"in": "body",
					"name": "Comment",
					"description": "The new comment for the specified traffic policy and version",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "path",
					"name": "Id",
					"description": "The value of Id for the traffic policy for which you want to update thetttcomment",
					"type": "string"
				},
				{
					"in": "body",
					"name": "UpdateTrafficPolicyCommentRequest",
					"description": "Root level tag for the UpdateTrafficPolicyCommentRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicyinstance": {
			"post": {
				"summary": "Create Traffic Policy Instance",
				"description": "Creates resource record sets in a specified hosted zone based on the settings in aspecified traffic policy version",
				"operationId": "createtrafficpolicyinstance",
				"parameters": [{
					"in": "body",
					"name": "CreateTrafficPolicyInstanceRequest",
					"description": "Root level tag for the CreateTrafficPolicyInstanceRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "HostedZoneId",
					"description": "The ID of the hosted zone in which you want Amazon Route 53 to create resource record sets bytttusing the configuration in a traffic policy",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "Name",
					"description": "The domain name (such as example",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "TrafficPolicyId",
					"description": "The ID of the traffic policy that you want to use to create resource record sets in thetttspecified hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "TrafficPolicyVersion",
					"description": "The version of the traffic policy that you want to use to create resource record setstttin the specified hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "TTL",
					"description": "(Optional) The TTL that you want Amazon Route 53 to assign to all of the resource record setstttthat it creates in the specified hosted zone",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicyinstance/Id": {
			"delete": {
				"summary": "Delete Traffic Policy Instance",
				"description": "Deletes a traffic policy instance and all of the resource record sets that Amazon Route 53created when you created the instance",
				"operationId": "deletetrafficpolicyinstance",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the traffic policy instance that you want to delete",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			},
			"get": {
				"summary": "Get Traffic Policy Instance",
				"description": "Gets information about a specified traffic policy instance",
				"operationId": "gettrafficpolicyinstance",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the traffic policy instance that you want to get information about",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			},
			"post": {
				"summary": "Update Traffic Policy Instance",
				"description": "Updates the resource record sets in a specified hosted zone that were created based onthe settings in a specified traffic policy version",
				"operationId": "updatetrafficpolicyinstance",
				"parameters": [{
					"in": "path",
					"name": "Id",
					"description": "The ID of the traffic policy instance that you want to update",
					"type": "string"
				},
				{
					"in": "body",
					"name": "TrafficPolicyId",
					"description": "The ID of the traffic policy that you want Amazon Route 53 to use to update resource record setstttfor the specified traffic policy instance",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "TrafficPolicyVersion",
					"description": "The version of the traffic policy that you want Amazon Route 53 to use to update resource recordtttsets for the specified traffic policy instance",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "TTL",
					"description": "The TTL that you want Amazon Route 53 to assign to all of the updated resource recordtttsets",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				},
				{
					"in": "body",
					"name": "UpdateTrafficPolicyInstanceRequest",
					"description": "Root level tag for the UpdateTrafficPolicyInstanceRequest parameters",
					"schema": {
						"$ref": "#/definitions/holder"
					}
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicyinstancecount": {
			"get": {
				"summary": "Get Traffic Policy Instance Count",
				"description": "Gets the number of traffic policy instances that are associated with the current AWSaccount",
				"operationId": "gettrafficpolicyinstancecount",
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicyinstances/hostedzone?id=HostedZoneId&amp;maxitems=MaxItems&amp;trafficpolicyinstancename=TrafficPolicyInstanceNameMarker&amp;trafficpolicyinstancetype=TrafficPolicyInstanceTypeMarker": {
			"get": {
				"summary": "List Traffic Policy Instances By Hosted Zone",
				"description": "Gets information about the traffic policy instances that you created in a specifiedhosted zone",
				"operationId": "listtrafficpolicyinstancesbyhostedzone",
				"parameters": [{
					"in": "path",
					"name": "id",
					"description": "The ID of the hosted zone for which you want to list traffic policytttinstances",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicyinstances/trafficpolicy&amp;hostedzoneid=HostedZoneIdMarker?id=TrafficPolicyId&amp;maxitems=MaxItems&amp;trafficpolicyinstancename=TrafficPolicyInstanceNameMarker&amp;trafficpolicyinstancetype=TrafficPolicyInstanceTypeMarker&": {
			"get": {
				"summary": "List Traffic Policy Instances By Policy",
				"description": "Gets information about the traffic policy instances that you created by using a specifytraffic policy version",
				"operationId": "listtrafficpolicyinstancesbypolicy",
				"parameters": [{
					"in": "query",
					"name": "CapacityId",
					"description": "The ID that identifies the provisioned capacity unit",
					"type": "string"
				},
				{
					"in": "query",
					"name": "ExpirationDate",
					"description": "The date that the provisioned capacity unit expires, in Coordinated                            Universal Time (UTC)",
					"type": "string"
				},
				{
					"in": "path",
					"name": "hostedzoneid",
					"description": "For the first request to ListTrafficPolicyInstancesByPolicy, omit thistttvalue",
					"type": "string"
				},
				{
					"in": "query",
					"name": "StartDate",
					"description": "The date that the provisioned capacity unit was purchased, in Coordinated                            Universal Time (UTC)",
					"type": "string"
				},
				{
					"in": "query",
					"name": "TagKeys",
					"description": "A list of tag keys",
					"type": "string"
				},
				{
					"in": "query",
					"name": "Tags",
					"description": "The tags attached to the vault",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		},
		"/2013-04-01/trafficpolicyinstances?hostedzoneid=HostedZoneIdMarker&amp;maxitems=MaxItems&amp;trafficpolicyinstancename=TrafficPolicyInstanceNameMarker&amp;trafficpolicyinstancetype=TrafficPolicyInstanceTypeMarker": {
			"get": {
				"summary": "List Traffic Policy Instances",
				"description": "Gets information about the traffic policy instances that you created by using thecurrent AWS account",
				"operationId": "listtrafficpolicyinstances",
				"parameters": [{
					"in": "path",
					"name": "hostedzoneid",
					"description": "For the first request to ListTrafficPolicyInstances, omit thistttvalue",
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					}
				},
				"tags": ["Traffic Policies"]
			}
		}
	},
	"definitions": []
}